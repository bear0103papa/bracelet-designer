{"version":3,"file":"static/js/234.78a99578.chunk.js","mappings":"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","sources":["components/SavedDesigns/index.js","components/SizeSelector/index.js","pages/ProfilePage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\n\nconst SavedContainer = styled.div`\n  padding: 16px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 12px;\n  font-size: 16px;\n  color: #333;\n`;\n\nconst SavedList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n`;\n\nconst SavedItem = styled.div`\n  position: relative;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background: #fff;\n  border-radius: 8px;\n  overflow: hidden;\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst PreviewContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100px;\n  background: #f5f5f5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BraceletPreview = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  border: 1px dashed #ccc;\n  border-radius: 50%;\n`;\n\nconst PreviewBead = styled.img`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  border-radius: 50%;\n  transform-origin: ${props => `${-props.radius}px ${0}px`};\n  transform: ${props => `\n    translate(-50%, -50%)\n    rotate(${props.angle}deg)\n  `};\n  left: 100%;\n  top: 50%;\n  object-fit: cover;\n`;\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background: rgba(255, 0, 0, 0.7);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.2s;\n\n  ${SavedItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst SavedDesigns = () => {\n  const { \n    currentDesign, \n    setCurrentDesign, \n    savedDesigns = [], \n    setSavedDesigns \n  } = useDesign();\n\n  const handleLoad = (design) => {\n    setCurrentDesign({\n      ...design,\n    });\n  };\n\n  const handleDelete = (e, designId) => {\n    e.stopPropagation();\n    const updatedDesigns = savedDesigns.filter(design => design.id !== designId);\n    setSavedDesigns(updatedDesigns);\n    localStorage.setItem('savedDesigns', JSON.stringify(updatedDesigns));\n  };\n\n  const renderBraceletPreview = (design) => {\n    const PREVIEW_DIAMETER = 80;\n    const wristCircumference = design.size;\n\n    return design.crystals.map((crystal, index) => {\n      let accumulatedLength = design.crystals\n        .slice(0, index)\n        .reduce((sum, c) => sum + c.size, 0);\n      \n      const angle = (accumulatedLength / wristCircumference) * 360;\n      const beadDisplaySize = (crystal.size / wristCircumference) * PREVIEW_DIAMETER * Math.PI;\n      const radius = (PREVIEW_DIAMETER - beadDisplaySize) / 2;\n      \n      return (\n        <PreviewBead\n          key={`${crystal.id}-${index}`}\n          src={crystal.image}\n          size={beadDisplaySize}\n          angle={angle}\n          radius={radius}\n          alt={crystal.name}\n          onError={(e) => {\n            e.target.src = '/assets/placeholder.jpg';\n          }}\n        />\n      );\n    });\n  };\n\n  return (\n    <SavedContainer>\n      <Title>已儲存設計</Title>\n      <SavedList>\n        {(savedDesigns || []).map(design => (\n          <SavedItem \n            key={design.id}\n            onClick={() => handleLoad(design)}\n          >\n            <PreviewContainer>\n              <BraceletPreview>\n                {renderBraceletPreview(design)}\n              </BraceletPreview>\n            </PreviewContainer>\n            <DeleteButton \n              onClick={(e) => handleDelete(e, design.id)}\n            >\n              ×\n            </DeleteButton>\n          </SavedItem>\n        ))}\n      </SavedList>\n    </SavedContainer>\n  );\n};\n\nexport default SavedDesigns; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\nimport { useState } from 'react';\n\nconst SizeSelectorContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 12px;\n  font-size: 16px;\n  color: #333;\n  display: flex;\n  align-items: center;\n`;\n\nconst UnitLabel = styled.span`\n  font-size: 14px;\n  color: #666;\n  margin-left: 5px;\n  font-weight: normal;\n`;\n\nconst SizeOptions = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst SizeButton = styled.button`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: ${props => props.active ? '#666' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#333'};\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  font-size: 16px;\n  \n  &:hover {\n    background: ${props => props.active ? '#666' : '#f0f0f0'};\n  }\n`;\n\nconst CustomButton = styled(SizeButton)`\n  width: 80px;\n  height: 50px;\n  border-radius: 25px;\n  padding: 0 15px;\n`;\n\nconst CustomInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nconst CustomInput = styled.input`\n  width: 80px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n`;\n\nconst Unit = styled.span`\n  margin-left: 8px;\n  color: #666;\n  font-size: 14px;\n`;\n\nconst SizeSelector = () => {\n  const { currentDesign, setCurrentDesign } = useDesign();\n  const [showCustomInput, setShowCustomInput] = useState(false);\n  const [customValue, setCustomValue] = useState('');\n  \n  // 手圍尺寸（cm）\n  const sizesInCm = [14, 15, 16, 17, 18];\n  \n  // 將 mm 轉換為 cm 顯示\n  const currentSizeInCm = currentDesign.size / 10;\n\n  const handleSizeChange = (sizeInCm) => {\n    // 將 cm 轉換為 mm 儲存\n    setCurrentDesign(prev => ({\n      ...prev,\n      size: sizeInCm * 10\n    }));\n    setShowCustomInput(false);\n  };\n\n  const handleCustomSize = (e) => {\n    const value = e.target.value;\n    setCustomValue(value);\n  };\n\n  const handleCustomSubmit = () => {\n    const valueInCm = parseFloat(customValue);\n    if (!isNaN(valueInCm) && valueInCm >= 8 && valueInCm <= 30) {\n      handleSizeChange(valueInCm);\n    }\n    setShowCustomInput(false);\n  };\n\n  const handleCustomClick = () => {\n    setShowCustomInput(true);\n    setCustomValue(currentSizeInCm.toString());\n  };\n\n  return (\n    <SizeSelectorContainer>\n      <Title>\n        手圍尺寸\n        <UnitLabel>(cm)</UnitLabel>\n      </Title>\n      <SizeOptions>\n        {sizesInCm.map(size => (\n          <SizeButton\n            key={size}\n            active={currentSizeInCm === size}\n            onClick={() => handleSizeChange(size)}\n          >\n            {size}\n          </SizeButton>\n        ))}\n        \n        <CustomButton onClick={handleCustomClick}>\n          自訂\n        </CustomButton>\n      </SizeOptions>\n      \n      {showCustomInput && (\n        <CustomInputContainer>\n          <CustomInput\n            type=\"number\"\n            step=\"0.1\"\n            min=\"8\"\n            max=\"30\"\n            value={customValue}\n            onChange={handleCustomSize}\n            onBlur={handleCustomSubmit}\n            autoFocus\n          />\n          <Unit>cm</Unit>\n        </CustomInputContainer>\n      )}\n    </SizeSelectorContainer>\n  );\n};\n\nexport default SizeSelector; ","import React from 'react';\nimport styled from 'styled-components';\nimport SavedDesigns from '../components/SavedDesigns';\nimport { useDesign } from '../contexts/DesignContext';\nimport SizeSelector from '../components/SizeSelector';\nimport { useState } from 'react';\n\nconst ProfileContainer = styled.div`\n  padding: 20px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n`;\n\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\n  margin-bottom: 16px;\n  color: #333;\n`;\n\nconst TotalPrice = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  margin: 15px 0;\n  text-align: right;\n  color: #333;\n`;\n\nconst OrderButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #45a049;\n  }\n`;\n\nconst OrderForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-height: 100px;\n`;\n\nconst ProfilePage = () => {\n  const { currentDesign } = useDesign();\n  const [showOrderForm, setShowOrderForm] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n\n  const calculateTotal = () => {\n    return currentDesign.crystals.reduce((sum, crystal) => sum + crystal.price, 0);\n  };\n\n  const handleOrder = () => {\n    setShowOrderForm(true);\n  };\n\n  const handleSubmitOrder = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    // 這裡可以處理訂單提交邏輯\n    setOrderSuccess(true);\n    setShowOrderForm(false);\n  };\n\n  return (\n    <ProfileContainer>\n      <Section>\n        <SavedDesigns />\n      </Section>\n      \n      <Section>\n        <Title>訂購資訊</Title>\n        <TotalPrice>\n          總金額: NT$ {calculateTotal()}\n        </TotalPrice>\n        <OrderButton onClick={handleOrder}>\n          下單\n        </OrderButton>\n        \n        {showOrderForm && (\n          <OrderForm onSubmit={handleSubmitOrder}>\n            <Input \n              name=\"name\" \n              placeholder=\"姓名\" \n              required \n            />\n            <Input \n              name=\"email\" \n              type=\"email\" \n              placeholder=\"Email\" \n              required \n            />\n            <TextArea \n              name=\"address\" \n              placeholder=\"送貨地址\" \n              required \n            />\n            <OrderButton type=\"submit\">\n              確認送出\n            </OrderButton>\n          </OrderForm>\n        )}\n        \n        {orderSuccess && (\n          <div style={{ \n            color: '#4CAF50', \n            textAlign: 'center', \n            marginTop: '10px' \n          }}>\n            訂購成功！\n          </div>\n        )}\n      </Section>\n    </ProfileContainer>\n  );\n};\n\nexport default ProfilePage; "],"names":["SavedContainer","styled","div","Title","h3","SavedList","SavedItem","PreviewContainer","BraceletPreview","PreviewBead","img","props","size","radius","angle","DeleteButton","button","SavedDesigns","currentDesign","setCurrentDesign","savedDesigns","setSavedDesigns","useDesign","renderBraceletPreview","design","wristCircumference","crystals","map","crystal","index","slice","reduce","sum","c","beadDisplaySize","Math","PI","_jsx","src","image","alt","name","onError","e","target","id","_jsxs","children","onClick","handleLoad","handleDelete","designId","stopPropagation","updatedDesigns","filter","localStorage","setItem","JSON","stringify","span","SizeButton","active","ProfileContainer","input","Section","h2","TotalPrice","OrderButton","OrderForm","form","Input","TextArea","textarea","ProfilePage","showOrderForm","setShowOrderForm","useState","orderSuccess","setOrderSuccess","price","handleOrder","onSubmit","preventDefault","FormData","placeholder","required","type","style","color","textAlign","marginTop"],"sourceRoot":""}