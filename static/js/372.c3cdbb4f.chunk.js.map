{"version":3,"file":"static/js/372.c3cdbb4f.chunk.js","mappings":"iLAEA,MAAMA,EAAgBC,EAAAA,GAAOC,GAAG;;;;;;EAQ1BC,EAAMF,EAAAA,GAAOC,GAAG;;;;;gBAKNE,GAASA,EAAMC,OAAS,UAAY;iBACnCD,GAASA,EAAMC,OAAS,OAAS;6BACrBD,GAASA,EAAMC,OAAS,UAAY;;;;;;EA8CjE,EAtCqBC,IAAsD,IAArD,gBAAEC,EAAe,iBAAEC,EAAgB,SAAEC,GAAUH,EACnE,MAAMI,EAAkBC,IACL,WAAbA,IACFC,aAAaC,WAAW,wBACxBD,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,sBACxBD,aAAaC,WAAW,gBAG1BL,EAAiBG,EAAS,EAG5B,OACEG,EAAAA,EAAAA,MAACd,EAAa,CAAAe,SAAA,EACZC,EAAAA,EAAAA,KAACb,EAAG,CACFE,OAA4B,YAApBE,EACRU,QAASA,IAAMP,EAAe,WAAWK,SAC1C,kBAGDC,EAAAA,EAAAA,KAACb,EAAG,CACFE,OAA4B,cAApBE,EACRU,QAASA,IAAMP,EAAe,aAAaK,SAC5C,kBAGCN,IACAO,EAAAA,EAAAA,KAACb,EAAG,CACFE,OAA4B,WAApBE,EACRU,QAASA,IAAMP,EAAe,UAAUK,SACzC,yBAIW,E,sBCtDGd,EAAAA,GAAOC,GAAG;;;;;EAAjC,MAOMgB,EAAWjB,EAAAA,GAAOC,GAAG;;;;;EAOrBiB,EAAclB,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBxBkB,EAAenB,EAAAA,GAAOoB,GAAG;;;;;;EAQzBC,EAAkBrB,EAAAA,GAAOC,GAAG;;;;;;EAQ5BqB,EAAetB,EAAAA,GAAOuB,MAAM;;;;;EAO5BC,EAAoBxB,EAAAA,GAAOyB,MAAM;;;;;;;;;;;EAajCC,EAAc1B,EAAAA,GAAOC,GAAG;;;;EAMxB0B,EAAc3B,EAAAA,GAAOC,GAAG;;;;EAmM9B,EA7LqB2B,KACnB,MAAM,cAAEC,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,MACrCC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,OACpCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,QAC5CG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,KAErC,MAAMK,EAAe5B,aAAa6B,QAAQ,kBAC1C,OAAOD,EAAeE,KAAKC,MAAMH,GAAgB,CAC/CI,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,MAAO,GACR,KAIHC,EAAAA,EAAAA,YAAU,KACRpC,aAAaqC,QAAQ,iBAAkBP,KAAKQ,UAAUZ,GAAS,GAC9D,CAACA,IAGJ,MAAMa,EAAgB,CACpBP,MAAO,IAAI,IAAIQ,IAAIC,EAAAA,GAASC,KAAIC,GAAKA,EAAEX,UACvCC,KAAM,CAAC,oBAAW,iBAAa,sBAC/BC,OAAQ,IAAI,IAAIM,IAAIC,EAAAA,GAASC,KAAIC,GAAKA,EAAET,WACxCC,MAAO,CAAC,OAAQ,QAAS,UAyBrBS,EAAsBA,IACnB1B,EAAcuB,SAASI,QAAO,CAACC,EAAKC,IAAYD,EAAMC,EAAQd,MAAM,GAevEe,EAA4BP,EAAAA,GAC/BQ,QAAOF,IANmBA,IACRH,IACCG,EAAQd,KAAO,IAM7BiB,CAAoBH,OAMpBrB,EAAQM,OAASe,EAAQf,QAAUN,EAAQM,UAC3CN,EAAQyB,OAASJ,EAAQI,QAAUzB,EAAQyB,UAC3CzB,EAAQO,OACS,sBAAjBP,EAAQO,KAAqBc,EAAQd,MAAQ,EAC5B,mBAAjBP,EAAQO,KAAwBc,EAAQd,KAAO,GAAKc,EAAQd,KAAO,GACnEc,EAAQd,MAAQ,QAEhBP,EAAQS,QACU,SAAlBT,EAAQS,MAAmBY,EAAQZ,OAAS,GAC1B,UAAlBT,EAAQS,MAAqBY,EAAQZ,MAAQ,IAAMY,EAAQZ,OAAS,GACpEY,EAAQZ,MAAQ,QAIrBiB,MAAK,CAACC,EAAGC,KACR,IAAKjC,EAAW,OAAO,EACvB,MAAMkC,EAA8B,QAAlB/B,EAA0B,GAAK,EACjD,OAAO6B,EAAEhC,GAAaiC,EAAEjC,GAAakC,GAAaA,CAAS,IASzDC,EAAmBT,GAAaU,IACpCA,EAAEC,aAAaC,QAAQ,UAAW7B,KAAKQ,UAAUS,GAAS,EAgC5D,OACE7C,EAAAA,EAAAA,MAAA0D,EAAAA,SAAA,CAAAzD,SAAA,EACED,EAAAA,EAAAA,MAACQ,EAAe,CAAAP,SAAA,CACb0D,OAAOC,QAAQvB,GAAeG,KAAIhD,IAAA,IAAEqE,EAAKC,GAAQtE,EAAA,OAChDQ,EAAAA,EAAAA,MAACS,EAAY,CAEXsD,MAAOvC,EAAQqC,GACfG,SAAWT,GAAM9B,EAAW,IAAID,EAAS,CAACqC,GAAMN,EAAEU,OAAOF,QAAQ9D,SAAA,EAEjEC,EAAAA,EAAAA,KAAA,UAAQ6D,MAAM,GAAE9D,SAAU,UAAR4D,EAAkB,eAC5B,SAARA,EAAiB,eACT,WAARA,EAAmB,eACnB,iBACCC,EAAQtB,KAAI0B,IACXhE,EAAAA,EAAAA,KAAA,UAAqB6D,MAAOG,EAAOjE,SAAEiE,GAAxBA,OATVL,EAWQ,KAEjB3D,EAAAA,EAAAA,KAACS,EAAiB,CAACR,QAlHEgE,KACzB,MAAMC,EAAe,CACnBtC,MAAO,GACPC,KAAM,GACNkB,MAAO,GACPhB,MAAO,IAETR,EAAW2C,GACXtE,aAAaqC,QAAQ,iBAAkBP,KAAKQ,UAAUgC,GAAc,EA0GjBnE,SAAC,iCAKlDC,EAAAA,EAAAA,KAACE,EAAQ,CAAAH,SACN6C,EAA0BN,KAAIK,IA/DLwB,MAC9B,MAAMC,EAAqBtD,EAAce,KACnCwC,EAAa7B,IACZ8B,KAAKC,IAAI,EAAGH,EAAqBC,EAAW,EA6DtBF,GAEvB,OACErE,EAAAA,EAAAA,MAACK,EAAW,CAEVF,QAASA,IA3DO0C,KAC1B,MAAM6B,EAAkB,IAAI1D,EAAcuB,SAAUM,GAC9C8B,EAAcD,EAAgB/B,QAAO,CAACC,EAAKH,IAAMG,EAAMH,EAAEV,MAAM,GAMjE4C,EAHa,MAQbA,EAAc3D,EAAce,KAC9Bd,GAAiB2D,IAAI,IAChBA,EACH7C,KAAM4C,EACNpC,SAAUmC,MAKZzD,GAAiB2D,IAAI,IAChBA,EACHrC,SAAUmC,MAEd,EAiCyBG,CAAmBhC,GAClCiC,MAAO,CACLC,QAAS,EACTC,OAAQ,WACR/E,SAAA,EAEFC,EAAAA,EAAAA,KAACI,EAAY,CACX2E,IAAKpC,EAAQqC,MACbC,IAAKtC,EAAQuC,KACbC,WAAW,EACXC,YAAahC,EAAgBT,GAC7B0C,QAAUhC,IACRA,EAAEU,OAAOgB,IAAM,kBAAkB,KAGrC/E,EAAAA,EAAAA,KAACW,EAAW,CAAAZ,SAAE4C,EAAQuC,QACtBpF,EAAAA,EAAAA,MAACc,EAAW,CAAAb,SAAA,CAAE4C,EAAQf,MAAM,MAAIe,EAAQd,KAAK,QAAMc,EAAQZ,MAAM,cAjB5DY,EAAQ2C,GAkBD,QAInB,ECvQDC,EAAgBtG,EAAAA,GAAOC,GAAG;;EAI1BsG,EAAYvG,EAAAA,GAAOwG,EAAE;;;;EAMrBvF,EAAWjB,EAAAA,GAAOC,GAAG;;;;;EAOrBwG,EAAgBzG,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgB1ByG,EAAiB1G,EAAAA,GAAOoB,GAAG;;;;;;EAQ3BC,EAAkBrB,EAAAA,GAAOC,GAAG;;;;;;EAQ5BqB,EAAetB,EAAAA,GAAOuB,MAAM;;;;;EAO5BC,EAAoBxB,EAAAA,GAAOyB,MAAM;;;;;;;;;;;EAajCkF,EAAgB3G,EAAAA,GAAOC,GAAG;;;;EAM1B2G,EAAgB5G,EAAAA,GAAOC,GAAG;;;;EA6IhC,EAvIsB4G,KACpB,MAAM,iBAAE/E,EAAgB,mBAAEgF,IAAuB/E,EAAAA,EAAAA,MAC1CC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,OACpCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,QAC5CG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,KAErC,MAAMK,EAAe5B,aAAa6B,QAAQ,oBAC1C,OAAOD,EAAeE,KAAKC,MAAMH,GAAgB,CAC/CI,MAAO,GACPoE,KAAM,GACNC,SAAU,GACVlE,MAAO,GACR,KAIHC,EAAAA,EAAAA,YAAU,KACRpC,aAAaqC,QAAQ,mBAAoBP,KAAKQ,UAAUZ,GAAS,GAChE,CAACA,IAGJ,MAAMa,EAAgB,CACpBP,MAAO,IAAI,IAAIQ,IAAI8D,EAAAA,GAAY5D,KAAIW,GAAKA,EAAErB,UAC1CoE,KAAM,IAAI,IAAI5D,IAAI8D,EAAAA,GAAY5D,KAAIW,GAAKA,EAAE+C,OAAMnD,OAAOsD,WACtDF,SAAU,IAAI,IAAI7D,IAAI8D,EAAAA,GAAY5D,KAAIW,GAAKA,EAAEgD,WAAUpD,OAAOsD,WAC9DpE,MAAO,CAAC,OAAQ,QAAS,UAyBrBqE,EAA+BF,EAAAA,GAClCrD,QAAOwD,KAEF/E,EAAQM,OAASyE,EAAUzE,QAAUN,EAAQM,UAC7CN,EAAQ0E,MAAQK,EAAUL,OAAS1E,EAAQ0E,SAC3C1E,EAAQ2E,UAAYI,EAAUJ,WAAa3E,EAAQ2E,aACnD3E,EAAQS,QACU,SAAlBT,EAAQS,MAAmBsE,EAAUtE,OAAS,GAC5B,UAAlBT,EAAQS,MAAqBsE,EAAUtE,MAAQ,IAAMsE,EAAUtE,OAAS,GACxEsE,EAAUtE,MAAQ,OAIvBiB,MAAK,CAACC,EAAGC,KACR,IAAKjC,EAAW,OAAO,EACvB,MAAMkC,EAA8B,QAAlB/B,EAA0B,GAAK,EACjD,OAAO6B,EAAEhC,GAAaiC,EAAEjC,GAAakC,GAAaA,CAAS,IAGzDC,EAAmBiD,GAAehD,IACtCA,EAAEC,aAAaC,QAAQ,UAAW7B,KAAKQ,UAAUmE,GAAW,EAc9D,OACEvG,EAAAA,EAAAA,MAACyF,EAAa,CAAAxF,SAAA,EACZC,EAAAA,EAAAA,KAACwF,EAAS,CAAAzF,SAAC,4DAEXD,EAAAA,EAAAA,MAACQ,EAAe,CAAAP,SAAA,CACb0D,OAAOC,QAAQvB,GAAeG,KAAIhD,IAAA,IAAEqE,EAAKC,GAAQtE,EAAA,OAChDQ,EAAAA,EAAAA,MAACS,EAAY,CAEXsD,MAAOvC,EAAQqC,GACfG,SAAWT,GAAM9B,EAAW,IAAID,EAAS,CAACqC,GAAMN,EAAEU,OAAOF,QAAQ9D,SAAA,EAEjEC,EAAAA,EAAAA,KAAA,UAAQ6D,MAAM,GAAE9D,SAAU,UAAR4D,EAAkB,eAC5B,SAARA,EAAiB,eACT,aAARA,EAAqB,eACrB,iBACCC,EAAQtB,KAAI0B,IACXhE,EAAAA,EAAAA,KAAA,UAAqB6D,MAAOG,EAAOjE,SAAEiE,GAAxBA,OATVL,EAWQ,KAEjB3D,EAAAA,EAAAA,KAACS,EAAiB,CAACR,QAlEEgE,KACzB,MAAMC,EAAe,CACnBtC,MAAO,GACPoE,KAAM,GACNC,SAAU,GACVlE,MAAO,IAETR,EAAW2C,GACXtE,aAAaqC,QAAQ,mBAAoBP,KAAKQ,UAAUgC,GAAc,EA0DnBnE,SAAC,iCAKlDC,EAAAA,EAAAA,KAACE,EAAQ,CAAAH,SACNqG,EAA6B9D,KAAI+D,IAE9BvG,EAAAA,EAAAA,MAAC4F,EAAa,CAEZzF,QAASA,IAzCSoG,KAE5BN,EAAmBM,GAGnBtF,GAAiB2D,IAAI,IAChBA,EACHrC,SAAU,IAAIqC,EAAKrC,SAAUgE,MAC5B,EAiCsBC,CAAqBD,GAAWtG,SAAA,EAE/CC,EAAAA,EAAAA,KAAC2F,EAAc,CACbZ,IAAKsB,EAAUrB,MACfC,IAAKoB,EAAUnB,KACfC,WAAW,EACXC,YAAahC,EAAgBiD,GAC7BhB,QAAUhC,IACRA,EAAEU,OAAOgB,IAAM,kBAAkB,KAGrC/E,EAAAA,EAAAA,KAAC4F,EAAa,CAAA7F,SAAEsG,EAAUnB,QAC1BpF,EAAAA,EAAAA,MAAC+F,EAAa,CAAA9F,SAAA,CAAEsG,EAAUzE,MAAM,MAAIyE,EAAUJ,UAAY,GAAG,MAAII,EAAUtE,MAAM,cAb5EsE,EAAUf,UAkBT,E,aCrNpB,MCDMiB,EAAgBtH,EAAAA,GAAOC,GAAG;;EAI1BsH,EAAQvH,EAAAA,GAAOwG,EAAE;;;;EAMjBgB,EAAUxH,EAAAA,GAAOC,GAAG;;EAIpBwH,EAAezH,EAAAA,GAAO0H,EAAE;;;;EAMxBC,EAAe3H,EAAAA,GAAO4H,EAAE;;;EAKxBC,EAAe7H,EAAAA,GAAO8H,EAAE;;;EAKxBC,EAAkB/H,EAAAA,GAAO8H,EAAE;;;EAK3BE,EAAchI,EAAAA,GAAOC,GAAG;;EAwD9B,EApDoBgI,KAClB,MAAM,gBAAEC,IAAoBnG,EAAAA,EAAAA,KAE5B,IAAKmG,EACH,OAAO,KAIYA,EAAgBC,YAiBrC,OACEtH,EAAAA,EAAAA,MAACyG,EAAa,CAAAxG,SAAA,EACZC,EAAAA,EAAAA,KAACwG,EAAK,CAAAzG,SAAEoH,EAAgBjC,QAExBpF,EAAAA,EAAAA,MAAC2G,EAAO,CAAA1G,SAAA,EACNC,EAAAA,EAAAA,KAAC0G,EAAY,CAAA3G,SAAC,8BACdD,EAAAA,EAAAA,MAAC8G,EAAY,CAAA7G,SAAA,EACXD,EAAAA,EAAAA,MAACgH,EAAY,CAAA/G,SAAA,CAAC,qBAAIoH,EAAgBvF,UAClC9B,EAAAA,EAAAA,MAACgH,EAAY,CAAA/G,SAAA,CAAC,qBAAIoH,EAAgBtF,KAAK,UACvC/B,EAAAA,EAAAA,MAACgH,EAAY,CAAA/G,SAAA,CAAC,qBAAIoH,EAAgBrF,WAClChC,EAAAA,EAAAA,MAACgH,EAAY,CAAA/G,SAAA,CAAC,yBAAQoH,EAAgBpF,SACrCoF,EAAgBE,SACfvH,EAAAA,EAAAA,MAACgH,EAAY,CAAA/G,SAAA,CAAC,iCAAMoH,EAAgBE,OAAOC,KAAK,aAEjDH,EAAgBI,SACfzH,EAAAA,EAAAA,MAACgH,EAAY,CAAA/G,SAAA,CAAC,qBAAIoH,EAAgBI,iBAKxCvH,EAAAA,EAAAA,KAACiH,EAAW,CAAAlH,SAnCWyH,IAErBC,MAAMC,QAAQF,GACTA,EAAalF,KAAI,CAACqF,EAAMC,KAC7B5H,EAAAA,EAAAA,KAACgH,EAAe,CAAAjH,SACb4H,GADmBC,KAIfJ,GAEFxH,EAAAA,EAAAA,KAACgH,EAAe,CAAAjH,SAAEyH,IAEpB,KAwBFK,CAAkBV,EAAgBC,iBAEvB,E,aCnFpB,MAAMU,EAAmB7I,EAAAA,GAAOC,GAAG;;;;;EAO7B6I,EAAiB9I,EAAAA,GAAOC,GAAG;;;;EAM3B8I,EAAoB/I,EAAAA,GAAOC,GAAG;;;;;;;;;EAW9B+I,EAAiBhJ,EAAAA,GAAOC,GAAG;;;;;;;EAS3BgJ,EAAcjJ,EAAAA,GAAOC,GAAG;;WAEnBE,GAASA,EAAM+I;YACd/I,GAASA,EAAM+I;;;;;;aAMd/I,GAASA,EAAMgJ;iBACXhJ,GAASA,EAAMiJ;aACnBjJ,GAASA,EAAMkJ,aACrBlJ,EAAMgJ,MAAc,UACrB,IAAIhJ,EAAMgJ;;aAEHhJ,GAASA,EAAMmJ,SAAYnJ,EAAMoJ,SAAW,EAAI,EAAMpJ,EAAMyC,KAAO,GAAK,EAAI;;mBAEtEzC,GAASA,EAAMkJ,YAAc,MAAQ;;;;;;;;;;qBAUnClJ,GAASA,EAAMkJ,YAAc,4BAA8B;;;;IAI5ElJ,GAASA,EAAMmJ,UAAY,4BACNnJ,EAAMoJ,SAAW,MAAQpJ,EAAMqJ,SAAW,IAAM,+DAE1DrJ,EAAMgJ,+BACFhJ,EAAMiJ,2BACVjJ,EAAMkJ,YAAc,IAAM,IAAIlJ,EAAMgJ,4BACrChJ,EAAMoJ,UAAYpJ,EAAMqJ,SAAW,MAAQ,cACnDrJ,EAAMqJ,SAAW,8BAAgC;EAIjDC,EAAYzJ,EAAAA,GAAOoB,GAAG;;;;mBAITjB,GAASA,EAAMkJ,YAAc,MAAQ;;;EAKlDK,EAAY1J,EAAAA,GAAOC,GAAG;;;;;;;;;;EAYtB0J,EAAY3J,EAAAA,GAAOC,GAAG;;;;;;;;;;;;aAYfE,GAASA,EAAMyJ,KAAO,EAAI;;;;;;;;;;;;;EA4DjCC,GA7CkB7J,EAAAA,GAAOC,GAAG;;;;eAInBE,GAASA,EAAMyJ,KAAO,QAAU;;;;;;;;;;;;;EAelB5J,EAAAA,GAAOC,GAAG;;;;;;;;EAUfD,EAAAA,GAAOoB,GAAG;;WAEvBjB,GAA6B,GAApBA,EAAM+I;YACd/I,GAA6B,GAApBA,EAAM+I;;;eAGZ/I,GAAS,2CAEXA,EAAMgJ,6BACFhJ,EAAMiJ;;;;EAOApJ,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;;;;;;;;GAsB9BqI,EAAmB9J,EAAAA,GAAOC,GAAG;;;;;;;;;;;;EAc7B8J,EAAqB/J,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;;;;EAkBlCuI,EAAWhK,EAAAA,GAAOC,GAAG;aACdE,GAASA,EAAMyJ,KAAO,QAAU;;;;;;;;EAUvCK,GAAQjK,EAAAA,GAAOC,GAAG;;;;;;;aAOXE,GAASA,EAAMyJ,KAAO,OAAS;;;;;;;;;EAWtCM,GAAelK,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAezBkK,GAAcnK,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;EAe3B2I,GAAsBpK,EAAAA,GAAOC,GAAG;;;;;;;;;;EAYhCoK,GAAarK,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyC1B6I,GAAuBtK,EAAAA,GAAOC,GAAG;;;EAKjCsK,GAAmBvK,EAAAA,GAAO0H,EAAE;;;;;;;EAS5B8C,GAAmBxK,EAAAA,GAAOyK,IAAI;;;;;EAO9BC,GAAqB1K,EAAAA,GAAOC,GAAG;;;;;;EAQ/B0K,GAAoB3K,EAAAA,GAAOyB,MAAM;;;;gBAIvBtB,GAASA,EAAMC,OAAS,OAAS;WACtCD,GAASA,EAAMC,OAAS,OAAS;;;;;;;;;kBAS1BD,GAASA,EAAMC,OAAS,OAAS;;EAI7CwK,IAAsB5K,EAAAA,EAAAA,IAAO2K,GAAkB;;;;;EAO/CE,GAA8B7K,EAAAA,GAAOC,GAAG;;;;;EAOxC6K,GAAqB9K,EAAAA,GAAO+K,KAAK;;;;;;;EASjCC,GAAchL,EAAAA,GAAOyK,IAAI;;;;EAMzBQ,GAAcjL,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBxBiL,GAAmBlL,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;EAehC0J,GAAenL,EAAAA,GAAOC,GAAG;;;;;;EAQzBmL,GAAepL,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;;;;;;;;EAsB5B4J,GAAsBrL,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAehCqL,GAAuBtL,EAAAA,GAAOuL,CAAC;;;;;EAO/BC,GAAuBxL,EAAAA,GAAOC,GAAG;;;EAKjCwL,GAAgBzL,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;EAc7BiK,GAAe1L,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;EA2rBlC,GA9pBuBpB,IAAyB,IAAxB,eAAEsL,GAAgBtL,EACxC,MAAM,cAAEwB,EAAa,iBAAEC,EAAgB,mBAAEgF,EAAkB,aAAE8E,EAAY,gBAAEC,IAAoB9J,EAAAA,EAAAA,MACxF+J,EAAeC,IAAoB7J,EAAAA,EAAAA,UAAS,KAC5CgH,EAAa8C,IAAkB9J,EAAAA,EAAAA,UAAS,MACxC+J,EAAaC,IAAkBhK,EAAAA,EAAAA,UAAS,OACxCiK,EAAaC,IAAkBlK,EAAAA,EAAAA,WAAS,IACxCmK,EAAYC,IAAiBpK,EAAAA,EAAAA,WAAS,IACtCqK,EAAeC,IAAoBtK,EAAAA,EAAAA,UAAS,IAC5CuK,EAAgBC,IAAqBxK,EAAAA,EAAAA,WAAS,GAE/CyK,EAAkB9K,EAAce,KAAO,IACtCgK,EAAYC,IAAiB3K,EAAAA,EAAAA,UAASyK,EAAgBG,aACtDC,EAAWC,IAAgB9K,EAAAA,EAAAA,UAAS,KACpC+K,EAAmBC,IAAwBhL,EAAAA,EAAAA,UAAS,OACpDiL,EAAmBC,IAAwBlL,EAAAA,EAAAA,WAAS,IACpDoH,EAAU+D,IAAenL,EAAAA,EAAAA,WAAS,IAClCoL,EAAaC,IAAkBrL,EAAAA,EAAAA,UAAS,OACxCsL,EAAWC,IAAgBvL,EAAAA,EAAAA,WAAS,IACpC1B,EAAUkN,KAAexL,EAAAA,EAAAA,UAASyL,OAAOC,YAAc,MACvDC,GAAiBC,KAAsB5L,EAAAA,EAAAA,WAAS,IAChD6L,GAAaC,KAAkB9L,EAAAA,EAAAA,UAAS,KACxCkD,GAAY6I,KAAiB/L,EAAAA,EAAAA,UAAS,IACtCgM,GAAmBC,KAAwBjM,EAAAA,EAAAA,WAAS,IAE3Da,EAAAA,EAAAA,YAAU,KACR,GAAIlB,EAAcuB,SAASgL,OAAS,EAAG,CACrC,MAAMjJ,EAAqBtD,EAAce,KAGnCyL,EAAkBxM,EAAcuB,SAASI,QAAO,CAACC,EAAKC,IACnDD,EAAMC,EAAQd,MACpB,GAOH,GAJAqL,GAAcI,GAIVA,EAAkBlJ,EAAoB,CAExC,MAAMmJ,EAA4C,GAAlCjJ,KAAKkJ,KAAKF,EAAkB,IAW5C,OATAG,QAAQC,IAAI,gEAActJ,cAA0BmJ,YAGpDxM,GAAiB2D,IAAI,IAChBA,EACH7C,KAAM0L,KAKV,CAGA,MAAMI,EAAa7M,EAAcuB,SAASgL,OAIpCO,EAAYxJ,EADQ,IAKpByJ,EAAmB,EAAIvJ,KAAKwJ,KAAKF,GAGjCG,EAAiB,IAAMzJ,KAAKwJ,KAAKF,GAGjCI,EAAY,GAIlB,IAAIC,EAAuB,EAC3B,MAAMC,EAAmB,GAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAYQ,IAAK,CACnC,MAAMxL,EAAU7B,EAAcuB,SAAS8L,GAOvC,IAAIhG,EAJoB,IACLxF,EAAQd,KAAO,GAGegM,EAGjD,MAAMO,EAAU,GAAKP,EACfQ,EAAU,GAAKR,EACrB1F,EAAc7D,KAAKC,IAAI6J,EAAS9J,KAAKgK,IAAInG,EAAakG,IAKtD,MACME,EADYpG,EACmB4F,GAAmB,IAAMzJ,KAAKkK,IAEnEN,EAAiBO,KAAK,CACpB9L,UACAwF,cACAoG,oBAGFN,GAAwBM,CAC1B,CAIA,MAAMG,EAAgB,KAGhBC,EAA+BV,EAAuBS,EAG5D,IAAIE,EAAe,EAEnB,IAAK,IAAIT,EAAI,EAAGA,EAAID,EAAiBb,OAAQc,IAAK,CAChD,MAAM,QAAExL,EAAO,YAAEwF,EAAW,gBAAEoG,GAAoBL,EAAiBC,GAG7D/F,EAAQwG,EAAgBL,EAAkB,EAGhDK,GAAgBL,EAAkBG,EAGlC,MAAMpG,EAAmC,gBAArB3F,EAAQhD,SAE5BqO,EAAUS,KAAK,IACV9L,EACHyF,MAAgB,IAARA,EAAeuG,EACvBtG,OAAQ0F,EACR5F,cACA0F,mBACAvF,eAEJ,CAEA0C,EAAiBgD,EACnB,MACEhD,EAAiB,IACjBkC,GAAc,GACd7B,GAAe,EACjB,GACC,CAACvK,KAEJkB,EAAAA,EAAAA,YAAU,KACR8J,EAAcF,EAAgBG,WAAW,GACxC,CAACH,KAGJ5J,EAAAA,EAAAA,YAAU,KACR,MAAM6M,EAAeA,KACnBlC,GAAYC,OAAOC,YAAc,IAAI,EAIvC,OADAD,OAAOkC,iBAAiB,SAAUD,GAC3B,IAAMjC,OAAOmC,oBAAoB,SAAUF,EAAa,GAC9D,IAEH,MA0DMG,GAAoBA,KACxBzD,GAAc,EAAM,EAqDhB0D,GAAoBrH,IACxB7G,GAAiB2D,IAAI,IAChBA,EACHrC,SAAUqC,EAAKrC,SAASQ,QAAO,CAACqM,EAAGf,IAAMA,IAAMvG,QAEjD7B,EAAmB,KAAK,EAuBpBoJ,GAAoBC,IACxB,MAAMC,EAAyB,GAAXD,EACd5K,EAAkB,IAAI1D,EAAcuB,UAG1C,IAAIiN,EAAqB9K,EAAgB/B,QAAO,CAACC,EAAKC,IAAYD,EAAMC,EAAQd,MAAM,GAGtF,KAAOyN,EAAqBD,GAAe7K,EAAgB6I,OAAS,GAAG,CAErEiC,GADuB9K,EAAgB+K,MACF1N,IACvC,CAEAd,GAAiB2D,IAAI,IAChBA,EACH7C,KAAMwN,EACNhN,SAAUmC,KACT,EAqBCgL,GAAiBA,KACrBzO,GAAiB2D,IAAI,IAChBA,EACHrC,SAAU,OAEZ2I,EAAiB,GAAG,EAGhByE,GAA2BC,IAC/B,OAAOA,GACL,IAAK,OAGH3J,EAAmBjF,EAAcuB,SAAS6J,IAC1CQ,GAAa,GACb,MACF,IAAK,OAKH,OAHAJ,GAAY,GACZE,EAAeN,QACfP,GAAkB,GAEpB,IAAK,SAEHsD,GAAiB/C,GACjB,MACF,IAAK,WAGH,YADAkB,IAAqB,GAMzBzB,GAAkB,EAAM,EA2J1B,OACE7L,EAAAA,EAAAA,MAAA0D,EAAAA,SAAA,CAAAzD,SAAA,EACEC,EAAAA,EAAAA,KAAC8H,EAAgB,CAAA/H,UACfD,EAAAA,EAAAA,MAACiI,EAAc,CAAAhI,SAAA,EACbC,EAAAA,EAAAA,KAACqJ,GAAmB,CAAAtJ,UAClBC,EAAAA,EAAAA,KAACsJ,GAAU,CAACrJ,QA3BH0P,KAEjB,MAAMC,EAAWC,KAAKC,MAAM/D,WAGtBgE,EAAe,IAChBjP,EACHwE,GAAIsK,EACJI,SAAS,IAAIH,MAAOI,eAItBnF,EAAgB,IAAID,EAAckF,GAAc,EAeRhQ,UAC9BC,EAAAA,EAAAA,KAAA,OAAK+E,IAAKmL,EAAWjL,IAAI,kCAG7BjF,EAAAA,EAAAA,KAAC8I,EAAc,CAAC7I,QAASuP,GAAezP,SAAC,6BAKxCwI,IACCzI,EAAAA,EAAAA,MAACoK,GAAW,CAAAnK,SAAA,CAAC,sEAEXC,EAAAA,EAAAA,KAACmK,GAAgB,CAAClK,QAvBLkQ,KACvB7D,GAAY,GACZE,EAAe,MACfL,EAAqB,KAAK,EAoB4BpM,SAAC,iCAMjDD,EAAAA,EAAAA,MAACkI,EAAiB,CAAAjI,SAAA,CAhIpBgL,EAAcsC,OAAS,EAAU,KAE9BtC,EAAczI,KAAI,CAAC8N,EAAMxI,KAC9B,MAAMyI,GAAazI,EAAQ,GAAKmD,EAAcsC,OACxCiD,EAAWvF,EAAcsF,GAGzBE,EAASH,EAAKhI,MAAQ9D,KAAKkK,GAAK,IAChCgC,EAASF,EAASlI,MAAQ9D,KAAKkK,GAAK,IAGpCiC,EAAUL,EAAK/H,OACfqI,EAAUJ,EAASjI,OAEnBsI,EAAKrM,KAAKsM,IAAIL,GAAUE,EACxBI,EAAKvM,KAAKwM,IAAIP,GAAUE,EACxBM,EAAKzM,KAAKsM,IAAIJ,GAAUE,EACxBM,EAAK1M,KAAKwM,IAAIN,GAAUE,EAGxBrD,EAAS/I,KAAKwJ,KAAKxJ,KAAK2M,IAAIF,EAAKJ,EAAI,GAAKrM,KAAK2M,IAAID,EAAKH,EAAI,IAC5DzI,EAAuC,IAA/B9D,KAAK4M,MAAMF,EAAKH,EAAIE,EAAKJ,GAAYrM,KAAKkK,GAGlD2C,EAAgBf,EAAKvC,iBAAmB,EAAIuC,EAAKvC,iBAAmB,EAE1E,OACE7N,EAAAA,EAAAA,KAACiI,EAAc,CAEbrD,MAAO,CACLwM,MAAO,GAAG/D,MACVgE,OAAQ,GAAGF,MACXG,KAAM,cAAcX,OACpBY,IAAK,cAAcV,OACnBW,UAAW,UAAUpJ,QACrBvD,QAAS,GACT4M,WAAY,4EART,cAAc7J,IAUnB,IAOCmD,EAAczI,KAAI,CAAC8N,EAAMxI,KAE9B,MAAMU,EAAgC,cAAlB8H,EAAKzQ,SAEzB,OACEG,EAAAA,EAAAA,MAACoI,EAAW,CAEVC,YAAaiI,EAAKjI,YAClBC,MAAOgI,EAAKhI,MACZC,OAAQ+H,EAAK/H,OACbxG,KAAMuO,EAAKvO,KACX0G,SAAUA,EACVC,SAAU+D,IAAgB3E,EAC1Ba,SAAUF,GAAY2D,IAAsBtE,GAAS2E,IAAgB3E,EACrE3H,QAAUoD,GAjUMqO,EAACtB,EAAMxI,EAAO+J,KAOpC,GALIA,GACFA,EAAMC,iBAIJrJ,EAAJ,CAEE,GAAoB,OAAhBgE,EAAsB,CAExB,MAAMsF,EAAc,IAAI/Q,EAAcuB,UAChCyP,EAAOD,EAAYtF,GAazB,OAZAsF,EAAYtF,GAAesF,EAAYjK,GACvCiK,EAAYjK,GAASkK,EAGrB/Q,EAAiB,IACZD,EACHuB,SAAUwP,IAIZrF,EAAe,WACfF,GAAY,EAEd,CAGAE,EAAe5E,EAEjB,KAxBA,CA2BA,GAAInI,EAIF,OAFA0M,EAAqBvE,QACrB+D,GAAkB,GAMpBQ,EAAqBvE,GAGrB7B,EAAmBjF,EAAcuB,SAASuF,IAG1C8E,GAAa,EAlBb,CAkBkB,EAgRIgF,CAAgBtB,EAAMxI,EAAOvE,GAC7C8B,UAAWiH,EACXhH,YAAc/B,GA/QM0O,EAAC1O,EAAGuE,KAC9B6D,EAAiBoE,KAAKC,OACtBzM,EAAEC,aAAaC,QAAQ,gBAAiBqE,EAAMmE,YAC9CR,GAAc,EAAK,EA4QOwG,CAAoB1O,EAAGuE,GAC3CoK,UAAWhD,GACXiD,WAAa5O,GAvQM6O,EAAC7O,EAAGuE,KAC7BvE,EAAEuO,iBACErJ,GAAYX,IAAU2E,GACxBJ,EAAqBvE,EACvB,EAmQyBsK,CAAmB7O,EAAGuE,GACzCuK,OAAS9O,GAjQM+O,EAAC/O,EAAGuE,KAGzB,GAFAvE,EAAEuO,iBAEErJ,GAA4B,OAAhBgE,GAAwB3E,IAAU2E,EAAa,CAE7D,MAAMsF,EAAc,IAAI/Q,EAAcuB,UAChCyP,EAAOD,EAAYtF,GAYzB,OAXAsF,EAAYtF,GAAesF,EAAYjK,GACvCiK,EAAYjK,GAASkK,EAErB/Q,GAAiB2D,IAAI,IAChBA,EACHrC,SAAUwP,MAGZvF,GAAY,GACZE,EAAe,WACfL,EAAqB,KAEvB,CAGA,MAAMkG,EAAgBhP,EAAEC,aAAagP,QAAQ,iBAC7C,GAAID,EAAe,CACjB,MAAME,EAAYC,SAASH,GAG3B,GAAIE,IAAc3K,EAAO,CACvB,MAAMiK,EAAc,IAAI/Q,EAAcuB,UAChCyP,EAAOD,EAAYU,GACzBV,EAAYU,GAAaV,EAAYjK,GACrCiK,EAAYjK,GAASkK,EAErB/Q,GAAiB2D,IAAI,IAChBA,EACHrC,SAAUwP,KAEd,CAEAtG,GAAc,EAChB,GAyNqB6G,CAAe/O,EAAGuE,GACjCU,YAAaA,EAAYvI,SAAA,EAEzBC,EAAAA,EAAAA,KAAC0I,EAAS,CACR3D,IAAKqL,EAAKpL,MACVC,IAAK,GAAGqD,EAAc,YAAc,aAAaV,IACjDU,YAAaA,EACbjD,QAAUhC,IACRoK,QAAQgF,MAAM,yBAAyBrC,EAAKpL,SAC5C3B,EAAEU,OAAOgB,IAAM,qBAAqB,KAGxC/E,EAAAA,EAAAA,KAAC2I,EAAS,MAzBLf,EA0BO,QA4DZ9H,EAAAA,EAAAA,MAACyJ,GAAoB,CAAAxJ,SAAA,EACnBD,EAAAA,EAAAA,MAAC0J,GAAgB,CAAAzJ,SAAA,CAAC,4BAEhBC,EAAAA,EAAAA,KAACyJ,GAAgB,CAAA1J,SAAC,aAEpBD,EAAAA,EAAAA,MAAC6J,GAAkB,CAAA5J,SAAA,CA3iBX,CAAC,GAAI,GAAI,GAAI,GAAI,IA4iBZuC,KAAIT,IACb7B,EAAAA,EAAAA,KAAC4J,GAAiB,CAEhBvK,OAAQuM,IAAoB/J,EAC5B5B,QAASA,IAAMkP,GAAiBtN,GAAM9B,SAErC8B,GAJIA,MAQT7B,EAAAA,EAAAA,KAAC6J,GAAmB,CAAC5J,QAlPPyS,KACxB3F,IAAmB,GACnBE,GAAerB,EAAgBG,WAAW,EAgPgBhM,SAAC,oBAKlD+M,KACChN,EAAAA,EAAAA,MAACgK,GAA2B,CAAA/J,SAAA,EAC1BC,EAAAA,EAAAA,KAAC+J,GAAkB,CACjB/D,KAAK,SACL2M,KAAK,MACLrE,IAAI,IACJ/J,IAAI,KACJV,MAAOmJ,GACPlJ,SA5QUT,IACxB,MAAMQ,EAAQR,EAAEU,OAAOF,MACvBoJ,GAAepJ,EAAM,EA2QP+O,OAxQWC,KACzB,MAAMC,EAAYC,WAAW/F,KACxBgG,MAAMF,IAAcA,GAAa,GAAKA,GAAa,IACtD3D,GAAiB2D,GAEnB/F,IAAmB,EAAM,EAoQXkG,WAAS,KAEXjT,EAAAA,EAAAA,KAACiK,GAAW,CAAAlK,SAAC,WAIjBD,EAAAA,EAAAA,MAAA,mBAAAC,SAAA,CAAiB,kCACRsE,GAAa,IAAI6O,QAAQ,GAAG,aAIvClT,EAAAA,EAAAA,KAAC4I,EAAS,CACRC,KAAMyC,EACN6H,YAnUoB9P,IAC5BA,EAAEuO,iBACFvO,EAAE+P,cAAcC,UAAUC,IAAI,YAAY,EAkUlCC,YA/ToBlQ,IAC5BA,EAAE+P,cAAcC,UAAUG,OAAO,YAAY,EA+TrCrB,OA5Te9O,IACvBA,EAAEuO,iBACFvO,EAAE+P,cAAcC,UAAUG,OAAO,aAEjC,MAAM5L,EAAQ4K,SAASnP,EAAEC,aAAagP,QAAQ,kBACzCU,MAAMpL,IACTqH,GAAiBrH,GAEnB2D,GAAc,EAAM,EAoTYxL,SACzB,4BAOJ2L,GAAwC,OAAtBQ,IAA+B3D,IAChDzI,EAAAA,EAAAA,MAACiJ,EAAgB,CAAAhJ,SAAA,EACfC,EAAAA,EAAAA,KAACgJ,EAAkB,CAAC/I,QAASA,IAAMwP,GAAwB,QAAQ1P,SAAC,8BAGpEC,EAAAA,EAAAA,KAACgJ,EAAkB,CAAC/I,QAASA,IAAMwP,GAAwB,QAAQ1P,SAAC,8BAGpEC,EAAAA,EAAAA,KAACgJ,EAAkB,CAAC/I,QAASA,IAAMwP,GAAwB,UAAU1P,SAAC,8BAGtEC,EAAAA,EAAAA,KAACgJ,EAAkB,CAAC/I,QAASA,IAAMwP,GAAwB,YAAY1P,SAAC,8BAGxEC,EAAAA,EAAAA,KAACgJ,EAAkB,CAAC/I,QAASA,IAAM0L,GAAkB,GAAO5L,SAAC,iBAK5DoN,KACCrN,EAAAA,EAAAA,MAACwK,GAAmB,CAAAvK,SAAA,EAClBC,EAAAA,EAAAA,KAACuK,GAAoB,CAAAxK,SAAC,wEACtBD,EAAAA,EAAAA,MAAC2K,GAAoB,CAAA1K,SAAA,EACnBC,EAAAA,EAAAA,KAAC0K,GAAa,CAACzK,QArQCwT,KAC5BjE,KACApC,IAAqB,GACrBzB,GAAkB,EAAM,EAkQkC5L,SAAC,kBAC/CC,EAAAA,EAAAA,KAAC2K,GAAY,CAAC1K,QAhQCyT,KAC3BtG,IAAqB,EAAM,EA+P6BrN,SAAC,2BAQvDC,EAAAA,EAAAA,KAACiJ,EAAQ,CAACJ,KAAM6C,IAAmBnD,EAAUtI,QAASA,IAAM0L,GAAkB,MAE9E3L,EAAAA,EAAAA,KAACkJ,GAAK,CAACL,KAAM4D,EAAU1M,UACrBD,EAAAA,EAAAA,MAACqJ,GAAY,CAAClJ,QAASoD,GAAKA,EAAEsQ,kBAAkB5T,SAAA,EAC9CC,EAAAA,EAAAA,KAACoJ,GAAW,CAACnJ,QAASA,IAAMyM,GAAa,GAAO3M,SAAC,UACjDC,EAAAA,EAAAA,KAACkH,EAAW,KAGZpH,EAAAA,EAAAA,MAACsK,GAAY,CAAArK,SAAA,EACXC,EAAAA,EAAAA,KAACqK,GAAY,CAACpK,QA7QI2T,KAE1BtH,GAAY,GAEZI,GAAa,EAAM,EAyQgC3M,SAAC,8BAG5CC,EAAAA,EAAAA,KAACqK,GAAY,CAACpK,QAASA,KACrBgP,GAAiB/C,GACjBQ,GAAa,EAAM,EACnB3M,SAAC,uCAMR,E,cC3rCP,MAAMwF,GAAgBtG,EAAAA,GAAOC,GAAG;;EAI1BsG,GAAYvG,EAAAA,GAAOwG,EAAE;;;;EAe3B,GAToBoO,KAEhB/T,EAAAA,EAAAA,MAACyF,GAAa,CAAAxF,SAAA,EACZC,EAAAA,EAAAA,KAACwF,GAAS,CAAAzF,SAAC,4DACXC,EAAAA,EAAAA,KAACa,EAAY,O,kICRbiT,GAAe7U,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBzB6U,GAAW9U,EAAAA,GAAOC,GAAG;;;;;EAOrB8U,GAAU/U,EAAAA,GAAOC,GAAG;;;;;;;WAOfE,GAASA,EAAMC,OAAS,UAAY;;;;;;EAwCzC4U,IAhCchV,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBRD,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBbD,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;GAgBvBgV,GAAWjV,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBrBiV,GAAQlV,EAAAA,GAAOC,GAAG;;EAIlBkV,GAAmBnV,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgB7BmV,GAAuBpV,EAAAA,GAAOC,GAAG;;;;;;EAQjCoV,GAAkBrV,EAAAA,GAAOoB,GAAG;;WAEvBjB,GAA6B,IAApBA,EAAM+I;YACd/I,GAA6B,IAApBA,EAAM+I;;;;;;EA8H3B,GAtHyB7I,IAA4C,IAA3C,gBAAEC,EAAe,iBAAEC,GAAkBF,EAC7D,MAAM,cAAEwB,IAAkBE,EAAAA,EAAAA,MACnB+J,EAAeC,IAAoB7J,EAAAA,EAAAA,UAAS,KAEnDa,EAAAA,EAAAA,YAAU,KACR,GAAIlB,EAAcuB,UAAYvB,EAAcuB,SAASgL,OAAS,EAAG,CAC/D,MAAMkH,EAAc,IAEdvG,EAAYlN,EAAcuB,SAASC,KAAI,CAACK,EAASiF,KACrD,MAAMO,EAAcxF,EAAQd,KAAO0S,EACnC,MAAO,IACF5R,EACHwF,cACD,IAGH6C,EAAiBgD,EACnB,MACEhD,EAAiB,GACnB,GACC,CAAClK,IAyCJ,OAvBAkB,EAAAA,EAAAA,YAAU,KACR4K,OAAO4H,kBAAqB7U,IAC1BH,EAAiBG,EAAS,EAG5B,MAAM8U,EAAe7U,aAAa6B,QAAQ,gBACpCiT,EAAe9U,aAAa6B,QAAQ,0BAE1C,GAAqB,SAAjBgT,GAA2BC,EAAc,CAC/B7E,KAAKC,MACE0C,SAASkC,EAAc,IACnB,MACrBlV,EAAiB,WACjBI,aAAaC,WAAW,gBACxBD,aAAaC,WAAW,0BAE5B,CAEA,MAAO,YACE+M,OAAO4H,iBAAiB,CAChC,GACA,CAAChV,KAGFQ,EAAAA,EAAAA,KAAC8T,GAAY,CAAA/T,UACXD,EAAAA,EAAAA,MAACiU,GAAQ,CAAAhU,SAAA,EACPD,EAAAA,EAAAA,MAACkU,GAAO,CACN3U,OAA4B,YAApBE,EACRU,QAASA,IAAMT,EAAiB,WAChCoF,MAAO,CAAE+P,MAAO,GAAI5U,SAAA,EAEpBC,EAAAA,EAAAA,KAACkU,GAAQ,CAAC7U,OAA4B,YAApBE,EAA8BQ,UAC9CC,EAAAA,EAAAA,KAAA,OAAK+E,IAAK6P,GAAa3P,IAAI,0BAE7BjF,EAAAA,EAAAA,KAACmU,GAAK,CAAApU,SAAC,2BAGTC,EAAAA,EAAAA,KAACoU,GAAgB,CAACxP,MAAO,CAAE+P,MAAO,GAAI5U,UACpCC,EAAAA,EAAAA,KAACqU,GAAoB,CAAAtU,SAClBgL,EAAczI,KAAI,CAAC8N,EAAMxI,KACxB,MACMiN,EAzDgBC,EAAClN,EAAOmN,KAEjC,CAAE3M,MADOR,EAAQmN,EAAS,IAAO,KAwDbD,CACflN,EACAmD,EAAcsC,QAIhB,OACErN,EAAAA,EAAAA,KAACsU,GAAe,CAEdvP,IAAKqL,EAAKpL,MACVmD,YAAaiI,EAAKjI,YAClBlD,IAAKmL,EAAKlL,KACVN,MAAO,CACL4M,UAAW,+EAEAqD,EAASzM,4EAPjB,QAAQgI,EAAK9K,MAAMsC,IAWxB,SAKV9H,EAAAA,EAAAA,MAACkU,GAAO,CACN3U,OAA4B,WAApBE,EACRU,QAASA,KAAM+U,MA7EJ,YADWrV,EA8Ec,YA5ExCC,aAAaC,WAAW,wBACxBD,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,sBACxBD,aAAaC,WAAW,qBAG1BL,EAAiBG,GARWA,KA8EwB,EAC9CiF,MAAO,CAAE+P,MAAO,GAAI5U,SAAA,EAEpBC,EAAAA,EAAAA,KAACiU,GAAU,CAAC5U,OAA4B,WAApBE,EAA6BQ,UAC/CC,EAAAA,EAAAA,KAAA,OAAK+E,IAAKkQ,GAAYhQ,IAAI,0BAE5BjF,EAAAA,EAAAA,KAACmU,GAAK,CAAApU,SAAC,8BAGE,E,cCnQnB,MAAMmV,GAASjW,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;;;;aAgBftB,GAASA,EAAM+V,QAAU,EAAI;gBAC1B/V,GAASA,EAAM+V,QAAU,UAAY;;;;;;;;;EA+CrD,GApC0BC,KACxB,MAAOC,EAAWC,IAAgBnU,EAAAA,EAAAA,WAAS,IAG3Ca,EAAAA,EAAAA,YAAU,KACR,MAAMuT,EAAmBA,KAEnB3I,OAAO4I,YAAc,IACvBF,GAAa,GAEbA,GAAa,EACf,EAMF,OAHA1I,OAAOkC,iBAAiB,SAAUyG,GAG3B,IAAM3I,OAAOmC,oBAAoB,SAAUwG,EAAiB,GAClE,IAUH,OACEvV,EAAAA,EAAAA,KAACkV,GAAM,CAACjV,QARUwV,KAClB7I,OAAO8I,SAAS,CACdnE,IAAK,EACLoE,SAAU,UACV,EAI4BR,QAASE,EAAUtV,SACO,UAE/C,ECjDP6V,GAAa3W,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;EAkBvB2W,GAAY5W,EAAAA,GAAOC,GAAG;;;;;;;;EAUtB4W,GAAa7W,EAAAA,GAAOC,GAAG;;;;;;;;;;;EAavBF,GAAgBC,EAAAA,GAAOC,GAAG;;;EAK1B6W,GAAsB9W,EAAAA,GAAOC,GAAG;;;;;;;;;EAWhC8W,GAAwB/W,EAAAA,GAAOC,GAAG;;;;;;;;;;EAYlC+W,GAAahX,EAAAA,GAAOC,GAAG;;;;;;EAQvBgX,GAAcjX,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;EAe3ByV,GAAYlX,EAAAA,GAAOmX,IAAI;;;;;EAOvBC,GAAQpX,EAAAA,GAAO+K,KAAK;;;;EAMpBsM,GAAWrX,EAAAA,GAAOsX,QAAQ;;;;;;EAQ1BC,GAAiBvX,EAAAA,GAAOC,GAAG;;;;;;;EAS3BuX,GAAwBxX,EAAAA,GAAOuL,CAAC;;;;;;EAmMtC,GA3LiBkM,KACf,MAAOnX,EAAiBoX,IAAsBxV,EAAAA,EAAAA,UAAS,YAChDyV,EAAeC,IAAoB1V,EAAAA,EAAAA,WAAS,IAC5C2V,EAAcC,IAAmB5V,EAAAA,EAAAA,WAAS,IAC3C,cAAEL,EAAa,gBAAEqG,EAAiBpG,iBAAkBiW,IAAwBhW,EAAAA,EAAAA,MAC3EvB,EAAUkN,IAAexL,EAAAA,EAAAA,UAASyL,OAAOC,YAAc,KAExDoK,IADWC,EAAAA,GAAAA,OACKC,EAAAA,EAAAA,QAAO,QAE7BnV,EAAAA,EAAAA,YAAU,KACR,MAAM6M,EAAeA,KACnBlC,EAAYC,OAAOC,YAAc,IAAI,EAIvC,OADAD,OAAOkC,iBAAiB,SAAUD,GAC3B,IAAMjC,OAAOmC,oBAAoB,SAAUF,EAAa,GAC9D,KAEH7M,EAAAA,EAAAA,YAAU,KACRyL,QAAQC,IAAI,+BAAgCnO,EAAgB,GAC3D,CAACA,KAEJyC,EAAAA,EAAAA,YAAU,KACR,MAAMoV,EAAmBxX,aAAa6B,QAAQ,sBACxC4V,EAAazX,aAAa6B,QAAQ,eAEf,SAArB2V,IACFxX,aAAaC,WAAW,sBAExB8W,EAAmB,UAEnBlJ,QAAQC,IAAI,8EAAwB2J,GACtC,GACC,IAEH,MAsBMrC,EAAwBrV,IAC5B8N,QAAQC,IAAI,wBAAyB/N,GACrCgX,EAAmBhX,GACF,WAAbA,IACFC,aAAaC,WAAW,wBACxBD,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,sBACxBD,aAAaC,WAAW,eAGxB,GAIJmC,EAAAA,EAAAA,YAAU,MACJvC,GAAiC,WAApBF,GAAoD,YAApBA,GAAqD,cAApBA,GAAuD,YAApBA,GACnH+X,YAAW,KAAO,IAADC,EACM,QAArBA,EAAAN,EAAcO,eAAO,IAAAD,GAArBA,EAAuBE,eAAe,CAAE9B,SAAU,SAAU+B,MAAO,SAAU,GAC5E,EACL,GACC,CAACnY,EAAiBE,IAgCrB,OACEK,EAAAA,EAAAA,MAAC8V,GAAU,CAAA7V,SAAA,EACTD,EAAAA,EAAAA,MAAC+V,GAAS,CAACpW,SAAUA,EAAUF,gBAAiBA,EAAgBQ,SAAA,EAC9DC,EAAAA,EAAAA,KAAC2X,GAAc,CAAC/M,eAAgBA,UAEhC9K,EAAAA,EAAAA,MAACkW,GAAqB,CAAAjW,SAAA,EACpBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJD,EAAAA,EAAAA,MAACmW,GAAU,CAAAlW,SAAA,CAAC,2BAjFG6X,MAAO,IAADC,EAC3B,IAAK/W,IAAkBA,EAAcuB,SACnC,OAAO,EAET,MAAMyV,GAA0C,QAAzBD,EAAA/W,EAAciX,mBAAW,IAAAF,OAAA,EAAzBA,EAA2BpV,QAAO,CAACC,EAAKsV,IAAQtV,EAAMsV,EAAIjW,OAAO,KAAM,EAE9F,OADqBjB,EAAcuB,SAASI,QAAO,CAACC,EAAKC,IAAYD,EAAMC,EAAQZ,OAAO,GACpE+V,CAAc,EA2ERF,OAEpBhB,IAAkBE,IACjB9W,EAAAA,EAAAA,KAACkW,GAAW,CAACjW,QA3EJgY,KAClBpB,GAAiB,GACjBE,GAAgB,EAAM,EAyEqBhX,SAAC,iBAGrC6W,IACC9W,EAAAA,EAAAA,MAACqW,GAAS,CAAC+B,SA1EM7U,IACzBA,EAAEuO,iBACF,MAAMuG,EAAW,IAAIC,SAAS/U,EAAEU,QAChC0J,QAAQC,IAAI,mBAAoBjK,OAAO4U,YAAYF,IACnDpB,GAAgB,GAChBF,GAAiB,EAAM,EAqEwB9W,SAAA,EACrCC,EAAAA,EAAAA,KAACqW,GAAK,CACJnR,KAAK,OACLoT,YAAY,eACZC,UAAQ,KAEVvY,EAAAA,EAAAA,KAACqW,GAAK,CACJnR,KAAK,QACLc,KAAK,QACLsS,YAAY,QACZC,UAAQ,KAEVvY,EAAAA,EAAAA,KAACsW,GAAQ,CACPpR,KAAK,UACLoT,YAAY,2BACZC,UAAQ,KAEVvY,EAAAA,EAAAA,KAACkW,GAAW,CAAClQ,KAAK,SAAQjG,SAAC,gCAM9B+W,IACC9W,EAAAA,EAAAA,KAACwW,GAAc,CAAAzW,SAAC,iFAMpBC,EAAAA,EAAAA,KAAC+V,GAAmB,CAAAhW,UAClBC,EAAAA,EAAAA,KAACwY,GAAAA,EAAY,UAIjB1Y,EAAAA,EAAAA,MAACgW,GAAU,CAAC2C,IAAKxB,EAAclX,SAAA,CAC5BN,IACCO,EAAAA,EAAAA,KAACyW,GAAqB,CAAA1W,SAAC,gGAIzBC,EAAAA,EAAAA,KAAChB,GAAa,CAAAe,UACZC,EAAAA,EAAAA,KAAC0Y,EAAY,CACXnZ,gBAAiBA,EACjBC,iBAAkBwV,EAClBvV,SAAUA,OAGZA,GA5EqBkZ,MAE3B,OADAlL,QAAQC,IAAI,0CAA2CnO,GAC/CA,GACN,IAAK,UAML,QACE,OAAOS,EAAAA,EAAAA,KAAC6T,GAAW,IALrB,IAAK,YACH,OAAO7T,EAAAA,EAAAA,KAAC8F,EAAa,IACvB,IAAK,SACH,OAAO9F,EAAAA,EAAAA,KAAC4Y,EAAAA,QAAU,IAGtB,EAiEkBD,GACblZ,GA7FqBoZ,MAE1B,OADApL,QAAQC,IAAI,yCAA0CnO,GAC9CA,GACN,IAAK,UACH,OAAOS,EAAAA,EAAAA,KAACwY,GAAAA,EAAY,IACtB,IAAK,UAML,QACE,OAAOxY,EAAAA,EAAAA,KAAC6T,GAAW,IALrB,IAAK,YACH,OAAO7T,EAAAA,EAAAA,KAAC8F,EAAa,IACvB,IAAK,SACH,OAAO9F,EAAAA,EAAAA,KAAC4Y,EAAAA,QAAU,IAGtB,EAgFiBC,MAGdpZ,IACCO,EAAAA,EAAAA,KAAC8Y,GAAgB,CACfvZ,gBAAiBA,EACjBC,iBAAkBwV,KAItBhV,EAAAA,EAAAA,KAACoV,GAAiB,MACP,C,gECtUjB,MAAM2D,EAAiB9Z,EAAAA,GAAOC,GAAG;;;;;;;EAS3BsH,EAAQvH,EAAAA,GAAO0H,EAAE;;;;;;EAQjBqS,EAAY/Z,EAAAA,GAAOC,GAAG;;;;;;;EAStB+Z,EAAYha,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBtBkV,EAAmBnV,EAAAA,GAAOC,GAAG;;;;;;;;;EAW7Bga,EAAkBja,EAAAA,GAAOC,GAAG;;;;;;;;;;;EAa5Bia,EAAcla,EAAAA,GAAOoB,GAAG;;WAEnBjB,GAASA,EAAMyC;YACdzC,GAASA,EAAMyC;;;;;;eAMZzC,GAAS,2CAEXA,EAAMgJ,6BACFhJ,EAAMiJ,0BACTjJ,EAAMgJ;EAIdgR,EAAena,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;;;;;;;;IAoB9BuY;;;;;;;EASEI,EAAepa,EAAAA,GAAOC,GAAG;;;;;EA0F/B,EAnFqBsZ,KACnB,MAAM,cACJ1X,EAAa,iBACbC,EAAgB,aAChB8J,EAAe,GAAE,gBACjBC,IACE9J,EAAAA,EAAAA,KAeEsY,EAAyBC,IAC7B,IAAKA,IAAWA,EAAOlX,UAAuC,IAA3BkX,EAAOlX,SAASgL,OACjD,OAAO,KAET,MAIMM,EAAa4L,EAAOlX,SAASgL,OAEnC,OAAOkM,EAAOlX,SAASC,KAAI,CAACK,EAASiF,KACnC,MAAMQ,EAASR,EAAQ+F,EAAc,IAG/B6L,EARc,GAQoB,GADpBlV,KAAKgK,IAAI,EAAG3L,EAAQd,KAAO,IAG/C,OACE7B,EAAAA,EAAAA,KAACmZ,EAAW,CAEVpU,IAAKpC,EAAQqC,MACbnD,KAAM2X,EACNpR,MAAOA,EACPC,OAlBiB,GAmBjBpD,IAAKtC,EAAQuC,MAAQ,OACrBG,QAAUhC,IACRA,EAAEU,OAAOgB,IAAM,kBAAkB,GAP9B,GAAGpC,EAAQ2C,IAAMsC,KAASA,IAS/B,GAEJ,EAGJ,OACE9H,EAAAA,EAAAA,MAACiZ,EAAc,CAAAhZ,SAAA,EACbC,EAAAA,EAAAA,KAACwG,EAAK,CAAAzG,SAAC,mCACN8K,GAAgBA,EAAawC,OAAS,GACrCrN,EAAAA,EAAAA,KAACgZ,EAAS,CAAAjZ,SACP8K,EAAavI,KAAIiX,IAChBzZ,EAAAA,EAAAA,MAACmZ,EAAS,CAERhZ,QAASA,IArDDsZ,KAClBxY,EAAiB,IACZwY,GACH,EAkDuBE,CAAWF,GAAQxZ,SAAA,EAElCC,EAAAA,EAAAA,KAACoU,EAAgB,CAAArU,UACfC,EAAAA,EAAAA,KAACkZ,EAAe,CAAAnZ,SACbuZ,EAAsBC,QAG3BvZ,EAAAA,EAAAA,KAACoZ,EAAY,CACXnZ,QAAUoD,GAvDHqW,EAACrW,EAAGuM,KACvBvM,EAAEsQ,kBACF,MAAMgG,EAAiB9O,EAAahI,QAAO0W,GAAUA,EAAOjU,KAAOsK,IACnE9E,EAAgB6O,GAChB/Z,aAAaqC,QAAQ,eAAgBP,KAAKQ,UAAUyX,GAAgB,EAmDxCD,CAAarW,EAAGkW,EAAOjU,IAAIvF,SAC5C,WAVIwZ,EAAOjU,SAiBlBtF,EAAAA,EAAAA,KAACqZ,EAAY,CAAAtZ,SAAC,iDAED,C,8FCrMSd,EAAAA,GAAOC,GAAG;;EAI1BD,EAAAA,GAAO0H,EAAE;;;;;;EAQL1H,EAAAA,GAAOyK,IAAI;;;;;EAOTzK,EAAAA,GAAOC,GAAG;;;;EAnB9B,MAyBM0a,EAAa3a,EAAAA,GAAOyB,MAAM;;;;gBAIhBtB,GAASA,EAAMC,OAAS,OAAS;WACtCD,GAASA,EAAMC,OAAS,OAAS;;;;;;;;;kBAS1BD,GAASA,EAAMC,OAAS,OAAS;;ECpC7Cwa,IDwCe5a,EAAAA,EAAAA,IAAO2a,EAAW;;;;;EAOV3a,EAAAA,GAAOC,GAAG;;;;EAMnBD,EAAAA,GAAO+K,KAAK;;;;;;;EASnB/K,EAAAA,GAAOyK,IAAI;;;;EC9DCzK,EAAAA,GAAOC,GAAG;;;;;GAO7BuH,EAAUxH,EAAAA,GAAOC,GAAG;;EAIpBsH,EAAQvH,EAAAA,GAAOwG,EAAE;;;;EAMjBwQ,EAAahX,EAAAA,GAAOC,GAAG;;;;;;EAQvBgX,EAAcjX,EAAAA,GAAOyB,MAAM;;;;;;;;;;;;;EAe3ByV,EAAYlX,EAAAA,GAAOmX,IAAI;;;;;EAOvBC,EAAQpX,EAAAA,GAAO+K,KAAK;;;;EAMpBsM,EAAWrX,EAAAA,GAAOsX,QAAQ;;;;;EAiFhC,EA1EoBuD,KAClB,MAAM,cAAEhZ,IAAkBE,EAAAA,EAAAA,MACnB4V,EAAeC,IAAoB1V,EAAAA,EAAAA,WAAS,IAC5C2V,EAAcC,IAAmB5V,EAAAA,EAAAA,WAAS,GAkBjD,OACErB,EAAAA,EAAAA,MAAC+Z,EAAgB,CAAA9Z,SAAA,EACfC,EAAAA,EAAAA,KAACyG,EAAO,CAAA1G,UACNC,EAAAA,EAAAA,KAACwY,EAAAA,EAAY,OAGf1Y,EAAAA,EAAAA,MAAC2G,EAAO,CAAA1G,SAAA,EACNC,EAAAA,EAAAA,KAACwG,EAAK,CAAAzG,SAAC,8BACPD,EAAAA,EAAAA,MAACmW,EAAU,CAAAlW,SAAA,CAAC,2BAvBTe,EAAcuB,SAASI,QAAO,CAACC,EAAKC,IAAYD,EAAMC,EAAQZ,OAAO,OA0BxE/B,EAAAA,EAAAA,KAACkW,EAAW,CAACjW,QAvBCgY,KAClBpB,GAAiB,EAAK,EAsBgB9W,SAAC,iBAIlC6W,IACC9W,EAAAA,EAAAA,MAACqW,EAAS,CAAC+B,SAxBQ7U,IACzBA,EAAEuO,iBACe,IAAIwG,SAAS/U,EAAEU,QAEhCgT,GAAgB,GAChBF,GAAiB,EAAM,EAmBsB9W,SAAA,EACrCC,EAAAA,EAAAA,KAACqW,EAAK,CACJnR,KAAK,OACLoT,YAAY,eACZC,UAAQ,KAEVvY,EAAAA,EAAAA,KAACqW,EAAK,CACJnR,KAAK,QACLc,KAAK,QACLsS,YAAY,QACZC,UAAQ,KAEVvY,EAAAA,EAAAA,KAACsW,EAAQ,CACPpR,KAAK,UACLoT,YAAY,2BACZC,UAAQ,KAEVvY,EAAAA,EAAAA,KAACkW,EAAW,CAAClQ,KAAK,SAAQjG,SAAC,gCAM9B+W,IACC9W,EAAAA,EAAAA,KAAA,OAAK4E,MAAO,CACVhD,MAAO,UACPmY,UAAW,SACXC,UAAW,QACXja,SAAC,wCAKU,C","sources":["components/CategoryTabs/index.js","components/CrystalTable/index.js","pages/AccessoryPage.js","components/CategoryContent/index.js","components/ProductInfo/index.js","components/ProductDisplay/index.js","pages/CrystalPage.js","components/MobileNavigation/index.js","components/ScrollToTopButton.js","pages/MainPage.js","components/SavedDesigns/index.js","components/SizeSelector/index.js","pages/ProfilePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst Tab = styled.div`\n  flex: 1;\n  padding: 15px;\n  text-align: center;\n  cursor: pointer;\n  background: ${props => props.active ? '#f0f0f0' : 'white'};\n  font-weight: ${props => props.active ? 'bold' : 'normal'};\n  border-bottom: 2px solid ${props => props.active ? '#4a90e2' : 'transparent'};\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: #f5f5f5;\n  }\n`;\n\nconst CategoryTabs = ({ currentCategory, onCategoryChange, isMobile }) => {\n  const handleTabClick = (category) => {\n    if (category === 'helper') {\n      localStorage.removeItem('crystal_color_filter');\n      localStorage.removeItem('filter_timestamp');\n      localStorage.removeItem('redirect_to_helper');\n      localStorage.removeItem('helper_page');\n    }\n    \n    onCategoryChange(category);\n  };\n  \n  return (\n    <TabsContainer>\n      <Tab \n        active={currentCategory === 'crystal'} \n        onClick={() => handleTabClick('crystal')}\n      >\n        水晶\n      </Tab>\n      <Tab \n        active={currentCategory === 'accessory'} \n        onClick={() => handleTabClick('accessory')}\n      >\n        配件\n      </Tab>\n      {!isMobile && (\n        <Tab \n          active={currentCategory === 'helper'} \n          onClick={() => handleTabClick('helper')}\n        >\n          小幫手\n        </Tab>\n      )}\n    </TabsContainer>\n  );\n};\n\nexport default CategoryTabs; ","import styled from 'styled-components';\nimport { crystals } from '../../data/crystals';\nimport { useDesign } from '../../contexts/DesignContext';\nimport { useState, useEffect } from 'react';\n\nconst TableContainer = styled.div`\n  overflow-y: auto;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n\nconst GridView = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  gap: 16px;\n  padding: 16px;\n`;\n\nconst CrystalCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  }\n`;\n\nconst CrystalImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n  cursor: pointer;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 16px;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst FilterSelect = styled.select`\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-width: 120px;\n`;\n\nconst ClearFilterButton = styled.button`\n  padding: 8px 16px;\n  background: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e0e0e0;\n  }\n`;\n\nconst CrystalName = styled.div`\n  margin-top: 8px;\n  font-size: 12px;\n  text-align: center;\n`;\n\nconst CrystalInfo = styled.div`\n  font-size: 10px;\n  color: #666;\n  text-align: center;\n`;\n\nconst CrystalTable = () => {\n  const { currentDesign, setCurrentDesign } = useDesign();\n  const [sortField, setSortField] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [filters, setFilters] = useState(() => {\n    // 從 localStorage 讀取保存的篩選條件\n    const savedFilters = localStorage.getItem('crystalFilters');\n    return savedFilters ? JSON.parse(savedFilters) : {\n      color: '',\n      size: '',\n      energy: '',\n      price: ''\n    };\n  });\n\n  // 當篩選條件變化時，保存到 localStorage\n  useEffect(() => {\n    localStorage.setItem('crystalFilters', JSON.stringify(filters));\n  }, [filters]);\n\n  // 獲取所有唯一的篩選選項\n  const filterOptions = {\n    color: [...new Set(crystals.map(c => c.color))],\n    size: ['小(≤8mm)', '中(8-12mm)', '大(≥12mm)'],\n    energy: [...new Set(crystals.map(c => c.energy))],\n    price: ['0-10', '11-15', '16-20']\n  };\n\n  const handleSort = (field) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // 清除所有篩選條件\n  const handleClearFilters = () => {\n    const emptyFilters = {\n      color: '',\n      size: '',\n      power: '',\n      price: ''\n    };\n    setFilters(emptyFilters);\n    localStorage.setItem('crystalFilters', JSON.stringify(emptyFilters));\n  };\n\n  // 計算目前已使用的長度\n  const calculateUsedLength = () => {\n    return currentDesign.crystals.reduce((sum, crystal) => sum + crystal.size, 0);\n  };\n\n  // 檢查是否超出最大限制 (30cm = 300mm)\n  const isExceedingMaxLimit = () => {\n    const usedLength = calculateUsedLength();\n    return usedLength >= 300; // 30cm 轉換為 mm\n  };\n\n  // 檢查添加特定水晶後是否會超出最大限制\n  const wouldExceedMaxLimit = (crystal) => {\n    const usedLength = calculateUsedLength();\n    return usedLength + crystal.size > 300; // 30cm 轉換為 mm\n  };\n\n  const filteredAndSortedCrystals = crystals\n    .filter(crystal => {\n      // 首先檢查是否會超出最大限制\n      if (wouldExceedMaxLimit(crystal)) {\n        return false;\n      }\n      \n      // 然後應用其他篩選條件\n      return (\n        (!filters.color || crystal.color === filters.color) &&\n        (!filters.power || crystal.power === filters.power) &&\n        (!filters.size || (\n          filters.size === '小(≤8mm)' ? crystal.size <= 8 :\n          filters.size === '中(8-12mm)' ? (crystal.size > 8 && crystal.size < 12) :\n          crystal.size >= 12\n        )) &&\n        (!filters.price || (\n          filters.price === '0-10' ? crystal.price <= 10 :\n          filters.price === '11-15' ? (crystal.price > 10 && crystal.price <= 15) :\n          crystal.price > 15\n        ))\n      );\n    })\n    .sort((a, b) => {\n      if (!sortField) return 0;\n      const direction = sortDirection === 'asc' ? 1 : -1;\n      return a[sortField] > b[sortField] ? direction : -direction;\n    });\n\n  const calculateRemainingSpace = () => {\n    const wristCircumference = currentDesign.size;\n    const usedLength = calculateUsedLength();\n    return Math.max(0, wristCircumference - usedLength);\n  };\n\n  const handleDragStart = (crystal) => (e) => {\n    e.dataTransfer.setData('crystal', JSON.stringify(crystal));\n  };\n\n  const handleCrystalClick = (crystal) => {\n    const currentCrystals = [...currentDesign.crystals, crystal];\n    const totalLength = currentCrystals.reduce((sum, c) => sum + c.size, 0);\n    \n    // 增加 30cm (300mm) 的最大限制\n    const MAX_SIZE = 300; // 30cm 轉換為 mm\n    \n    // 如果總長度超過最大限制，則不添加水晶\n    if (totalLength > MAX_SIZE) {\n      return; // 超過最大限制，不執行任何操作\n    }\n    \n    // 如果總長度超過當前手圍尺寸但未超過最大限制\n    if (totalLength > currentDesign.size) {\n      setCurrentDesign(prev => ({\n        ...prev,\n        size: totalLength,\n        crystals: currentCrystals\n      }));\n    } \n    // 如果沒有超過當前手圍尺寸，則正常添加水晶\n    else {\n      setCurrentDesign(prev => ({\n        ...prev,\n        crystals: currentCrystals\n      }));\n    }\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        {Object.entries(filterOptions).map(([key, options]) => (\n          <FilterSelect\n            key={key}\n            value={filters[key]}\n            onChange={(e) => setFilters({...filters, [key]: e.target.value})}\n          >\n            <option value=\"\">{key === 'color' ? '色系' : \n            key === 'size' ? '尺寸' :\n            key === 'energy' ? '能量' :\n            '價格'}</option>\n            {options.map(option => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </FilterSelect>\n        ))}\n        <ClearFilterButton onClick={handleClearFilters}>\n          清除篩選\n        </ClearFilterButton>\n      </FilterContainer>\n\n      <GridView>\n        {filteredAndSortedCrystals.map(crystal => {\n          const remainingSpace = calculateRemainingSpace();\n          \n          return (\n            <CrystalCard\n              key={crystal.id}\n              onClick={() => handleCrystalClick(crystal)}\n              style={{\n                opacity: 1,\n                cursor: 'pointer'\n              }}\n            >\n              <CrystalImage\n                src={crystal.image}\n                alt={crystal.name}\n                draggable={true}\n                onDragStart={handleDragStart(crystal)}\n                onError={(e) => {\n                  e.target.src = '/placeholder.jpg';\n                }}\n              />\n              <CrystalName>{crystal.name}</CrystalName>\n              <CrystalInfo>{crystal.color} | {crystal.size}mm | {crystal.price}元</CrystalInfo>\n            </CrystalCard>\n          );\n        })}\n      </GridView>\n    </>\n  );\n};\n\nexport default CrystalTable; ","import styled from 'styled-components';\nimport { Accessories } from '../data/crystals';\nimport { useState, useEffect } from 'react';\nimport { useDesign } from '../contexts/DesignContext';\n\nconst PageContainer = styled.div`\n  padding: 20px;\n`;\n\nconst PageTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n  text-align: center;\n`;\n\nconst GridView = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  gap: 16px;\n  padding: 16px;\n`;\n\nconst AccessoryCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  }\n`;\n\nconst AccessoryImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n  cursor: pointer;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 16px;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst FilterSelect = styled.select`\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-width: 120px;\n`;\n\nconst ClearFilterButton = styled.button`\n  padding: 8px 16px;\n  background: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e0e0e0;\n  }\n`;\n\nconst AccessoryName = styled.div`\n  margin-top: 8px;\n  font-size: 12px;\n  text-align: center;\n`;\n\nconst AccessoryInfo = styled.div`\n  font-size: 10px;\n  color: #666;\n  text-align: center;\n`;\n\nconst AccessoryPage = () => {\n  const { setCurrentDesign, setSelectedCrystal } = useDesign();\n  const [sortField, setSortField] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [filters, setFilters] = useState(() => {\n    // 從 localStorage 讀取保存的篩選條件\n    const savedFilters = localStorage.getItem('accessoryFilters');\n    return savedFilters ? JSON.parse(savedFilters) : {\n      color: '',\n      type: '',\n      material: '',\n      price: ''\n    };\n  });\n\n  // 當篩選條件變化時，保存到 localStorage\n  useEffect(() => {\n    localStorage.setItem('accessoryFilters', JSON.stringify(filters));\n  }, [filters]);\n\n  // 獲取所有唯一的篩選選項\n  const filterOptions = {\n    color: [...new Set(Accessories.map(a => a.color))],\n    type: [...new Set(Accessories.map(a => a.type).filter(Boolean))],\n    material: [...new Set(Accessories.map(a => a.material).filter(Boolean))],\n    price: ['0-10', '11-15', '16-20']\n  };\n\n  const handleSort = (field) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // 清除所有篩選條件\n  const handleClearFilters = () => {\n    const emptyFilters = {\n      color: '',\n      type: '',\n      material: '',\n      price: ''\n    };\n    setFilters(emptyFilters);\n    localStorage.setItem('accessoryFilters', JSON.stringify(emptyFilters));\n  };\n\n  // 篩選及排序配件\n  const filteredAndSortedAccessories = Accessories\n    .filter(accessory => {\n      return (\n        (!filters.color || accessory.color === filters.color) &&\n        (!filters.type || accessory.type === filters.type) &&\n        (!filters.material || accessory.material === filters.material) &&\n        (!filters.price || (\n          filters.price === '0-10' ? accessory.price <= 10 :\n          filters.price === '11-15' ? (accessory.price > 10 && accessory.price <= 15) :\n          accessory.price > 15\n        ))\n      );\n    })\n    .sort((a, b) => {\n      if (!sortField) return 0;\n      const direction = sortDirection === 'asc' ? 1 : -1;\n      return a[sortField] > b[sortField] ? direction : -direction;\n    });\n\n  const handleDragStart = (accessory) => (e) => {\n    e.dataTransfer.setData('crystal', JSON.stringify(accessory));\n  };\n\n  const handleAccessoryClick = (accessory) => {\n    // 設置選中的配件\n    setSelectedCrystal(accessory);\n    \n    // 添加到設計中\n    setCurrentDesign(prev => ({\n      ...prev,\n      crystals: [...prev.crystals, accessory]\n    }));\n  };\n\n  return (\n    <PageContainer>\n      <PageTitle>精美配件，點綴手鍊</PageTitle>\n      \n      <FilterContainer>\n        {Object.entries(filterOptions).map(([key, options]) => (\n          <FilterSelect\n            key={key}\n            value={filters[key]}\n            onChange={(e) => setFilters({...filters, [key]: e.target.value})}\n          >\n            <option value=\"\">{key === 'color' ? '色系' : \n            key === 'type' ? '類型' :\n            key === 'material' ? '材質' :\n            '價格'}</option>\n            {options.map(option => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </FilterSelect>\n        ))}\n        <ClearFilterButton onClick={handleClearFilters}>\n          清除篩選\n        </ClearFilterButton>\n      </FilterContainer>\n\n      <GridView>\n        {filteredAndSortedAccessories.map(accessory => {\n          return (\n            <AccessoryCard\n              key={accessory.id}\n              onClick={() => handleAccessoryClick(accessory)}\n            >\n              <AccessoryImage\n                src={accessory.image}\n                alt={accessory.name}\n                draggable={true}\n                onDragStart={handleDragStart(accessory)}\n                onError={(e) => {\n                  e.target.src = '/placeholder.jpg';\n                }}\n              />\n              <AccessoryName>{accessory.name}</AccessoryName>\n              <AccessoryInfo>{accessory.color} | {accessory.material || ''} | {accessory.price}元</AccessoryInfo>\n            </AccessoryCard>\n          );\n        })}\n      </GridView>\n    </PageContainer>\n  );\n};\n\nexport default AccessoryPage; ","import CrystalTable from '../CrystalTable';\nimport AccessoryPage from '../../pages/AccessoryPage';\nimport HelperPage from '../../pages/HelperPage';\n\nconst CategoryContent = ({ currentCategory }) => {\n  switch (currentCategory) {\n    case 'crystal':\n      return <CrystalTable />;\n    case 'accessory':\n      return <AccessoryPage />;\n    case 'helper':\n      return <HelperPage />;\n    default:\n      return <CrystalTable />;\n  }\n};\n\nexport default CategoryContent; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\n\nconst InfoContainer = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  font-size: 24px;\n  color: #333;\n  margin-bottom: 16px;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 16px;\n  color: #666;\n  margin-bottom: 8px;\n`;\n\nconst PropertyList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst PropertyItem = styled.li`\n  margin-bottom: 8px;\n  color: #333;\n`;\n\nconst DescriptionItem = styled.li`\n  margin-bottom: 8px;\n  color: #333;\n`;\n\nconst Description = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst ProductInfo = () => {\n  const { selectedCrystal } = useDesign();\n\n  if (!selectedCrystal) {\n    return null;\n  }\n\n  // 確保 description 存在，如果不存在則提供默認值\n  const descriptions = selectedCrystal.description || [];\n\n  const renderDescription = (descriptions) => {\n    // 檢查 descriptions 是否為陣列\n    if (Array.isArray(descriptions)) {\n      return descriptions.map((desc, index) => (\n        <DescriptionItem key={index}>\n          {desc}\n        </DescriptionItem>\n      ));\n    } else if (descriptions) {\n      // 如果是字串，直接顯示\n      return <DescriptionItem>{descriptions}</DescriptionItem>;\n    }\n    return null;\n  };\n\n  return (\n    <InfoContainer>\n      <Title>{selectedCrystal.name}</Title>\n      \n      <Section>\n        <SectionTitle>基本資訊</SectionTitle>\n        <PropertyList>\n          <PropertyItem>色系：{selectedCrystal.color}</PropertyItem>\n          <PropertyItem>尺寸：{selectedCrystal.size} mm</PropertyItem>\n          <PropertyItem>能量：{selectedCrystal.energy}</PropertyItem>\n          <PropertyItem>價格：NT$ {selectedCrystal.price}</PropertyItem>\n          {selectedCrystal.zodiac && (\n            <PropertyItem>適合星座：{selectedCrystal.zodiac.join('、')}</PropertyItem>\n          )}\n          {selectedCrystal.chakra && (\n            <PropertyItem>脈輪：{selectedCrystal.chakra}</PropertyItem>\n          )}\n        </PropertyList>\n      </Section>\n\n      <Description>\n        {renderDescription(selectedCrystal.description)}\n      </Description>\n    </InfoContainer>\n  );\n};\n\nexport default ProductInfo; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport ProductInfo from '../ProductInfo';\nimport heartIcon from '../../assets/Logo/heart.png';\n\nconst DisplayContainer = styled.div`\n  padding: 20px;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 500px;\n`;\n\nconst BraceletContainer = styled.div`\n  position: absolute;\n  top: calc(50% + 90px);\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 250px;\n  height: 250px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n`;\n\nconst ConnectionLine = styled.div`\n  position: absolute;\n  background-color: rgba(255, 255, 255, 0.7);\n  height: 2px;\n  transform-origin: left center;\n  z-index: 0;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n`;\n\nconst CrystalBead = styled.div`\n  position: absolute;\n  width: ${props => props.displaySize}px;\n  height: ${props => props.displaySize}px;\n  left: 50%;\n  top: 50%;\n  transform-origin: center;\n  transform: \n    translate(-50%, -50%)\n    rotate(${props => props.angle}deg)\n    translateX(${props => props.radius}px)\n    rotate(${props => props.isAccessory ? \n      (props.angle > 180 ? '270deg' : '270deg') : // 根據角度調整配件朝向\n      `-${props.angle}deg`});\n  transition: all 0.3s ease;\n  z-index: ${props => props.moveMode ? (props.isSource ? 3 : 2) : (props.size > 10 ? 2 : 1)};\n  pointer-events: auto;\n  border-radius: ${props => props.isAccessory ? '10%' : '50%'};\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 40%;\n    border-radius: ${props => props.isAccessory ? '10% 10% 0 0 / 20% 20% 0 0' : '50% 50% 0 0 / 100% 100% 0 0'};\n    pointer-events: none;\n  }\n  \n  ${props => props.moveMode && `\n    filter: brightness(${props.isSource ? '1.2' : props.isTarget ? '1' : '0.7'});\n    transform: translate(-50%, -50%)\n      rotate(${props.angle}deg)\n      translateX(${props.radius}px)\n      rotate(${props.isAccessory ? '0' : `-${props.angle}`}deg)\n      scale(${props.isSource || props.isTarget ? '1.1' : '1'});\n    ${props.isTarget ? 'outline: 2px solid #4a90e2;' : ''}\n  `}\n`;\n\nconst BeadImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${props => props.isAccessory ? '10%' : '50%'};\n  position: relative;\n  display: block;\n`;\n\nconst BeadGloss = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 50%;\n  box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.5);\n  background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.3), transparent 70%);\n  pointer-events: none;\n`;\n\nconst TrashIcon = styled.div`\n  position: absolute;\n  bottom: -20px;\n  left: 30%;\n  transform: translateX(-50%);\n  width: 40px;\n  height: 40px;\n  background: rgba(255, 0, 0, 0.1);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => props.show ? 1 : 0};\n  transition: all 0.3s ease;\n  cursor: pointer;\n  \n  &:hover {\n    background: rgba(255, 0, 0, 0.2);\n    transform: translateX(-50%) scale(1.1);\n  }\n  \n  &.drag-over {\n    background: rgba(255, 0, 0, 0.3);\n    transform: translateX(-50%) scale(1.2);\n  }\n`;\n\nconst FloatingPreview = styled.div`\n  display: none;\n  \n  @media (max-width: 767px) {\n    display: ${props => props.show ? 'block' : 'none'};\n    position: fixed;\n    right: 20px;\n    bottom: 20px;\n    width: 100px;\n    height: 100px;\n    background: white;\n    border-radius: 50%;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n    z-index: 1000;\n    overflow: hidden;\n    cursor: pointer;\n  }\n`;\n\nconst MiniPreviewContainer = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MiniCrystalBead = styled.img`\n  position: absolute;\n  width: ${props => props.displaySize * 0.4}px;\n  height: ${props => props.displaySize * 0.4}px;\n  border-radius: 50%;\n  transform-origin: center;\n  transform: ${props => `\n    translate(-50%, -50%)\n    rotate(${props.angle}deg)\n    translateX(${props.radius}px)\n  `};\n  left: 50%;\n  top: 50%;\n  object-fit: cover;\n`;\n\nconst ClearAllButton = styled.button`\n  position: absolute;\n  top: 90px;\n  left: 10px;\n  padding: 8px 16px;\n  background: rgba(255, 0, 0, 0.1);\n  border: none;\n  border-radius: 4px;\n  color: #ff4444;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: block;\n  \n  &:hover {\n    background: rgba(255, 0, 0, 0.2);\n  }\n  \n  @media (max-width: 767px) {\n    display: none;\n  }\n`;\n\nconst MobileActionMenu = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.2);\n  z-index: 1001;\n  width: 80%;\n  max-width: 300px;\n  overflow: hidden;\n`;\n\nconst MobileActionButton = styled.button`\n  width: 100%;\n  padding: 15px;\n  border: none;\n  background: white;\n  text-align: center;\n  font-size: 16px;\n  border-bottom: 1px solid #eee;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &:active {\n    background: #f5f5f5;\n  }\n`;\n\nconst Backdrop = styled.div`\n  display: ${props => props.show ? 'block' : 'none'};\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: ${props => props.show ? 'flex' : 'none'};\n  justify-content: center;\n  align-items: center;\n  z-index: 1100;\n  \n  @media (max-width: 767px) {\n    align-items: flex-start;\n    padding-top: 20%;\n  }\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  position: relative;\n  width: 90%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow-y: auto;\n  \n  @media (max-width: 767px) {\n    max-height: 70vh;\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 100px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n  \n  &:hover {\n    color: #333;\n  }\n`;\n\nconst SaveButtonContainer = styled.div`\n  position: absolute;\n  top: 90px;\n  right: 10px;\n  z-index: 10;\n  \n  @media (min-width: 768px) {\n    top: 95px;\n    right: 15px;\n  }\n`;\n\nconst SaveButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: #666;\n  transition: all 0.3s ease;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    transform: scale(1.1);\n  }\n  \n  &:hover::after {\n    content: \"儲存樣式\";\n    position: absolute;\n    bottom: -30px;\n    left: 50%;\n    transform: translateX(-50%);\n    background: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 5px 10px;\n    border-radius: 4px;\n    font-size: 14px;\n    white-space: nowrap;\n  }\n  \n  img {\n    width: 24px;\n    height: 24px;\n    \n    @media (min-width: 768px) {\n      width: 28px;\n      height: 28px;\n    }\n  }\n`;\n\n// 添加手圍尺寸選擇器相關樣式，使用不同的變數名稱避免衝突\nconst ProductSizeContainer = styled.div`\n  margin: 15px 0;\n  text-align: center;\n`;\n\nconst ProductSizeTitle = styled.h3`\n  font-size: 16px;\n  color: #333;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ProductUnitLabel = styled.span`\n  font-size: 14px;\n  color: #666;\n  margin-left: 5px;\n  font-weight: normal;\n`;\n\nconst ProductSizeOptions = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nconst ProductSizeButton = styled.button`\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  background: ${props => props.active ? '#666' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#333'};\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  font-size: 16px;\n  \n  &:hover {\n    background: ${props => props.active ? '#666' : '#f0f0f0'};\n  }\n`;\n\nconst ProductCustomButton = styled(ProductSizeButton)`\n  width: 70px;\n  height: 45px;\n  border-radius: 22.5px;\n  padding: 0 15px;\n`;\n\nconst ProductCustomInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst ProductCustomInput = styled.input`\n  width: 80px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n`;\n\nconst ProductUnit = styled.span`\n  margin-left: 8px;\n  color: #666;\n  font-size: 14px;\n`;\n\nconst MoveModeTip = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(74, 144, 226, 0.9);\n  color: white;\n  padding: 8px 12px;\n  border-radius: 20px;\n  font-size: 14px;\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst CancelMoveButton = styled.button`\n  background: white;\n  color: #4a90e2;\n  border: none;\n  border-radius: 15px;\n  padding: 4px 10px;\n  margin-top: 5px;\n  font-size: 12px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #f0f0f0;\n  }\n`;\n\nconst ModalActions = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n`;\n\nconst ActionButton = styled.button`\n  background: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  \n  &:hover {\n    background: #3a80d2;\n  }\n  \n  &:nth-child(2) {\n    background: #ff6b6b;\n    \n    &:hover {\n      background: #ff5252;\n    }\n  }\n`;\n\nconst DeleteConfirmDialog = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.95);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  z-index: 10;\n`;\n\nconst DeleteConfirmMessage = styled.p`\n  font-size: 16px;\n  color: #333;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst DeleteConfirmButtons = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nconst ConfirmButton = styled.button`\n  padding: 8px 20px;\n  background: #ff6b6b;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #ff5252;\n  }\n`;\n\nconst CancelButton = styled.button`\n  padding: 8px 20px;\n  background: #f0f0f0;\n  color: #333;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #e0e0e0;\n  }\n`;\n\n// 修正 processImageUrl 函數\nconst processImageUrl = (url) => {\n  // 如果 URL 為空或未定義，返回空字符串\n  if (!url) return '';\n  \n  // 如果 URL 已經是完整的 URL，則直接返回\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    return url;\n  }\n  \n  // 如果 URL 是相對路徑，則直接返回，不添加任何前綴\n  // React 會自動從 public 目錄加載\n  return url;\n};\n\nconst ProductDisplay = ({ onCrystalClick }) => {\n  const { currentDesign, setCurrentDesign, setSelectedCrystal, savedDesigns, setSavedDesigns } = useDesign();\n  const [beadPositions, setBeadPositions] = useState([]);\n  const [displaySize, setDisplaySize] = useState(200);\n  const [draggedBead, setDraggedBead] = useState(null);\n  const [isSpaceFull, setIsSpaceFull] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartTime, setDragStartTime] = useState(0);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const sizesInCm = [14, 15, 16, 17, 18];\n  const currentSizeInCm = currentDesign.size / 10;\n  const [inputValue, setInputValue] = useState(currentSizeInCm.toString());\n  const [sizeError, setSizeError] = useState('');\n  const [selectedBeadIndex, setSelectedBeadIndex] = useState(null);\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n  const [moveMode, setMoveMode] = useState(false);\n  const [sourceIndex, setSourceIndex] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [showCustomInput, setShowCustomInput] = useState(false);\n  const [customValue, setCustomValue] = useState('');\n  const [usedLength, setUsedLength] = useState(0);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n  useEffect(() => {\n    if (currentDesign.crystals.length > 0) {\n      const wristCircumference = currentDesign.size;\n      \n      // 計算實際使用的長度（水晶長度加總）\n      const totalUsedLength = currentDesign.crystals.reduce((sum, crystal) => {\n        return sum + crystal.size;\n      }, 0);\n      \n      // 更新使用的長度狀態\n      setUsedLength(totalUsedLength);\n      \n\n      // 如果水晶總長度超出手圍尺寸，自動調整手圍尺寸\n      if (totalUsedLength > wristCircumference) {\n        // 設置新的手圍尺寸，稍微大於水晶總長度\n        const newSize = Math.ceil(totalUsedLength / 10) * 10; // 向上取整到最接近的整數厘米\n        \n        console.log(`自動調整手圍尺寸：從 ${wristCircumference}mm 到 ${newSize}mm`);\n        \n        // 更新設計的手圍尺寸\n        setCurrentDesign(prev => ({\n          ...prev,\n          size: newSize\n        }));\n        \n        // 提前返回，等待下一次渲染\n        return;\n      }\n\n      // 根據手圍尺寸優化水晶大小與排列\n      const totalBeads = currentDesign.crystals.length;\n      \n      // 計算手圍尺寸與標準尺寸的比例\n      const standardWristSize = 160; // 標準手圍尺寸(mm)\n      const sizeRatio = wristCircumference / standardWristSize;\n      \n      // 使用反比例關係調整水晶大小 - 手圍越大，水晶相對越小\n      // 這樣可以確保水晶數量增加時，整體效果更加美觀\n      const sizeAdjustFactor = 1 / Math.sqrt(sizeRatio);\n      \n      // 根據手圍尺寸調整半徑 - 手圍越大，半徑越大\n      const adjustedRadius = 120 * Math.sqrt(sizeRatio);\n      \n      // 計算每個水晶的位置和大小\n      const positions = [];\n      \n      // 計算水晶在圓上的均勻分佈角度 - 但要考慮水晶大小\n      // 首先計算所有水晶的總角度佔用\n      let totalAngleOccupation = 0;\n      const angleOccupations = [];\n      \n      for (let i = 0; i < totalBeads; i++) {\n        const crystal = currentDesign.crystals[i];\n        \n        // 根據水晶大小計算顯示尺寸\n        const baseDisplaySize = 45; // 基準顯示尺寸(px)\n        const sizeFactor = crystal.size / 8; // 相對於基準水晶大小(8mm)的比例\n        \n        // 計算顯示尺寸 - 手圍越大，水晶相對越小\n        let displaySize = baseDisplaySize * sizeFactor * sizeAdjustFactor;\n        \n        // 限制在合理範圍內\n        const minSize = 25 * sizeAdjustFactor;\n        const maxSize = 60 * sizeAdjustFactor;\n        displaySize = Math.max(minSize, Math.min(displaySize, maxSize));\n        \n        // 計算水晶在圓上的角度佔用 - 根據水晶大小和半徑\n        // 使用弧長公式：角度(弧度) = 弧長 / 半徑\n        // 弧長近似為水晶直徑\n        const arcLength = displaySize;\n        const angleOccupation = (arcLength / adjustedRadius) * (180 / Math.PI);\n        \n        angleOccupations.push({\n          crystal,\n          displaySize,\n          angleOccupation\n        });\n        \n        totalAngleOccupation += angleOccupation;\n      }\n      \n      // 計算重疊係數 - 使水晶看起來緊密串連\n      // 重疊係數越大，水晶重疊越多\n      const overlapFactor = 1.25;\n      \n      // 調整總角度佔用，考慮重疊\n      const adjustedTotalAngleOccupation = totalAngleOccupation / overlapFactor;\n      \n      // 計算每個水晶的角度位置\n      let currentAngle = 0;\n      \n      for (let i = 0; i < angleOccupations.length; i++) {\n        const { crystal, displaySize, angleOccupation } = angleOccupations[i];\n        \n        // 計算角度 - 考慮水晶大小和重疊\n        const angle = currentAngle + (angleOccupation / 2);\n        \n        // 更新當前角度\n        currentAngle += angleOccupation / overlapFactor;\n        \n        // 判斷是否為配件\n        const isAccessory = crystal.category === 'Accessories';\n        \n        positions.push({\n          ...crystal,\n          angle: (angle * 360) / adjustedTotalAngleOccupation,\n          radius: adjustedRadius,\n          displaySize,\n          sizeAdjustFactor,\n          isAccessory\n        });\n      }\n      \n      setBeadPositions(positions);\n    } else {\n      setBeadPositions([]);\n      setUsedLength(0);\n      setIsSpaceFull(false);\n    }\n  }, [currentDesign]);\n\n  useEffect(() => {\n    setInputValue(currentSizeInCm.toString());\n  }, [currentSizeInCm]);\n\n  // 監聽窗口大小變化\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 767);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleBeadClick = (bead, index, event) => {\n    // 如果事件對象存在，則阻止默認行為\n    if (event) {\n      event.preventDefault();\n    }\n    \n    // 如果處於移動模式\n    if (moveMode) {\n      // 如果已經選擇了源水晶（即 sourceIndex 不為 null）\n      if (sourceIndex !== null) {\n        // 移動水晶\n        const newCrystals = [...currentDesign.crystals];\n        const temp = newCrystals[sourceIndex];\n        newCrystals[sourceIndex] = newCrystals[index];\n        newCrystals[index] = temp;\n        \n        // 更新設計\n        setCurrentDesign({\n          ...currentDesign,\n          crystals: newCrystals\n        });\n        \n        // 重置移動模式\n        setSourceIndex(null);\n        setMoveMode(false);\n        return;\n      }\n      \n      // 如果還沒有選擇源水晶\n      setSourceIndex(index);\n      return;\n    }\n    \n    // 檢查是否為移動設備\n    if (isMobile) {\n      // 在移動設備上，選擇水晶並顯示操作菜單\n      setSelectedBeadIndex(index);\n      setShowMobileMenu(true);\n      return;\n    }\n    \n    // 桌面版的原有邏輯（非移動模式）\n    // 設置選中的水晶索引\n    setSelectedBeadIndex(index);\n    \n    // 設置選中的水晶，用於在 ProductInfo 中顯示\n    setSelectedCrystal(currentDesign.crystals[index]);\n    \n    // 顯示模態框\n    setShowModal(true);\n  };\n\n  const handleBeadDragStart = (e, index) => {\n    setDragStartTime(Date.now());\n    e.dataTransfer.setData('moveBeadIndex', index.toString());\n    setIsDragging(true);\n  };\n\n  const handleBeadDragEnd = () => {\n    setIsDragging(false);\n  };\n\n  const handleBeadDragOver = (e, index) => {\n    e.preventDefault();\n    if (moveMode && index !== sourceIndex) {\n      setSelectedBeadIndex(index);\n    }\n  };\n\n  const handleBeadDrop = (e, index) => {\n    e.preventDefault();\n    \n    if (moveMode && sourceIndex !== null && index !== sourceIndex) {\n      // 交換位置\n      const newCrystals = [...currentDesign.crystals];\n      const temp = newCrystals[sourceIndex];\n      newCrystals[sourceIndex] = newCrystals[index];\n      newCrystals[index] = temp;\n\n      setCurrentDesign(prev => ({\n        ...prev,\n        crystals: newCrystals\n      }));\n      \n      setMoveMode(false);\n      setSourceIndex(null);\n      setSelectedBeadIndex(null);\n      return;\n    }\n    \n    // 處理拖放水晶的邏輯\n    const moveBeadIndex = e.dataTransfer.getData('moveBeadIndex');\n    if (moveBeadIndex) {\n      const fromIndex = parseInt(moveBeadIndex);\n      \n      // 直接交換位置，不再計算角度\n      if (fromIndex !== index) {\n        const newCrystals = [...currentDesign.crystals];\n        const temp = newCrystals[fromIndex];\n        newCrystals[fromIndex] = newCrystals[index];\n        newCrystals[index] = temp;\n\n        setCurrentDesign(prev => ({\n          ...prev,\n          crystals: newCrystals\n        }));\n      }\n      \n      setIsDragging(false);\n    }\n  };\n\n  const handleBeadRemove = (index) => {\n    setCurrentDesign(prev => ({\n      ...prev,\n      crystals: prev.crystals.filter((_, i) => i !== index)\n    }));\n    setSelectedCrystal(null);\n  };\n\n  const handleTrashDragEnter = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.add('drag-over');\n  };\n\n  const handleTrashDragLeave = (e) => {\n    e.currentTarget.classList.remove('drag-over');\n  };\n\n  const handleTrashDrop = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n    \n    const index = parseInt(e.dataTransfer.getData('moveBeadIndex'));\n    if (!isNaN(index)) {\n      handleBeadRemove(index);\n    }\n    setIsDragging(false);\n  };\n\n  const handleSizeChange = (sizeInCm) => {\n    const newSizeInMm = sizeInCm * 10;\n    const currentCrystals = [...currentDesign.crystals];\n    \n    // 計算目前水晶總長度\n    let totalCrystalLength = currentCrystals.reduce((sum, crystal) => sum + crystal.size, 0);\n    \n    // 如果新的手圍尺寸小於目前水晶總長度，從後面開始移除水晶\n    while (totalCrystalLength > newSizeInMm && currentCrystals.length > 0) {\n      const removedCrystal = currentCrystals.pop();\n      totalCrystalLength -= removedCrystal.size;\n    }\n\n    setCurrentDesign(prev => ({\n      ...prev,\n      size: newSizeInMm,\n      crystals: currentCrystals\n    }));\n  };\n\n  const handleCustomSize = (e) => {\n    const value = e.target.value;\n    setCustomValue(value);\n  };\n\n  const handleCustomSubmit = () => {\n    const valueInCm = parseFloat(customValue);\n    if (!isNaN(valueInCm) && valueInCm >= 8 && valueInCm <= 30) {\n      handleSizeChange(valueInCm);\n    }\n    setShowCustomInput(false);\n  };\n\n  const handleCustomClick = () => {\n    setShowCustomInput(true);\n    setCustomValue(currentSizeInCm.toString());\n  };\n\n  const handleClearAll = () => {\n    setCurrentDesign(prev => ({\n      ...prev,\n      crystals: []\n    }));\n    setBeadPositions([]);\n  };\n\n  const handleMobileActionClick = (action) => {\n    switch(action) {\n      case 'info':\n        // 顯示水晶詳情\n        // 設置選中的水晶，用於在 ProductInfo 中顯示\n        setSelectedCrystal(currentDesign.crystals[selectedBeadIndex]);\n        setShowModal(true);\n        break;\n      case 'move':\n        // 進入移動模式\n        setMoveMode(true);\n        setSourceIndex(selectedBeadIndex);\n        setShowMobileMenu(false); // 關閉菜單，但保持移動模式\n        return; // 提前返回，不執行下面的 setShowMobileMenu(false)\n      case 'delete':\n        // 刪除選中的水晶\n        handleBeadRemove(selectedBeadIndex);\n        break;\n      case 'clearAll':\n        // 顯示確認對話框而不是直接刪除\n        setShowDeleteConfirm(true);\n        return; // 提前返回，不關閉菜單\n      default:\n        break;\n    }\n    // 關閉操作菜單\n    setShowMobileMenu(false);\n  };\n\n  const handleConfirmClearAll = () => {\n    handleClearAll();\n    setShowDeleteConfirm(false);\n    setShowMobileMenu(false);\n  };\n\n  const handleCancelClearAll = () => {\n    setShowDeleteConfirm(false);\n  };\n\n  const handleMoveBeadClick = () => {\n    // 進入移動模式\n    setMoveMode(true);\n    // 關閉模態框\n    setShowModal(false);\n  };\n\n  // 修改添加水晶的函數，確保自動調整手圍尺寸\n  const handleAddCrystal = (crystal) => {\n    // 檢查是否還有剩餘空間\n    const currentCrystals = [...currentDesign.crystals];\n    const currentUsedLength = currentCrystals.reduce((sum, c) => sum + c.size, 0);\n    const remainingSpace = currentDesign.size - currentUsedLength;\n    \n    // 如果剩餘空間不足，自動調整手圍尺寸\n    if (crystal.size > remainingSpace) {\n      const newSize = currentDesign.size + (crystal.size - remainingSpace) + 2; // 加2mm作為緩衝\n      \n      // 更新設計，同時添加新水晶和調整手圍尺寸\n      setCurrentDesign(prev => ({\n        ...prev,\n        size: newSize,\n        crystals: [...prev.crystals, crystal]\n      }));\n      \n      console.log(`添加水晶後自動調整手圍尺寸：從 ${currentDesign.size}mm 到 ${newSize}mm`);\n    } else {\n      // 如果空間足夠，直接添加水晶\n      setCurrentDesign(prev => ({\n        ...prev,\n        crystals: [...prev.crystals, crystal]\n      }));\n    }\n  };\n\n  // 修改 renderConnectionLines 函數，使連接線更加隱蔽\n  const renderConnectionLines = () => {\n    if (beadPositions.length < 2) return null;\n    \n    return beadPositions.map((bead, index) => {\n      const nextIndex = (index + 1) % beadPositions.length;\n      const nextBead = beadPositions[nextIndex];\n      \n      // 計算兩個水晶的位置\n      const angle1 = bead.angle * Math.PI / 180;\n      const angle2 = nextBead.angle * Math.PI / 180;\n      \n      // 計算水晶邊緣的位置，而不是中心點\n      const radius1 = bead.radius;\n      const radius2 = nextBead.radius;\n      \n      const x1 = Math.cos(angle1) * radius1;\n      const y1 = Math.sin(angle1) * radius1;\n      const x2 = Math.cos(angle2) * radius2;\n      const y2 = Math.sin(angle2) * radius2;\n      \n      // 計算連線長度和角度\n      const length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      const angle = Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\n      \n      // 根據手圍尺寸調整連接線的粗細\n      const lineThickness = bead.sizeAdjustFactor ? 1 * bead.sizeAdjustFactor : 1;\n      \n      return (\n        <ConnectionLine \n          key={`connection-${index}`}\n          style={{\n            width: `${length}px`,\n            height: `${lineThickness}px`,\n            left: `calc(50% + ${x1}px)`,\n            top: `calc(50% + ${y1}px)`,\n            transform: `rotate(${angle}deg)`,\n            opacity: 0.3, // 降低透明度，使連接線更加隱蔽\n            background: 'linear-gradient(to right, rgba(255,255,255,0.7), rgba(220,220,220,0.7))'\n          }}\n        />\n      );\n    });\n  };\n\n  // 修改 renderCrystals 函數，確保配件長邊朝外\n  const renderCrystals = () => {\n    return beadPositions.map((bead, index) => {\n      // 判斷是否為配件 - 修正category識別\n      const isAccessory = bead.category === 'accessory';\n      \n      return (\n        <CrystalBead\n          key={index}\n          displaySize={bead.displaySize}\n          angle={bead.angle}\n          radius={bead.radius}\n          size={bead.size}\n          moveMode={moveMode}\n          isSource={sourceIndex === index}\n          isTarget={moveMode && selectedBeadIndex === index && sourceIndex !== index}\n          onClick={(e) => handleBeadClick(bead, index, e)}\n          draggable={isDraggingEnabled}\n          onDragStart={(e) => handleBeadDragStart(e, index)}\n          onDragEnd={handleBeadDragEnd}\n          onDragOver={(e) => handleBeadDragOver(e, index)}\n          onDrop={(e) => handleBeadDrop(e, index)}\n          isAccessory={isAccessory}\n        >\n          <BeadImage \n            src={bead.image} \n            alt={`${isAccessory ? 'Accessory' : 'Crystal'} ${index}`}\n            isAccessory={isAccessory}\n            onError={(e) => {\n              console.error(`Failed to load image: ${bead.image}`);\n              e.target.src = 'default-crystal.png';\n            }}\n          />\n          <BeadGloss />\n        </CrystalBead>\n      );\n    });\n  };\n\n  // 添加 handleSave 函數\n  const handleSave = () => {\n    // 生成唯一ID\n    const designId = Date.now().toString();\n    \n    // 創建新的設計對象\n    const designToSave = {\n      ...currentDesign,\n      id: designId,\n      savedAt: new Date().toISOString()\n    };\n    \n    // 更新已保存的設計列表\n    setSavedDesigns([...savedDesigns, designToSave]);\n  };\n\n  // 添加 handleCancelMove 函數\n  const handleCancelMove = () => {\n    setMoveMode(false);\n    setSourceIndex(null);\n    setSelectedBeadIndex(null);\n  };\n\n  return (\n    <>\n      <DisplayContainer>\n        <ImageContainer>\n          <SaveButtonContainer>\n            <SaveButton onClick={handleSave}>\n              <img src={heartIcon} alt=\"儲存樣式\" />\n            </SaveButton>\n          </SaveButtonContainer>\n          <ClearAllButton onClick={handleClearAll}>\n            清除全部\n          </ClearAllButton>\n          \n          {/* 添加移動模式提示和取消按鈕 */}\n          {moveMode && (\n            <MoveModeTip>\n              請選擇要交換位置的水晶\n              <CancelMoveButton onClick={handleCancelMove}>\n                取消移動\n              </CancelMoveButton>\n            </MoveModeTip>\n          )}\n          \n          <BraceletContainer>\n            {/* 渲染連接線 */}\n            {renderConnectionLines()}\n            \n            {/* 渲染水晶 */}\n            {renderCrystals()}\n          </BraceletContainer>\n          \n          {/* 手圍尺寸選擇器 */}\n          <ProductSizeContainer>\n            <ProductSizeTitle>\n              手圍尺寸\n              <ProductUnitLabel>(cm)</ProductUnitLabel>\n            </ProductSizeTitle>\n            <ProductSizeOptions>\n              {sizesInCm.map(size => (\n                <ProductSizeButton\n                  key={size}\n                  active={currentSizeInCm === size}\n                  onClick={() => handleSizeChange(size)}\n                >\n                  {size}\n                </ProductSizeButton>\n              ))}\n              \n              <ProductCustomButton onClick={handleCustomClick}>\n                自訂\n              </ProductCustomButton>\n            </ProductSizeOptions>\n            \n            {showCustomInput && (\n              <ProductCustomInputContainer>\n                <ProductCustomInput\n                  type=\"number\"\n                  step=\"0.1\"\n                  min=\"8\"\n                  max=\"30\"\n                  value={customValue}\n                  onChange={handleCustomSize}\n                  onBlur={handleCustomSubmit}\n                  autoFocus\n                />\n                <ProductUnit>cm</ProductUnit>\n              </ProductCustomInputContainer>\n            )}\n            \n            <totalUsedLength>\n              目前長度：{(usedLength / 10).toFixed(1)} cm\n            </totalUsedLength>\n          </ProductSizeContainer>\n          \n          <TrashIcon \n            show={isDragging} \n            onDragEnter={handleTrashDragEnter}\n            onDragLeave={handleTrashDragLeave}\n            onDrop={handleTrashDrop}\n          >\n            🗑️\n          </TrashIcon>\n        </ImageContainer>\n      </DisplayContainer>\n      \n      {/* 移動設備操作菜單 */}\n      {showMobileMenu && selectedBeadIndex !== null && !moveMode && (\n        <MobileActionMenu>\n          <MobileActionButton onClick={() => handleMobileActionClick('info')}>\n            顯示資訊\n          </MobileActionButton>\n          <MobileActionButton onClick={() => handleMobileActionClick('move')}>\n            移動位置\n          </MobileActionButton>\n          <MobileActionButton onClick={() => handleMobileActionClick('delete')}>\n            刪除水晶\n          </MobileActionButton>\n          <MobileActionButton onClick={() => handleMobileActionClick('clearAll')}>\n            全部刪除\n          </MobileActionButton>\n          <MobileActionButton onClick={() => setShowMobileMenu(false)}>\n            取消\n          </MobileActionButton>\n          \n          {/* 確認刪除對話框 */}\n          {showDeleteConfirm && (\n            <DeleteConfirmDialog>\n              <DeleteConfirmMessage>確定要刪除所有水晶嗎？</DeleteConfirmMessage>\n              <DeleteConfirmButtons>\n                <ConfirmButton onClick={handleConfirmClearAll}>確定</ConfirmButton>\n                <CancelButton onClick={handleCancelClearAll}>取消</CancelButton>\n              </DeleteConfirmButtons>\n            </DeleteConfirmDialog>\n          )}\n        </MobileActionMenu>\n      )}\n      \n      {/* 背景遮罩 */}\n      <Backdrop show={showMobileMenu && !moveMode} onClick={() => setShowMobileMenu(false)} />\n\n      <Modal show={showModal}>\n        <ModalContent onClick={e => e.stopPropagation()}>\n          <CloseButton onClick={() => setShowModal(false)}>×</CloseButton>\n          <ProductInfo />\n          \n          {/* 添加移動按鈕 */}\n          <ModalActions>\n            <ActionButton onClick={handleMoveBeadClick}>\n              移動位置\n            </ActionButton>\n            <ActionButton onClick={() => {\n              handleBeadRemove(selectedBeadIndex);\n              setShowModal(false);\n            }}>\n              刪除水晶\n            </ActionButton>\n          </ModalActions>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProductDisplay; ","import styled from 'styled-components';\nimport CrystalTable from '../components/CrystalTable';\n\nconst PageContainer = styled.div`\n  padding: 20px;\n`;\n\nconst PageTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n  text-align: center;\n`;\n\nconst CrystalPage = () => {\n  return (\n    <PageContainer>\n      <PageTitle>精選水晶，能量加持</PageTitle>\n      <CrystalTable />\n    </PageContainer>\n  );\n};\n\nexport default CrystalPage; ","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\nimport userIcon from '../../assets/Logo/user.png';\nimport crystalIcon from '../../assets/Logo/freeze.png';\nimport accessoryIcon from '../../assets/Logo/jewel.png';\nimport helperIcon from '../../assets/Logo/witch.png';\nimport { useNavigate } from 'react-router-dom';\n\nconst NavContainer = styled.div`\n  display: none;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: white;\n  box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n  z-index: 1000;\n  \n  @media (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst NavItems = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  position: relative;\n`;\n\nconst NavItem = styled.div`\n  padding: 12px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  flex: 1;\n  color: ${props => props.active ? '#4a90e2' : '#666'};\n  border-top: none;\n  \n  &:hover {\n    color: #4a90e2;\n  }\n`;\n\nconst CrystalIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst AccessoryIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst HelperIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst UserIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst Label = styled.div`\n  font-size: 12px;\n`;\n\nconst PreviewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  margin-top: -30px;\n  background: white;\n  border-radius: 50%;\n  box-shadow: 0 -2px 8px rgba(0,0,0,0.1);\n  z-index: 1001;\n  position: relative;\n  flex: none;\n  order: 2;\n`;\n\nconst MiniPreviewContainer = styled.div`\n  position: relative;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  border: 1px dashed #ccc;\n`;\n\nconst MiniCrystalBead = styled.img`\n  position: absolute;\n  width: ${props => props.displaySize * 0.35}px;\n  height: ${props => props.displaySize * 0.35}px;\n  border-radius: 50%;\n  transform-origin: center;\n  left: 50%;\n  top: 50%;\n  object-fit: cover;\n`;\n\nconst MobileNavigation = ({ currentCategory, onCategoryChange }) => {\n  const { currentDesign } = useDesign();\n  const [beadPositions, setBeadPositions] = useState([]);\n\n  useEffect(() => {\n    if (currentDesign.crystals && currentDesign.crystals.length > 0) {\n      const MM_TO_PIXEL = 3.5;\n      \n      const positions = currentDesign.crystals.map((crystal, index) => {\n        const displaySize = crystal.size * MM_TO_PIXEL;\n        return {\n          ...crystal,\n          displaySize\n        };\n      });\n      \n      setBeadPositions(positions);\n    } else {\n      setBeadPositions([]);\n    }\n  }, [currentDesign]);\n\n  const calculateMiniBeadPosition = (index, total, radius) => {\n    const angle = ((index / total) * 360) - 90;\n    return { angle };\n  };\n\n  const handleCategoryChange = (category) => {\n    if (category === 'helper') {\n      localStorage.removeItem('crystal_color_filter');\n      localStorage.removeItem('filter_timestamp');\n      localStorage.removeItem('redirect_to_helper');\n      localStorage.removeItem('helper_page');\n    }\n    \n    onCategoryChange(category);\n  };\n\n  useEffect(() => {\n    window.setMobileCategory = (category) => {\n      onCategoryChange(category);\n    };\n    \n    const fromTemplate = localStorage.getItem('fromTemplate');\n    const templateTime = localStorage.getItem('template_selected_time');\n    \n    if (fromTemplate === 'true' && templateTime) {\n      const now = Date.now();\n      const selectTime = parseInt(templateTime, 10);\n      if (now - selectTime < 5 * 60 * 1000) {\n        onCategoryChange('profile');\n        localStorage.removeItem('fromTemplate');\n        localStorage.removeItem('template_selected_time');\n      }\n    }\n    \n    return () => {\n      delete window.setMobileCategory;\n    };\n  }, [onCategoryChange]);\n\n  return (\n    <NavContainer>\n      <NavItems>\n        <NavItem \n          active={currentCategory === 'profile'} \n          onClick={() => onCategoryChange('profile')}\n          style={{ order: 1 }}\n        >\n          <UserIcon active={currentCategory === 'profile'}>\n            <img src={crystalIcon} alt=\"好設計\" />\n          </UserIcon>\n          <Label>好設計</Label>\n        </NavItem>\n        \n        <PreviewContainer style={{ order: 2 }}>\n          <MiniPreviewContainer>\n            {beadPositions.map((bead, index) => {\n              const radius = 30;\n              const position = calculateMiniBeadPosition(\n                index,\n                beadPositions.length,\n                radius\n              );\n              \n              return (\n                <MiniCrystalBead\n                  key={`mini-${bead.id}-${index}`}\n                  src={bead.image}\n                  displaySize={bead.displaySize}\n                  alt={bead.name}\n                  style={{\n                    transform: `\n                      translate(-50%, -50%)\n                      rotate(${position.angle}deg)\n                      translateX(${radius}px)\n                    `\n                  }}\n                />\n              );\n            })}\n          </MiniPreviewContainer>\n        </PreviewContainer>\n        <NavItem \n          active={currentCategory === 'helper'} \n          onClick={() => handleCategoryChange('helper')}\n          style={{ order: 3 }}\n        >\n          <HelperIcon active={currentCategory === 'helper'}>\n            <img src={helperIcon} alt=\"小幫手\" />\n          </HelperIcon>\n          <Label>小幫手</Label>\n        </NavItem>\n      </NavItems>\n    </NavContainer>\n  );\n};\n\nexport default MobileNavigation; ","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n// 可以使用向上箭頭圖標，或者直接用文字\n// import upArrowIcon from '../../assets/icons/up-arrow.png'; \n\nconst Button = styled.button`\n  display: none; // 預設隱藏\n  position: fixed;\n  bottom: 100px; // 顯示在底部導航上方\n  right: 20px;\n  background-color: rgba(74, 144, 226, 0.8); // 半透明藍色\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  font-size: 24px; // 調整箭頭或文字大小\n  cursor: pointer;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  z-index: 999; // 確保在其他元素之上，但在 Modal 之下\n  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n  opacity: ${props => props.visible ? 1 : 0};\n  visibility: ${props => props.visible ? 'visible' : 'hidden'};\n\n  &:hover {\n    background-color: rgba(58, 128, 210, 0.9); // Hover 時加深顏色\n  }\n\n  @media (max-width: 767px) {\n    display: block; // 只在手機版顯示 block\n  }\n`;\n\nconst ScrollToTopButton = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  // 監聽滾動事件\n  useEffect(() => {\n    const toggleVisibility = () => {\n      // 當滾動超過一定高度時顯示按鈕 (例如 300px)\n      if (window.pageYOffset > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', toggleVisibility);\n\n    // 清除監聽器\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n\n  // 滾動到頂部的函數\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth' // 平滑滾動效果\n    });\n  };\n\n  return (\n    <Button onClick={scrollToTop} visible={isVisible}>\n      {/* 可以使用圖標 <img src={upArrowIcon} alt=\"Top\" /> 或文字 */}\n      ↑\n    </Button>\n  );\n};\n\nexport default ScrollToTopButton; ","import { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport CategoryTabs from '../components/CategoryTabs';\nimport CategoryContent from '../components/CategoryContent';\nimport ProductDisplay from '../components/ProductDisplay';\nimport SavedDesigns from '../components/SavedDesigns';\nimport { useDesign } from '../contexts/DesignContext';\nimport CrystalPage from './CrystalPage';\nimport AccessoryPage from './AccessoryPage';\nimport HelperPage from './HelperPage';\nimport ProfilePage from './ProfilePage';\nimport MobileNavigation from '../components/MobileNavigation';\nimport { useNavigate } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport ScrollToTopButton from '../components/ScrollToTopButton';\n\nconst PageLayout = styled.div`\n  display: grid;\n  gap: 20px;\n  padding: 20px;\n  min-height: calc(100vh - 60px);\n  \n  @media (min-width: 768px) {\n    grid-template-columns: 400px 1fr;\n  }\n  \n  @media (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    padding-bottom: 80px;\n    min-height: calc(100vh - 80px);\n  }\n`;\n\nconst LeftPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  \n  @media (max-width: 767px) {\n    order: 1;\n  }\n`;\n\nconst RightPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  overflow-y: auto;\n  max-height: calc(1280px);\n  \n  @media (max-width: 1024px) {\n    max-height: none;\n    order: 3;\n  }\n`;\n\nconst TabsContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst SavedDesignsWrapper = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 767px) {\n    display: none;\n  }\n`;\n\nconst OrderSectionContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n\n  @media (max-width: 767px) {\n    order: 2;\n    margin-bottom: 20px;\n  }\n`;\n\nconst TotalPrice = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  margin: 15px 0;\n  text-align: right;\n  color: #333;\n`;\n\nconst OrderButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #45a049;\n  }\n`;\n\nconst OrderForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-height: 100px;\n  resize: vertical;\n`;\n\nconst SuccessMessage = styled.div`\n  color: #4CAF50;\n  text-align: center;\n  margin-top: 15px;\n  padding: 10px;\n  background-color: #e8f5e9;\n  border-radius: 4px;\n`;\n\nconst MobileInstructionText = styled.p`\n  font-size: 14px;\n  color: #666;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 0 15px;\n`;\n\nconst MainPage = () => {\n  const [currentCategory, setCurrentCategory] = useState('crystal');\n  const [showOrderForm, setShowOrderForm] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n  const { currentDesign, selectedCrystal, setCurrentDesign: updateCurrentDesign } = useDesign();\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const navigate = useNavigate();\n  const rightPanelRef = useRef(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 767);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    console.log('Current category changed to:', currentCategory);\n  }, [currentCategory]);\n\n  useEffect(() => {\n    const redirectToHelper = localStorage.getItem('redirect_to_helper');\n    const helperPage = localStorage.getItem('helper_page');\n    \n    if (redirectToHelper === 'true') {\n      localStorage.removeItem('redirect_to_helper');\n      \n      setCurrentCategory('helper');\n      \n      console.log(\"已切換到 helper 頁面，頁面類型:\", helperPage);\n    }\n  }, []);\n\n  const calculateTotal = () => {\n    if (!currentDesign || !currentDesign.crystals) {\n      return 0;\n    }\n    const accessoryTotal = currentDesign.accessories?.reduce((sum, acc) => sum + acc.price, 0) || 0;\n    const crystalTotal = currentDesign.crystals.reduce((sum, crystal) => sum + crystal.price, 0);\n    return crystalTotal + accessoryTotal;\n  };\n\n  const handleOrder = () => {\n    setShowOrderForm(true);\n    setOrderSuccess(false);\n  };\n\n  const handleSubmitOrder = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    console.log('Order Submitted:', Object.fromEntries(formData));\n    setOrderSuccess(true);\n    setShowOrderForm(false);\n  };\n\n  const handleCategoryChange = (category) => {\n    console.log('Changing category to:', category);\n    setCurrentCategory(category);\n    if (category === 'helper') {\n      localStorage.removeItem('crystal_color_filter');\n      localStorage.removeItem('filter_timestamp');\n      localStorage.removeItem('redirect_to_helper');\n      localStorage.removeItem('helper_page');\n    }\n    if (category === 'profile') {\n      // ... 可能的清理 ...\n    }\n  };\n\n  useEffect(() => {\n    if (isMobile && (currentCategory === 'helper' || currentCategory === 'crystal' || currentCategory === 'accessory' || currentCategory === 'profile')) {\n      setTimeout(() => {\n        rightPanelRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      }, 0);\n    }\n  }, [currentCategory, isMobile]);\n\n  const renderMobileContent = () => {\n    console.log('Rendering mobile content for category:', currentCategory);\n    switch (currentCategory) {\n      case 'profile':\n        return <SavedDesigns />;\n      case 'crystal':\n        return <CrystalPage />;\n      case 'accessory':\n        return <AccessoryPage />;\n      case 'helper':\n        return <HelperPage />;\n      default:\n        return <CrystalPage />;\n    }\n  };\n\n  const renderDesktopContent = () => {\n    console.log('Rendering desktop content for category:', currentCategory);\n    switch (currentCategory) {\n      case 'crystal':\n        return <CrystalPage />;\n      case 'accessory':\n        return <AccessoryPage />;\n      case 'helper':\n        return <HelperPage />;\n      default:\n        return <CrystalPage />;\n    }\n  };\n\n  return (\n    <PageLayout>\n      <LeftPanel isMobile={isMobile} currentCategory={currentCategory}>\n        <ProductDisplay onCrystalClick={() => {}} />\n\n        <OrderSectionContainer>\n          <h3>訂購資訊</h3>\n          <TotalPrice>總金額: NT$ {calculateTotal()}</TotalPrice>\n\n          {!showOrderForm && !orderSuccess && (\n             <OrderButton onClick={handleOrder}>下單</OrderButton>\n          )}\n\n          {showOrderForm && (\n            <OrderForm onSubmit={handleSubmitOrder}>\n              <Input\n                name=\"name\"\n                placeholder=\"姓名\"\n                required\n              />\n              <Input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n              />\n              <TextArea\n                name=\"address\"\n                placeholder=\"送貨地址\"\n                required\n              />\n              <OrderButton type=\"submit\">\n                確認送出\n              </OrderButton>\n            </OrderForm>\n          )}\n\n          {orderSuccess && (\n            <SuccessMessage>\n              訂購成功！感謝您的訂購。\n            </SuccessMessage>\n          )}\n        </OrderSectionContainer>\n\n        <SavedDesignsWrapper>\n          <SavedDesigns />\n        </SavedDesignsWrapper>\n      </LeftPanel>\n\n      <RightPanel ref={rightPanelRef}>\n        {isMobile && (\n          <MobileInstructionText>\n            點擊下方頁籤切換選擇水晶或配件\n          </MobileInstructionText>\n        )}\n        <TabsContainer>\n          <CategoryTabs \n            currentCategory={currentCategory} \n            onCategoryChange={handleCategoryChange} \n            isMobile={isMobile}\n          />\n        </TabsContainer>\n        {!isMobile && renderDesktopContent()}\n        {isMobile && renderMobileContent()}\n      </RightPanel>\n\n      {isMobile && (\n        <MobileNavigation \n          currentCategory={currentCategory} \n          onCategoryChange={handleCategoryChange} \n        />\n      )}\n\n      <ScrollToTopButton />\n    </PageLayout>\n  );\n};\n\nexport default MainPage; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\n\nconst SavedContainer = styled.div`\n  padding: 16px;\n  background: #f9f9f9;\n  border-radius: 8px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 16px;\n  font-size: 18px;\n  color: #333;\n  text-align: center;\n  flex-shrink: 0;\n`;\n\nconst SavedList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 16px;\n  overflow-y: auto;\n  flex-grow: 1;\n  padding: 4px;\n`;\n\nconst SavedItem = styled.div`\n  position: relative;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background: #fff;\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid #eee;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n\n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    border-color: #ddd;\n  }\n`;\n\nconst PreviewContainer = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 100%;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n`;\n\nconst BraceletPreview = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: 50%;\n`;\n\nconst PreviewBead = styled.img`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  border-radius: 50%;\n  left: 50%;\n  top: 50%;\n  transform-origin: center;\n  object-fit: cover;\n  transform: ${props => `\n    translate(-50%, -50%)\n    rotate(${props.angle}deg)\n    translateX(${props.radius}px)\n    rotate(${-props.angle}deg)\n  `};\n`;\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: rgba(0, 0, 0, 0.4);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.2s, background-color 0.2s;\n  padding: 0;\n  font-size: 14px;\n  line-height: 1;\n\n  ${SavedItem}:hover & {\n    opacity: 1;\n  }\n\n  &:hover {\n    background: rgba(255, 0, 0, 0.8);\n  }\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: #888;\n  padding: 30px;\n  font-size: 14px;\n`;\n\nconst SavedDesigns = () => {\n  const { \n    currentDesign, \n    setCurrentDesign, \n    savedDesigns = [], \n    setSavedDesigns \n  } = useDesign();\n\n  const handleLoad = (design) => {\n    setCurrentDesign({\n      ...design,\n    });\n  };\n\n  const handleDelete = (e, designId) => {\n    e.stopPropagation();\n    const updatedDesigns = savedDesigns.filter(design => design.id !== designId);\n    setSavedDesigns(updatedDesigns);\n    localStorage.setItem('savedDesigns', JSON.stringify(updatedDesigns));\n  };\n\n  const renderBraceletPreview = (design) => {\n    if (!design || !design.crystals || design.crystals.length === 0) {\n      return null;\n    }\n    const PREVIEW_RADIUS = 65;\n    const MAX_BEAD_SIZE = 35;\n    const MIN_BEAD_SIZE = 25;\n\n    const totalBeads = design.crystals.length;\n\n    return design.crystals.map((crystal, index) => {\n      const angle = (index / totalBeads) * 360;\n\n      const scaleFactor = Math.min(1, crystal.size / 10);\n      const beadDisplaySize = MIN_BEAD_SIZE + (MAX_BEAD_SIZE - MIN_BEAD_SIZE) * scaleFactor;\n\n      return (\n        <PreviewBead\n          key={`${crystal.id || index}-${index}`}\n          src={crystal.image}\n          size={beadDisplaySize}\n          angle={angle}\n          radius={PREVIEW_RADIUS}\n          alt={crystal.name || 'bead'}\n          onError={(e) => {\n            e.target.src = '/placeholder.jpg';\n          }}\n        />\n      );\n    });\n  };\n\n  return (\n    <SavedContainer>\n      <Title>已儲存設計</Title>\n      {savedDesigns && savedDesigns.length > 0 ? (\n        <SavedList>\n          {savedDesigns.map(design => (\n            <SavedItem\n              key={design.id}\n              onClick={() => handleLoad(design)}\n            >\n              <PreviewContainer>\n                <BraceletPreview>\n                  {renderBraceletPreview(design)}\n                </BraceletPreview>\n              </PreviewContainer>\n              <DeleteButton\n                onClick={(e) => handleDelete(e, design.id)}\n              >\n                ×\n              </DeleteButton>\n            </SavedItem>\n          ))}\n        </SavedList>\n      ) : (\n        <EmptyMessage>尚無儲存的設計</EmptyMessage>\n      )}\n    </SavedContainer>\n  );\n};\n\nexport default SavedDesigns; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\nimport { useState } from 'react';\n\nconst SizeSelectorContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 12px;\n  font-size: 16px;\n  color: #333;\n  display: flex;\n  align-items: center;\n`;\n\nconst UnitLabel = styled.span`\n  font-size: 14px;\n  color: #666;\n  margin-left: 5px;\n  font-weight: normal;\n`;\n\nconst SizeOptions = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst SizeButton = styled.button`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: ${props => props.active ? '#666' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#333'};\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  font-size: 16px;\n  \n  &:hover {\n    background: ${props => props.active ? '#666' : '#f0f0f0'};\n  }\n`;\n\nconst CustomButton = styled(SizeButton)`\n  width: 80px;\n  height: 50px;\n  border-radius: 25px;\n  padding: 0 15px;\n`;\n\nconst CustomInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nconst CustomInput = styled.input`\n  width: 80px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n`;\n\nconst Unit = styled.span`\n  margin-left: 8px;\n  color: #666;\n  font-size: 14px;\n`;\n\nconst SizeSelector = () => {\n  const { currentDesign, setCurrentDesign } = useDesign();\n  const [showCustomInput, setShowCustomInput] = useState(false);\n  const [customValue, setCustomValue] = useState('');\n  \n  // 手圍尺寸（cm）\n  const sizesInCm = [14, 15, 16, 17, 18];\n  \n  // 將 mm 轉換為 cm 顯示\n  const currentSizeInCm = currentDesign.size / 10;\n\n  const handleSizeChange = (sizeInCm) => {\n    // 將 cm 轉換為 mm 儲存\n    setCurrentDesign(prev => ({\n      ...prev,\n      size: sizeInCm * 10\n    }));\n    setShowCustomInput(false);\n  };\n\n  const handleCustomSize = (e) => {\n    const value = e.target.value;\n    setCustomValue(value);\n  };\n\n  const handleCustomSubmit = () => {\n    const valueInCm = parseFloat(customValue);\n    if (!isNaN(valueInCm) && valueInCm >= 8 && valueInCm <= 30) {\n      handleSizeChange(valueInCm);\n    }\n    setShowCustomInput(false);\n  };\n\n  const handleCustomClick = () => {\n    setShowCustomInput(true);\n    setCustomValue(currentSizeInCm.toString());\n  };\n\n  return (\n    <SizeSelectorContainer>\n      <Title>\n        手圍尺寸\n        <UnitLabel>(cm)</UnitLabel>\n      </Title>\n      <SizeOptions>\n        {sizesInCm.map(size => (\n          <SizeButton\n            key={size}\n            active={currentSizeInCm === size}\n            onClick={() => handleSizeChange(size)}\n          >\n            {size}\n          </SizeButton>\n        ))}\n        \n        <CustomButton onClick={handleCustomClick}>\n          自訂\n        </CustomButton>\n      </SizeOptions>\n      \n      {showCustomInput && (\n        <CustomInputContainer>\n          <CustomInput\n            type=\"number\"\n            step=\"0.1\"\n            min=\"8\"\n            max=\"30\"\n            value={customValue}\n            onChange={handleCustomSize}\n            onBlur={handleCustomSubmit}\n            autoFocus\n          />\n          <Unit>cm</Unit>\n        </CustomInputContainer>\n      )}\n    </SizeSelectorContainer>\n  );\n};\n\nexport default SizeSelector; ","import React from 'react';\nimport styled from 'styled-components';\nimport SavedDesigns from '../components/SavedDesigns';\nimport { useDesign } from '../contexts/DesignContext';\nimport SizeSelector from '../components/SizeSelector';\nimport { useState } from 'react';\n\nconst ProfileContainer = styled.div`\n  padding: 20px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n`;\n\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\n  margin-bottom: 16px;\n  color: #333;\n`;\n\nconst TotalPrice = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  margin: 15px 0;\n  text-align: right;\n  color: #333;\n`;\n\nconst OrderButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #45a049;\n  }\n`;\n\nconst OrderForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-height: 100px;\n`;\n\nconst ProfilePage = () => {\n  const { currentDesign } = useDesign();\n  const [showOrderForm, setShowOrderForm] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n\n  const calculateTotal = () => {\n    return currentDesign.crystals.reduce((sum, crystal) => sum + crystal.price, 0);\n  };\n\n  const handleOrder = () => {\n    setShowOrderForm(true);\n  };\n\n  const handleSubmitOrder = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    // 這裡可以處理訂單提交邏輯\n    setOrderSuccess(true);\n    setShowOrderForm(false);\n  };\n\n  return (\n    <ProfileContainer>\n      <Section>\n        <SavedDesigns />\n      </Section>\n      \n      <Section>\n        <Title>訂購資訊</Title>\n        <TotalPrice>\n          總金額: NT$ {calculateTotal()}\n        </TotalPrice>\n        <OrderButton onClick={handleOrder}>\n          下單\n        </OrderButton>\n        \n        {showOrderForm && (\n          <OrderForm onSubmit={handleSubmitOrder}>\n            <Input \n              name=\"name\" \n              placeholder=\"姓名\" \n              required \n            />\n            <Input \n              name=\"email\" \n              type=\"email\" \n              placeholder=\"Email\" \n              required \n            />\n            <TextArea \n              name=\"address\" \n              placeholder=\"送貨地址\" \n              required \n            />\n            <OrderButton type=\"submit\">\n              確認送出\n            </OrderButton>\n          </OrderForm>\n        )}\n        \n        {orderSuccess && (\n          <div style={{ \n            color: '#4CAF50', \n            textAlign: 'center', \n            marginTop: '10px' \n          }}>\n            訂購成功！\n          </div>\n        )}\n      </Section>\n    </ProfileContainer>\n  );\n};\n\nexport default ProfilePage; "],"names":["TabsContainer","styled","div","Tab","props","active","_ref","currentCategory","onCategoryChange","isMobile","handleTabClick","category","localStorage","removeItem","_jsxs","children","_jsx","onClick","GridView","CrystalCard","CrystalImage","img","FilterContainer","FilterSelect","select","ClearFilterButton","button","CrystalName","CrystalInfo","CrystalTable","currentDesign","setCurrentDesign","useDesign","sortField","setSortField","useState","sortDirection","setSortDirection","filters","setFilters","savedFilters","getItem","JSON","parse","color","size","energy","price","useEffect","setItem","stringify","filterOptions","Set","crystals","map","c","calculateUsedLength","reduce","sum","crystal","filteredAndSortedCrystals","filter","wouldExceedMaxLimit","power","sort","a","b","direction","handleDragStart","e","dataTransfer","setData","_Fragment","Object","entries","key","options","value","onChange","target","option","handleClearFilters","emptyFilters","calculateRemainingSpace","wristCircumference","usedLength","Math","max","currentCrystals","totalLength","prev","handleCrystalClick","style","opacity","cursor","src","image","alt","name","draggable","onDragStart","onError","id","PageContainer","PageTitle","h2","AccessoryCard","AccessoryImage","AccessoryName","AccessoryInfo","AccessoryPage","setSelectedCrystal","type","material","Accessories","Boolean","filteredAndSortedAccessories","accessory","handleAccessoryClick","InfoContainer","Title","Section","SectionTitle","h3","PropertyList","ul","PropertyItem","li","DescriptionItem","Description","ProductInfo","selectedCrystal","description","zodiac","join","chakra","descriptions","Array","isArray","desc","index","renderDescription","DisplayContainer","ImageContainer","BraceletContainer","ConnectionLine","CrystalBead","displaySize","angle","radius","isAccessory","moveMode","isSource","isTarget","BeadImage","BeadGloss","TrashIcon","show","ClearAllButton","MobileActionMenu","MobileActionButton","Backdrop","Modal","ModalContent","CloseButton","SaveButtonContainer","SaveButton","ProductSizeContainer","ProductSizeTitle","ProductUnitLabel","span","ProductSizeOptions","ProductSizeButton","ProductCustomButton","ProductCustomInputContainer","ProductCustomInput","input","ProductUnit","MoveModeTip","CancelMoveButton","ModalActions","ActionButton","DeleteConfirmDialog","DeleteConfirmMessage","p","DeleteConfirmButtons","ConfirmButton","CancelButton","onCrystalClick","savedDesigns","setSavedDesigns","beadPositions","setBeadPositions","setDisplaySize","draggedBead","setDraggedBead","isSpaceFull","setIsSpaceFull","isDragging","setIsDragging","dragStartTime","setDragStartTime","showMobileMenu","setShowMobileMenu","currentSizeInCm","inputValue","setInputValue","toString","sizeError","setSizeError","selectedBeadIndex","setSelectedBeadIndex","isDraggingEnabled","setIsDraggingEnabled","setMoveMode","sourceIndex","setSourceIndex","showModal","setShowModal","setIsMobile","window","innerWidth","showCustomInput","setShowCustomInput","customValue","setCustomValue","setUsedLength","showDeleteConfirm","setShowDeleteConfirm","length","totalUsedLength","newSize","ceil","console","log","totalBeads","sizeRatio","sizeAdjustFactor","sqrt","adjustedRadius","positions","totalAngleOccupation","angleOccupations","i","minSize","maxSize","min","angleOccupation","PI","push","overlapFactor","adjustedTotalAngleOccupation","currentAngle","handleResize","addEventListener","removeEventListener","handleBeadDragEnd","handleBeadRemove","_","handleSizeChange","sizeInCm","newSizeInMm","totalCrystalLength","pop","handleClearAll","handleMobileActionClick","action","handleSave","designId","Date","now","designToSave","savedAt","toISOString","heartIcon","handleCancelMove","bead","nextIndex","nextBead","angle1","angle2","radius1","radius2","x1","cos","y1","sin","x2","y2","pow","atan2","lineThickness","width","height","left","top","transform","background","handleBeadClick","event","preventDefault","newCrystals","temp","handleBeadDragStart","onDragEnd","onDragOver","handleBeadDragOver","onDrop","handleBeadDrop","moveBeadIndex","getData","fromIndex","parseInt","error","handleCustomClick","step","onBlur","handleCustomSubmit","valueInCm","parseFloat","isNaN","autoFocus","toFixed","onDragEnter","currentTarget","classList","add","onDragLeave","remove","handleConfirmClearAll","handleCancelClearAll","stopPropagation","handleMoveBeadClick","CrystalPage","NavContainer","NavItems","NavItem","HelperIcon","UserIcon","Label","PreviewContainer","MiniPreviewContainer","MiniCrystalBead","MM_TO_PIXEL","setMobileCategory","fromTemplate","templateTime","order","crystalIcon","position","calculateMiniBeadPosition","total","handleCategoryChange","helperIcon","Button","visible","ScrollToTopButton","isVisible","setIsVisible","toggleVisibility","pageYOffset","scrollToTop","scrollTo","behavior","PageLayout","LeftPanel","RightPanel","SavedDesignsWrapper","OrderSectionContainer","TotalPrice","OrderButton","OrderForm","form","Input","TextArea","textarea","SuccessMessage","MobileInstructionText","MainPage","setCurrentCategory","showOrderForm","setShowOrderForm","orderSuccess","setOrderSuccess","updateCurrentDesign","rightPanelRef","useNavigate","useRef","redirectToHelper","helperPage","setTimeout","_rightPanelRef$curren","current","scrollIntoView","block","ProductDisplay","calculateTotal","_currentDesign$access","accessoryTotal","accessories","acc","handleOrder","onSubmit","formData","FormData","fromEntries","placeholder","required","SavedDesigns","ref","CategoryTabs","renderDesktopContent","HelperPage","renderMobileContent","MobileNavigation","SavedContainer","SavedList","SavedItem","BraceletPreview","PreviewBead","DeleteButton","EmptyMessage","renderBraceletPreview","design","beadDisplaySize","handleLoad","handleDelete","updatedDesigns","SizeButton","ProfileContainer","ProfilePage","textAlign","marginTop"],"sourceRoot":""}