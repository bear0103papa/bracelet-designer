{"version":3,"file":"static/js/48.5c394bec.chunk.js","mappings":"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","sources":["components/SavedDesigns/index.js","components/CategoryTabs/index.js","components/CrystalTable/index.js","pages/AccessoryPage.js","components/CategoryContent/index.js","components/ProductInfo/index.js","components/ProductDisplay/index.js","pages/CrystalPage.js","components/MobileNavigation/index.js","pages/MainPage.js","components/SizeSelector/index.js","pages/ProfilePage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\n\nconst SavedContainer = styled.div`\n  padding: 16px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 12px;\n  font-size: 16px;\n  color: #333;\n`;\n\nconst SavedList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n`;\n\nconst SavedItem = styled.div`\n  position: relative;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background: #fff;\n  border-radius: 8px;\n  overflow: hidden;\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst PreviewContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100px;\n  background: #f5f5f5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BraceletPreview = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  border: 1px dashed #ccc;\n  border-radius: 50%;\n`;\n\nconst PreviewBead = styled.img`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  border-radius: 50%;\n  transform-origin: ${props => `${-props.radius}px ${0}px`};\n  transform: ${props => `\n    translate(-50%, -50%)\n    rotate(${props.angle}deg)\n  `};\n  left: 100%;\n  top: 50%;\n  object-fit: cover;\n`;\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background: rgba(255, 0, 0, 0.7);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.2s;\n\n  ${SavedItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst SavedDesigns = () => {\n  const { \n    currentDesign, \n    setCurrentDesign, \n    savedDesigns = [], \n    setSavedDesigns \n  } = useDesign();\n\n  const handleLoad = (design) => {\n    setCurrentDesign({\n      ...design,\n    });\n  };\n\n  const handleDelete = (e, designId) => {\n    e.stopPropagation();\n    const updatedDesigns = savedDesigns.filter(design => design.id !== designId);\n    setSavedDesigns(updatedDesigns);\n    localStorage.setItem('savedDesigns', JSON.stringify(updatedDesigns));\n  };\n\n  const renderBraceletPreview = (design) => {\n    const PREVIEW_DIAMETER = 80;\n    const wristCircumference = design.size;\n\n    return design.crystals.map((crystal, index) => {\n      let accumulatedLength = design.crystals\n        .slice(0, index)\n        .reduce((sum, c) => sum + c.size, 0);\n      \n      const angle = (accumulatedLength / wristCircumference) * 360;\n      const beadDisplaySize = (crystal.size / wristCircumference) * PREVIEW_DIAMETER * Math.PI;\n      const radius = (PREVIEW_DIAMETER - beadDisplaySize) / 2;\n      \n      return (\n        <PreviewBead\n          key={`${crystal.id}-${index}`}\n          src={crystal.image}\n          size={beadDisplaySize}\n          angle={angle}\n          radius={radius}\n          alt={crystal.name}\n          onError={(e) => {\n            e.target.src = '/assets/placeholder.jpg';\n          }}\n        />\n      );\n    });\n  };\n\n  return (\n    <SavedContainer>\n      <Title>已儲存設計</Title>\n      <SavedList>\n        {(savedDesigns || []).map(design => (\n          <SavedItem \n            key={design.id}\n            onClick={() => handleLoad(design)}\n          >\n            <PreviewContainer>\n              <BraceletPreview>\n                {renderBraceletPreview(design)}\n              </BraceletPreview>\n            </PreviewContainer>\n            <DeleteButton \n              onClick={(e) => handleDelete(e, design.id)}\n            >\n              ×\n            </DeleteButton>\n          </SavedItem>\n        ))}\n      </SavedList>\n    </SavedContainer>\n  );\n};\n\nexport default SavedDesigns; ","import styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst Tab = styled.div`\n  flex: 1;\n  padding: 15px;\n  text-align: center;\n  cursor: pointer;\n  background: ${props => props.active ? '#f0f0f0' : 'white'};\n  font-weight: ${props => props.active ? 'bold' : 'normal'};\n  border-bottom: 2px solid ${props => props.active ? '#4a90e2' : 'transparent'};\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: #f5f5f5;\n  }\n`;\n\nconst CategoryTabs = ({ currentCategory, onCategoryChange }) => {\n  const navigate = useNavigate();\n  \n  const handleTabClick = (category) => {\n    if (category === 'helper') {\n      // 只清除過濾器，不進行導航\n      localStorage.removeItem('crystal_color_filter');\n      localStorage.removeItem('filter_timestamp');\n      localStorage.removeItem('redirect_to_helper');\n      localStorage.removeItem('helper_page');\n    }\n    \n    onCategoryChange(category);\n  };\n  \n  return (\n    <TabsContainer>\n      <Tab \n        active={currentCategory === 'crystal'} \n        onClick={() => handleTabClick('crystal')}\n      >\n        水晶\n      </Tab>\n      <Tab \n        active={currentCategory === 'accessory'} \n        onClick={() => handleTabClick('accessory')}\n      >\n        配件\n      </Tab>\n      <Tab \n        active={currentCategory === 'helper'} \n        onClick={() => handleTabClick('helper')}\n      >\n        小幫手\n      </Tab>\n    </TabsContainer>\n  );\n};\n\nexport default CategoryTabs; ","import styled from 'styled-components';\nimport { crystals } from '../../data/crystals';\nimport { useDesign } from '../../contexts/DesignContext';\nimport { useState, useEffect } from 'react';\n\nconst TableContainer = styled.div`\n  overflow-y: auto;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n\nconst GridView = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  gap: 16px;\n  padding: 16px;\n`;\n\nconst CrystalCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  }\n`;\n\nconst CrystalImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n  cursor: pointer;\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 16px;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst FilterSelect = styled.select`\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-width: 120px;\n`;\n\nconst ClearFilterButton = styled.button`\n  padding: 8px 16px;\n  background: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #e0e0e0;\n  }\n`;\n\nconst CrystalName = styled.div`\n  margin-top: 8px;\n  font-size: 12px;\n  text-align: center;\n`;\n\nconst CrystalInfo = styled.div`\n  font-size: 10px;\n  color: #666;\n  text-align: center;\n`;\n\nconst CrystalTable = () => {\n  const { currentDesign, setCurrentDesign } = useDesign();\n  const [sortField, setSortField] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [filters, setFilters] = useState(() => {\n    // 從 localStorage 讀取保存的篩選條件\n    const savedFilters = localStorage.getItem('crystalFilters');\n    return savedFilters ? JSON.parse(savedFilters) : {\n      color: '',\n      size: '',\n      energy: '',\n      price: ''\n    };\n  });\n\n  // 當篩選條件變化時，保存到 localStorage\n  useEffect(() => {\n    localStorage.setItem('crystalFilters', JSON.stringify(filters));\n  }, [filters]);\n\n  // 獲取所有唯一的篩選選項\n  const filterOptions = {\n    color: [...new Set(crystals.map(c => c.color))],\n    size: ['小(≤8mm)', '中(8-12mm)', '大(≥12mm)'],\n    energy: [...new Set(crystals.map(c => c.energy))],\n    price: ['0-10', '11-15', '16-20']\n  };\n\n  const handleSort = (field) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // 清除所有篩選條件\n  const handleClearFilters = () => {\n    const emptyFilters = {\n      color: '',\n      size: '',\n      power: '',\n      price: ''\n    };\n    setFilters(emptyFilters);\n    localStorage.setItem('crystalFilters', JSON.stringify(emptyFilters));\n  };\n\n  // 計算目前已使用的長度\n  const calculateUsedLength = () => {\n    return currentDesign.crystals.reduce((sum, crystal) => sum + crystal.size, 0);\n  };\n\n  // 檢查是否超出最大限制 (30cm = 300mm)\n  const isExceedingMaxLimit = () => {\n    const usedLength = calculateUsedLength();\n    return usedLength >= 300; // 30cm 轉換為 mm\n  };\n\n  // 檢查添加特定水晶後是否會超出最大限制\n  const wouldExceedMaxLimit = (crystal) => {\n    const usedLength = calculateUsedLength();\n    return usedLength + crystal.size > 300; // 30cm 轉換為 mm\n  };\n\n  const filteredAndSortedCrystals = crystals\n    .filter(crystal => {\n      // 首先檢查是否會超出最大限制\n      if (wouldExceedMaxLimit(crystal)) {\n        return false;\n      }\n      \n      // 然後應用其他篩選條件\n      return (\n        (!filters.color || crystal.color === filters.color) &&\n        (!filters.power || crystal.power === filters.power) &&\n        (!filters.size || (\n          filters.size === '小(≤8mm)' ? crystal.size <= 8 :\n          filters.size === '中(8-12mm)' ? (crystal.size > 8 && crystal.size < 12) :\n          crystal.size >= 12\n        )) &&\n        (!filters.price || (\n          filters.price === '0-10' ? crystal.price <= 10 :\n          filters.price === '11-15' ? (crystal.price > 10 && crystal.price <= 15) :\n          crystal.price > 15\n        ))\n      );\n    })\n    .sort((a, b) => {\n      if (!sortField) return 0;\n      const direction = sortDirection === 'asc' ? 1 : -1;\n      return a[sortField] > b[sortField] ? direction : -direction;\n    });\n\n  const calculateRemainingSpace = () => {\n    const wristCircumference = currentDesign.size;\n    const usedLength = calculateUsedLength();\n    return Math.max(0, wristCircumference - usedLength);\n  };\n\n  const handleDragStart = (crystal) => (e) => {\n    e.dataTransfer.setData('crystal', JSON.stringify(crystal));\n  };\n\n  const handleCrystalClick = (crystal) => {\n    const currentCrystals = [...currentDesign.crystals, crystal];\n    const totalLength = currentCrystals.reduce((sum, c) => sum + c.size, 0);\n    \n    // 增加 30cm (300mm) 的最大限制\n    const MAX_SIZE = 300; // 30cm 轉換為 mm\n    \n    // 如果總長度超過最大限制，則不添加水晶\n    if (totalLength > MAX_SIZE) {\n      return; // 超過最大限制，不執行任何操作\n    }\n    \n    // 如果總長度超過當前手圍尺寸但未超過最大限制\n    if (totalLength > currentDesign.size) {\n      setCurrentDesign(prev => ({\n        ...prev,\n        size: totalLength,\n        crystals: currentCrystals\n      }));\n    } \n    // 如果沒有超過當前手圍尺寸，則正常添加水晶\n    else {\n      setCurrentDesign(prev => ({\n        ...prev,\n        crystals: currentCrystals\n      }));\n    }\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        {Object.entries(filterOptions).map(([key, options]) => (\n          <FilterSelect\n            key={key}\n            value={filters[key]}\n            onChange={(e) => setFilters({...filters, [key]: e.target.value})}\n          >\n            <option value=\"\">{key === 'color' ? '色系' : \n            key === 'size' ? '尺寸' :\n            key === 'energy' ? '能量' :\n            '價格'}</option>\n            {options.map(option => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </FilterSelect>\n        ))}\n        <ClearFilterButton onClick={handleClearFilters}>\n          清除篩選\n        </ClearFilterButton>\n      </FilterContainer>\n\n      <GridView>\n        {filteredAndSortedCrystals.map(crystal => {\n          const remainingSpace = calculateRemainingSpace();\n          \n          return (\n            <CrystalCard\n              key={crystal.id}\n              onClick={() => handleCrystalClick(crystal)}\n              style={{\n                opacity: 1,\n                cursor: 'pointer'\n              }}\n            >\n              <CrystalImage\n                src={crystal.image}\n                alt={crystal.name}\n                draggable={true}\n                onDragStart={handleDragStart(crystal)}\n                onError={(e) => {\n                  e.target.src = '/placeholder.jpg';\n                }}\n              />\n              <CrystalName>{crystal.name}</CrystalName>\n              <CrystalInfo>{crystal.color} | {crystal.size}mm | {crystal.price}元</CrystalInfo>\n            </CrystalCard>\n          );\n        })}\n      </GridView>\n    </>\n  );\n};\n\nexport default CrystalTable; ","import styled from 'styled-components';\n\nconst PageContainer = styled.div`\n  padding: 20px;\n`;\n\nconst PageTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n  text-align: center;\n`;\n\nconst AccessoryPage = () => {\n  return (\n    <PageContainer>\n      {/* 配件頁面內容 */}\n    </PageContainer>\n  );\n};\n\nexport default AccessoryPage; ","import CrystalTable from '../CrystalTable';\nimport AccessoryPage from '../../pages/AccessoryPage';\nimport HelperPage from '../../pages/HelperPage';\n\nconst CategoryContent = ({ currentCategory }) => {\n  switch (currentCategory) {\n    case 'crystal':\n      return <CrystalTable />;\n    case 'accessory':\n      return <AccessoryPage />;\n    case 'helper':\n      return <HelperPage />;\n    default:\n      return <CrystalTable />;\n  }\n};\n\nexport default CategoryContent; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\n\nconst InfoContainer = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  font-size: 24px;\n  color: #333;\n  margin-bottom: 16px;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 16px;\n  color: #666;\n  margin-bottom: 8px;\n`;\n\nconst PropertyList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst PropertyItem = styled.li`\n  margin-bottom: 8px;\n  color: #333;\n`;\n\nconst ProductInfo = () => {\n  const { selectedCrystal } = useDesign();\n\n  if (!selectedCrystal) {\n    return null;\n  }\n\n  // 確保 description 存在，如果不存在則提供默認值\n  const descriptions = selectedCrystal.description || [];\n\n  return (\n    <InfoContainer>\n      <Title>{selectedCrystal.name}</Title>\n      \n      <Section>\n        <SectionTitle>基本資訊</SectionTitle>\n        <PropertyList>\n          <PropertyItem>色系：{selectedCrystal.color}</PropertyItem>\n          <PropertyItem>尺寸：{selectedCrystal.size} mm</PropertyItem>\n          <PropertyItem>能量：{selectedCrystal.energy}</PropertyItem>\n          <PropertyItem>價格：NT$ {selectedCrystal.price}</PropertyItem>\n          {selectedCrystal.zodiac && (\n            <PropertyItem>適合星座：{selectedCrystal.zodiac.join('、')}</PropertyItem>\n          )}\n          {selectedCrystal.chakra && (\n            <PropertyItem>脈輪：{selectedCrystal.chakra}</PropertyItem>\n          )}\n        </PropertyList>\n      </Section>\n\n      {descriptions.length > 0 && (\n        <Section>\n          <SectionTitle>詳細說明</SectionTitle>\n          <PropertyList>\n            {descriptions.map((desc, index) => (\n              <PropertyItem key={index}>{desc}</PropertyItem>\n            ))}\n          </PropertyList>\n        </Section>\n      )}\n    </InfoContainer>\n  );\n};\n\nexport default ProductInfo; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport ProductInfo from '../ProductInfo';\nimport heartIcon from '../../assets/Logo/heart.png';\n\nconst DisplayContainer = styled.div`\n  padding: 20px;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 500px;\n`;\n\nconst BraceletContainer = styled.div`\n  position: absolute;\n  top: calc(50% + 90px);\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 250px;\n  height: 250px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n`;\n\nconst ConnectionLine = styled.div`\n  position: absolute;\n  background-color: rgba(255, 255, 255, 0.7);\n  height: 2px;\n  transform-origin: left center;\n  z-index: 0;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n`;\n\nconst CrystalBead = styled.div`\n  position: absolute;\n  width: ${props => props.displaySize}px;\n  height: ${props => props.displaySize}px;\n  left: 50%;\n  top: 50%;\n  transform-origin: center;\n  transform: \n    translate(-50%, -50%)\n    rotate(${props => props.angle}deg)\n    translateX(${props => props.radius}px)\n    rotate(-${props => props.angle}deg);\n  transition: all 0.3s ease;\n  z-index: ${props => props.moveMode ? (props.isSource ? 3 : 2) : (props.size > 10 ? 2 : 1)};\n  pointer-events: auto;\n  border-radius: 50%;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 40%;\n    border-radius: 50% 50% 0 0 / 100% 100% 0 0;\n    pointer-events: none;\n  }\n  \n  ${props => props.moveMode && `\n    filter: brightness(${props.isSource ? '1.2' : props.isTarget ? '1' : '0.7'});\n    transform: translate(-50%, -50%)\n      rotate(${props.angle}deg)\n      translateX(${props.radius}px)\n      rotate(-${props.angle}deg)\n      scale(${props.isSource || props.isTarget ? '1.1' : '1'});\n    ${props.isTarget ? 'outline: 2px solid #4a90e2;' : ''}\n  `}\n`;\n\nconst BeadImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n  position: relative;\n  display: block;\n`;\n\nconst BeadGloss = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 50%;\n  box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.5);\n  background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.3), transparent 70%);\n  pointer-events: none;\n`;\n\nconst TrashIcon = styled.div`\n  position: absolute;\n  bottom: -20px;\n  left: 30%;\n  transform: translateX(-50%);\n  width: 40px;\n  height: 40px;\n  background: rgba(255, 0, 0, 0.1);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => props.show ? 1 : 0};\n  transition: all 0.3s ease;\n  cursor: pointer;\n  \n  &:hover {\n    background: rgba(255, 0, 0, 0.2);\n    transform: translateX(-50%) scale(1.1);\n  }\n  \n  &.drag-over {\n    background: rgba(255, 0, 0, 0.3);\n    transform: translateX(-50%) scale(1.2);\n  }\n`;\n\nconst FloatingPreview = styled.div`\n  display: none;\n  \n  @media (max-width: 767px) {\n    display: ${props => props.show ? 'block' : 'none'};\n    position: fixed;\n    right: 20px;\n    bottom: 20px;\n    width: 100px;\n    height: 100px;\n    background: white;\n    border-radius: 50%;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n    z-index: 1000;\n    overflow: hidden;\n    cursor: pointer;\n  }\n`;\n\nconst MiniPreviewContainer = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MiniCrystalBead = styled.img`\n  position: absolute;\n  width: ${props => props.displaySize * 0.4}px;\n  height: ${props => props.displaySize * 0.4}px;\n  border-radius: 50%;\n  transform-origin: center;\n  transform: ${props => `\n    translate(-50%, -50%)\n    rotate(${props.angle}deg)\n    translateX(${props.radius}px)\n  `};\n  left: 50%;\n  top: 50%;\n  object-fit: cover;\n`;\n\nconst ClearAllButton = styled.button`\n  position: absolute;\n  top: 90px;\n  left: 10px;\n  padding: 8px 16px;\n  background: rgba(255, 0, 0, 0.1);\n  border: none;\n  border-radius: 4px;\n  color: #ff4444;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: block;\n  \n  &:hover {\n    background: rgba(255, 0, 0, 0.2);\n  }\n  \n  @media (max-width: 767px) {\n    display: none;\n  }\n`;\n\nconst MobileActionMenu = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.2);\n  z-index: 1001;\n  width: 80%;\n  max-width: 300px;\n  overflow: hidden;\n`;\n\nconst MobileActionButton = styled.button`\n  width: 100%;\n  padding: 15px;\n  border: none;\n  background: white;\n  text-align: center;\n  font-size: 16px;\n  border-bottom: 1px solid #eee;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &:active {\n    background: #f5f5f5;\n  }\n`;\n\nconst Backdrop = styled.div`\n  display: ${props => props.show ? 'block' : 'none'};\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: ${props => props.show ? 'flex' : 'none'};\n  justify-content: center;\n  align-items: center;\n  z-index: 1100;\n  \n  @media (max-width: 767px) {\n    align-items: flex-start;\n    padding-top: 20%;\n  }\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  position: relative;\n  width: 90%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow-y: auto;\n  \n  @media (max-width: 767px) {\n    max-height: 70vh;\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 100px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n  \n  &:hover {\n    color: #333;\n  }\n`;\n\nconst SaveButtonContainer = styled.div`\n  position: absolute;\n  top: 90px;\n  right: 10px;\n  z-index: 10;\n  \n  @media (min-width: 768px) {\n    top: 95px;\n    right: 15px;\n  }\n`;\n\nconst SaveButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: #666;\n  transition: all 0.3s ease;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    transform: scale(1.1);\n  }\n  \n  &:hover::after {\n    content: \"儲存樣式\";\n    position: absolute;\n    bottom: -30px;\n    left: 50%;\n    transform: translateX(-50%);\n    background: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 5px 10px;\n    border-radius: 4px;\n    font-size: 14px;\n    white-space: nowrap;\n  }\n  \n  img {\n    width: 24px;\n    height: 24px;\n    \n    @media (min-width: 768px) {\n      width: 28px;\n      height: 28px;\n    }\n  }\n`;\n\n// 添加手圍尺寸選擇器相關樣式，使用不同的變數名稱避免衝突\nconst ProductSizeContainer = styled.div`\n  margin: 15px 0;\n  text-align: center;\n`;\n\nconst ProductSizeTitle = styled.h3`\n  font-size: 16px;\n  color: #333;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ProductUnitLabel = styled.span`\n  font-size: 14px;\n  color: #666;\n  margin-left: 5px;\n  font-weight: normal;\n`;\n\nconst ProductSizeOptions = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nconst ProductSizeButton = styled.button`\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  background: ${props => props.active ? '#666' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#333'};\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  font-size: 16px;\n  \n  &:hover {\n    background: ${props => props.active ? '#666' : '#f0f0f0'};\n  }\n`;\n\nconst ProductCustomButton = styled(ProductSizeButton)`\n  width: 70px;\n  height: 45px;\n  border-radius: 22.5px;\n  padding: 0 15px;\n`;\n\nconst ProductCustomInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst ProductCustomInput = styled.input`\n  width: 80px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n`;\n\nconst ProductUnit = styled.span`\n  margin-left: 8px;\n  color: #666;\n  font-size: 14px;\n`;\n\nconst MoveModeTip = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(74, 144, 226, 0.9);\n  color: white;\n  padding: 8px 12px;\n  border-radius: 20px;\n  font-size: 14px;\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst CancelMoveButton = styled.button`\n  background: white;\n  color: #4a90e2;\n  border: none;\n  border-radius: 15px;\n  padding: 4px 10px;\n  margin-top: 5px;\n  font-size: 12px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #f0f0f0;\n  }\n`;\n\nconst ModalActions = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n`;\n\nconst ActionButton = styled.button`\n  background: #4a90e2;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  \n  &:hover {\n    background: #3a80d2;\n  }\n  \n  &:nth-child(2) {\n    background: #ff6b6b;\n    \n    &:hover {\n      background: #ff5252;\n    }\n  }\n`;\n\nconst DeleteConfirmDialog = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.95);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  z-index: 10;\n`;\n\nconst DeleteConfirmMessage = styled.p`\n  font-size: 16px;\n  color: #333;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst DeleteConfirmButtons = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nconst ConfirmButton = styled.button`\n  padding: 8px 20px;\n  background: #ff6b6b;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #ff5252;\n  }\n`;\n\nconst CancelButton = styled.button`\n  padding: 8px 20px;\n  background: #f0f0f0;\n  color: #333;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #e0e0e0;\n  }\n`;\n\n// 修正 processImageUrl 函數\nconst processImageUrl = (url) => {\n  // 如果 URL 為空或未定義，返回空字符串\n  if (!url) return '';\n  \n  // 如果 URL 已經是完整的 URL，則直接返回\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    return url;\n  }\n  \n  // 如果 URL 是相對路徑，則直接返回，不添加任何前綴\n  // React 會自動從 public 目錄加載\n  return url;\n};\n\nconst ProductDisplay = ({ onCrystalClick }) => {\n  const { currentDesign, setCurrentDesign, setSelectedCrystal, savedDesigns, setSavedDesigns } = useDesign();\n  const [beadPositions, setBeadPositions] = useState([]);\n  const [displaySize, setDisplaySize] = useState(200);\n  const [draggedBead, setDraggedBead] = useState(null);\n  const [isSpaceFull, setIsSpaceFull] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartTime, setDragStartTime] = useState(0);\n  const [showFloating, setShowFloating] = useState(false);\n  const sizesInCm = [14, 15, 16, 17, 18];\n  const currentSizeInCm = currentDesign.size / 10;\n  const [inputValue, setInputValue] = useState(currentSizeInCm.toString());\n  const [sizeError, setSizeError] = useState('');\n  const [selectedBeadIndex, setSelectedBeadIndex] = useState(null);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n  const [moveMode, setMoveMode] = useState(false);\n  const [sourceIndex, setSourceIndex] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [showCustomInput, setShowCustomInput] = useState(false);\n  const [customValue, setCustomValue] = useState('');\n  const [usedLength, setUsedLength] = useState(0);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n  useEffect(() => {\n    if (currentDesign.crystals.length > 0) {\n      const wristCircumference = currentDesign.size;\n      \n      // 計算實際使用的長度（水晶長度加總）\n      const totalUsedLength = currentDesign.crystals.reduce((sum, crystal) => {\n        return sum + crystal.size;\n      }, 0);\n      \n      // 更新使用的長度狀態\n      setUsedLength(totalUsedLength);\n      \n\n      // 如果水晶總長度超出手圍尺寸，自動調整手圍尺寸\n      if (totalUsedLength > wristCircumference) {\n        // 設置新的手圍尺寸，稍微大於水晶總長度\n        const newSize = Math.ceil(totalUsedLength / 10) * 10; // 向上取整到最接近的整數厘米\n        \n        console.log(`自動調整手圍尺寸：從 ${wristCircumference}mm 到 ${newSize}mm`);\n        \n        // 更新設計的手圍尺寸\n        setCurrentDesign(prev => ({\n          ...prev,\n          size: newSize\n        }));\n        \n        // 提前返回，等待下一次渲染\n        return;\n      }\n\n      // 根據手圍尺寸優化水晶大小與排列\n      const totalBeads = currentDesign.crystals.length;\n      \n      // 計算手圍尺寸與標準尺寸的比例\n      const standardWristSize = 160; // 標準手圍尺寸(mm)\n      const sizeRatio = wristCircumference / standardWristSize;\n      \n      // 使用反比例關係調整水晶大小 - 手圍越大，水晶相對越小\n      // 這樣可以確保水晶數量增加時，整體效果更加美觀\n      const sizeAdjustFactor = 1 / Math.sqrt(sizeRatio);\n      \n      // 根據手圍尺寸調整半徑 - 手圍越大，半徑越大\n      const adjustedRadius = 120 * Math.sqrt(sizeRatio);\n      \n      // 計算每個水晶的位置和大小\n      const positions = [];\n      \n      // 計算水晶在圓上的均勻分佈角度 - 但要考慮水晶大小\n      // 首先計算所有水晶的總角度佔用\n      let totalAngleOccupation = 0;\n      const angleOccupations = [];\n      \n      for (let i = 0; i < totalBeads; i++) {\n        const crystal = currentDesign.crystals[i];\n        \n        // 根據水晶大小計算顯示尺寸\n        const baseDisplaySize = 45; // 基準顯示尺寸(px)\n        const sizeFactor = crystal.size / 8; // 相對於基準水晶大小(8mm)的比例\n        \n        // 計算顯示尺寸 - 手圍越大，水晶相對越小\n        let displaySize = baseDisplaySize * sizeFactor * sizeAdjustFactor;\n        \n        // 限制在合理範圍內\n        const minSize = 25 * sizeAdjustFactor;\n        const maxSize = 60 * sizeAdjustFactor;\n        displaySize = Math.max(minSize, Math.min(displaySize, maxSize));\n        \n        // 計算水晶在圓上的角度佔用 - 根據水晶大小和半徑\n        // 使用弧長公式：角度(弧度) = 弧長 / 半徑\n        // 弧長近似為水晶直徑\n        const arcLength = displaySize;\n        const angleOccupation = (arcLength / adjustedRadius) * (180 / Math.PI);\n        \n        angleOccupations.push({\n          crystal,\n          displaySize,\n          angleOccupation\n        });\n        \n        totalAngleOccupation += angleOccupation;\n      }\n      \n      // 計算重疊係數 - 使水晶看起來緊密串連\n      // 重疊係數越大，水晶重疊越多\n      const overlapFactor = 1.25;\n      \n      // 調整總角度佔用，考慮重疊\n      const adjustedTotalAngleOccupation = totalAngleOccupation / overlapFactor;\n      \n      // 計算每個水晶的角度位置\n      let currentAngle = 0;\n      \n      for (let i = 0; i < angleOccupations.length; i++) {\n        const { crystal, displaySize, angleOccupation } = angleOccupations[i];\n        \n        // 計算角度 - 考慮水晶大小和重疊\n        const angle = currentAngle + (angleOccupation / 2);\n        \n        // 更新當前角度\n        currentAngle += angleOccupation / overlapFactor;\n        \n        positions.push({\n          ...crystal,\n          angle: (angle * 360) / adjustedTotalAngleOccupation,\n          radius: adjustedRadius,\n          displaySize,\n          sizeAdjustFactor\n        });\n      }\n      \n      setBeadPositions(positions);\n    } else {\n      setBeadPositions([]);\n      setUsedLength(0);\n      setIsSpaceFull(false);\n    }\n  }, [currentDesign]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const shouldShow = window.scrollY > 300;\n      setShowFloating(shouldShow);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    setInputValue(currentSizeInCm.toString());\n  }, [currentSizeInCm]);\n\n  // 監聽窗口大小變化\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 767);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleBeadClick = (bead, index, event) => {\n    // 如果事件對象存在，則阻止默認行為\n    if (event) {\n      event.preventDefault();\n    }\n    \n    // 如果處於移動模式\n    if (moveMode) {\n      // 如果已經選擇了源水晶（即 sourceIndex 不為 null）\n      if (sourceIndex !== null) {\n        // 移動水晶\n        const newCrystals = [...currentDesign.crystals];\n        const temp = newCrystals[sourceIndex];\n        newCrystals[sourceIndex] = newCrystals[index];\n        newCrystals[index] = temp;\n        \n        // 更新設計\n        setCurrentDesign({\n          ...currentDesign,\n          crystals: newCrystals\n        });\n        \n        // 重置移動模式\n        setSourceIndex(null);\n        setMoveMode(false);\n        return;\n      }\n      \n      // 如果還沒有選擇源水晶\n      setSourceIndex(index);\n      return;\n    }\n    \n    // 檢查是否為移動設備\n    if (isMobile) {\n      // 在移動設備上，選擇水晶並顯示操作菜單\n      setSelectedBeadIndex(index);\n      setShowMobileMenu(true);\n      return;\n    }\n    \n    // 桌面版的原有邏輯（非移動模式）\n    // 設置選中的水晶索引\n    setSelectedBeadIndex(index);\n    \n    // 設置選中的水晶，用於在 ProductInfo 中顯示\n    setSelectedCrystal(currentDesign.crystals[index]);\n    \n    // 顯示模態框\n    setShowModal(true);\n  };\n\n  const handleBeadDragStart = (e, index) => {\n    setDragStartTime(Date.now());\n    e.dataTransfer.setData('moveBeadIndex', index.toString());\n    setIsDragging(true);\n  };\n\n  const handleBeadDragEnd = () => {\n    setIsDragging(false);\n  };\n\n  const handleBeadDragOver = (e, index) => {\n    e.preventDefault();\n    if (moveMode && index !== sourceIndex) {\n      setSelectedBeadIndex(index);\n    }\n  };\n\n  const handleBeadDrop = (e, index) => {\n    e.preventDefault();\n    \n    if (moveMode && sourceIndex !== null && index !== sourceIndex) {\n      // 交換位置\n      const newCrystals = [...currentDesign.crystals];\n      const temp = newCrystals[sourceIndex];\n      newCrystals[sourceIndex] = newCrystals[index];\n      newCrystals[index] = temp;\n\n      setCurrentDesign(prev => ({\n        ...prev,\n        crystals: newCrystals\n      }));\n      \n      setMoveMode(false);\n      setSourceIndex(null);\n      setSelectedBeadIndex(null);\n      return;\n    }\n    \n    // 處理拖放水晶的邏輯\n    const moveBeadIndex = e.dataTransfer.getData('moveBeadIndex');\n    if (moveBeadIndex) {\n      const fromIndex = parseInt(moveBeadIndex);\n      \n      // 直接交換位置，不再計算角度\n      if (fromIndex !== index) {\n        const newCrystals = [...currentDesign.crystals];\n        const temp = newCrystals[fromIndex];\n        newCrystals[fromIndex] = newCrystals[index];\n        newCrystals[index] = temp;\n\n        setCurrentDesign(prev => ({\n          ...prev,\n          crystals: newCrystals\n        }));\n      }\n      \n      setIsDragging(false);\n    }\n  };\n\n  const handleBeadRemove = (index) => {\n    setCurrentDesign(prev => ({\n      ...prev,\n      crystals: prev.crystals.filter((_, i) => i !== index)\n    }));\n    setSelectedCrystal(null);\n  };\n\n  const handleTrashDragEnter = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.add('drag-over');\n  };\n\n  const handleTrashDragLeave = (e) => {\n    e.currentTarget.classList.remove('drag-over');\n  };\n\n  const handleTrashDrop = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n    \n    const index = parseInt(e.dataTransfer.getData('moveBeadIndex'));\n    if (!isNaN(index)) {\n      handleBeadRemove(index);\n    }\n    setIsDragging(false);\n  };\n\n  const calculateMiniBeadPosition = (index, total, radius) => {\n    const angle = (index / total) * 360;\n    return {\n      x: radius * Math.cos(angle * Math.PI / 180),\n      y: radius * Math.sin(angle * Math.PI / 180),\n      angle: angle\n    };\n  };\n\n  const handleSizeChange = (sizeInCm) => {\n    const newSizeInMm = sizeInCm * 10;\n    const currentCrystals = [...currentDesign.crystals];\n    \n    // 計算目前水晶總長度\n    let totalCrystalLength = currentCrystals.reduce((sum, crystal) => sum + crystal.size, 0);\n    \n    // 如果新的手圍尺寸小於目前水晶總長度，從後面開始移除水晶\n    while (totalCrystalLength > newSizeInMm && currentCrystals.length > 0) {\n      const removedCrystal = currentCrystals.pop();\n      totalCrystalLength -= removedCrystal.size;\n    }\n\n    setCurrentDesign(prev => ({\n      ...prev,\n      size: newSizeInMm,\n      crystals: currentCrystals\n    }));\n  };\n\n  const handleCustomSize = (e) => {\n    const value = e.target.value;\n    setCustomValue(value);\n  };\n\n  const handleCustomSubmit = () => {\n    const valueInCm = parseFloat(customValue);\n    if (!isNaN(valueInCm) && valueInCm >= 8 && valueInCm <= 30) {\n      handleSizeChange(valueInCm);\n    }\n    setShowCustomInput(false);\n  };\n\n  const handleCustomClick = () => {\n    setShowCustomInput(true);\n    setCustomValue(currentSizeInCm.toString());\n  };\n\n  const handleClearAll = () => {\n    setCurrentDesign(prev => ({\n      ...prev,\n      crystals: []\n    }));\n    setBeadPositions([]);\n  };\n\n  const handleMobileActionClick = (action) => {\n    switch(action) {\n      case 'info':\n        // 顯示水晶詳情\n        // 設置選中的水晶，用於在 ProductInfo 中顯示\n        setSelectedCrystal(currentDesign.crystals[selectedBeadIndex]);\n        setShowModal(true);\n        break;\n      case 'move':\n        // 進入移動模式\n        setMoveMode(true);\n        setSourceIndex(selectedBeadIndex);\n        setShowMobileMenu(false); // 關閉菜單，但保持移動模式\n        return; // 提前返回，不執行下面的 setShowMobileMenu(false)\n      case 'delete':\n        // 刪除選中的水晶\n        handleBeadRemove(selectedBeadIndex);\n        break;\n      case 'clearAll':\n        // 顯示確認對話框而不是直接刪除\n        setShowDeleteConfirm(true);\n        return; // 提前返回，不關閉菜單\n      default:\n        break;\n    }\n    // 關閉操作菜單\n    setShowMobileMenu(false);\n  };\n\n  const handleConfirmClearAll = () => {\n    handleClearAll();\n    setShowDeleteConfirm(false);\n    setShowMobileMenu(false);\n  };\n\n  const handleCancelClearAll = () => {\n    setShowDeleteConfirm(false);\n  };\n\n  const handleMoveBeadClick = () => {\n    // 進入移動模式\n    setMoveMode(true);\n    // 關閉模態框\n    setShowModal(false);\n  };\n\n  // 修改添加水晶的函數，確保自動調整手圍尺寸\n  const handleAddCrystal = (crystal) => {\n    // 檢查是否還有剩餘空間\n    const currentCrystals = [...currentDesign.crystals];\n    const currentUsedLength = currentCrystals.reduce((sum, c) => sum + c.size, 0);\n    const remainingSpace = currentDesign.size - currentUsedLength;\n    \n    // 如果剩餘空間不足，自動調整手圍尺寸\n    if (crystal.size > remainingSpace) {\n      const newSize = currentDesign.size + (crystal.size - remainingSpace) + 2; // 加2mm作為緩衝\n      \n      // 更新設計，同時添加新水晶和調整手圍尺寸\n      setCurrentDesign(prev => ({\n        ...prev,\n        size: newSize,\n        crystals: [...prev.crystals, crystal]\n      }));\n      \n      console.log(`添加水晶後自動調整手圍尺寸：從 ${currentDesign.size}mm 到 ${newSize}mm`);\n    } else {\n      // 如果空間足夠，直接添加水晶\n      setCurrentDesign(prev => ({\n        ...prev,\n        crystals: [...prev.crystals, crystal]\n      }));\n    }\n  };\n\n  // 修改 renderConnectionLines 函數，使連接線更加隱蔽\n  const renderConnectionLines = () => {\n    if (beadPositions.length < 2) return null;\n    \n    return beadPositions.map((bead, index) => {\n      const nextIndex = (index + 1) % beadPositions.length;\n      const nextBead = beadPositions[nextIndex];\n      \n      // 計算兩個水晶的位置\n      const angle1 = bead.angle * Math.PI / 180;\n      const angle2 = nextBead.angle * Math.PI / 180;\n      \n      // 計算水晶邊緣的位置，而不是中心點\n      const radius1 = bead.radius;\n      const radius2 = nextBead.radius;\n      \n      const x1 = Math.cos(angle1) * radius1;\n      const y1 = Math.sin(angle1) * radius1;\n      const x2 = Math.cos(angle2) * radius2;\n      const y2 = Math.sin(angle2) * radius2;\n      \n      // 計算連線長度和角度\n      const length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      const angle = Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\n      \n      // 根據手圍尺寸調整連接線的粗細\n      const lineThickness = bead.sizeAdjustFactor ? 1 * bead.sizeAdjustFactor : 1;\n      \n      return (\n        <ConnectionLine \n          key={`connection-${index}`}\n          style={{\n            width: `${length}px`,\n            height: `${lineThickness}px`,\n            left: `calc(50% + ${x1}px)`,\n            top: `calc(50% + ${y1}px)`,\n            transform: `rotate(${angle}deg)`,\n            opacity: 0.3, // 降低透明度，使連接線更加隱蔽\n            background: 'linear-gradient(to right, rgba(255,255,255,0.7), rgba(220,220,220,0.7))'\n          }}\n        />\n      );\n    });\n  };\n\n  // 修改 renderCrystals 函數，確保水晶圖片正確顯示\n  const renderCrystals = () => {\n    return beadPositions.map((bead, index) => (\n      <CrystalBead\n        key={index}\n        displaySize={bead.displaySize}\n        angle={bead.angle}\n        radius={bead.radius}\n        size={bead.size}\n        moveMode={moveMode}\n        isSource={sourceIndex === index}\n        isTarget={moveMode && selectedBeadIndex === index && sourceIndex !== index}\n        onClick={(e) => handleBeadClick(bead, index, e)}\n        draggable={isDraggingEnabled}\n        onDragStart={(e) => handleBeadDragStart(e, index)}\n        onDragEnd={handleBeadDragEnd}\n        onDragOver={(e) => handleBeadDragOver(e, index)}\n        onDrop={(e) => handleBeadDrop(e, index)}\n      >\n        <BeadImage \n          src={bead.image} \n          alt={`Crystal ${index}`} \n          onError={(e) => {\n            console.error(`Failed to load image: ${bead.image}`);\n            e.target.src = 'default-crystal.png';\n          }}\n        />\n        <BeadGloss />\n      </CrystalBead>\n    ));\n  };\n\n  // 添加 handleSave 函數\n  const handleSave = () => {\n    // 生成唯一ID\n    const designId = Date.now().toString();\n    \n    // 創建新的設計對象\n    const designToSave = {\n      ...currentDesign,\n      id: designId,\n      savedAt: new Date().toISOString()\n    };\n    \n    // 更新已保存的設計列表\n    setSavedDesigns([...savedDesigns, designToSave]);\n  };\n\n  // 添加 handleCancelMove 函數\n  const handleCancelMove = () => {\n    setMoveMode(false);\n    setSourceIndex(null);\n    setSelectedBeadIndex(null);\n  };\n\n  return (\n    <>\n      <DisplayContainer>\n        <ImageContainer>\n          <SaveButtonContainer>\n            <SaveButton onClick={handleSave}>\n              <img src={heartIcon} alt=\"儲存樣式\" />\n            </SaveButton>\n          </SaveButtonContainer>\n          <ClearAllButton onClick={handleClearAll}>\n            清除全部\n          </ClearAllButton>\n          \n          {/* 添加移動模式提示和取消按鈕 */}\n          {moveMode && (\n            <MoveModeTip>\n              請選擇要交換位置的水晶\n              <CancelMoveButton onClick={handleCancelMove}>\n                取消移動\n              </CancelMoveButton>\n            </MoveModeTip>\n          )}\n          \n          <BraceletContainer>\n            {/* 渲染連接線 */}\n            {renderConnectionLines()}\n            \n            {/* 渲染水晶 */}\n            {renderCrystals()}\n          </BraceletContainer>\n          \n          {/* 手圍尺寸選擇器 */}\n          <ProductSizeContainer>\n            <ProductSizeTitle>\n              手圍尺寸\n              <ProductUnitLabel>(cm)</ProductUnitLabel>\n            </ProductSizeTitle>\n            <ProductSizeOptions>\n              {sizesInCm.map(size => (\n                <ProductSizeButton\n                  key={size}\n                  active={currentSizeInCm === size}\n                  onClick={() => handleSizeChange(size)}\n                >\n                  {size}\n                </ProductSizeButton>\n              ))}\n              \n              <ProductCustomButton onClick={handleCustomClick}>\n                自訂\n              </ProductCustomButton>\n            </ProductSizeOptions>\n            \n            {showCustomInput && (\n              <ProductCustomInputContainer>\n                <ProductCustomInput\n                  type=\"number\"\n                  step=\"0.1\"\n                  min=\"8\"\n                  max=\"30\"\n                  value={customValue}\n                  onChange={handleCustomSize}\n                  onBlur={handleCustomSubmit}\n                  autoFocus\n                />\n                <ProductUnit>cm</ProductUnit>\n              </ProductCustomInputContainer>\n            )}\n            \n            <totalUsedLength>\n              目前長度：{(usedLength / 10).toFixed(1)} cm\n            </totalUsedLength>\n          </ProductSizeContainer>\n          \n          <TrashIcon \n            show={isDragging} \n            onDragEnter={handleTrashDragEnter}\n            onDragLeave={handleTrashDragLeave}\n            onDrop={handleTrashDrop}\n          >\n            🗑️\n          </TrashIcon>\n        </ImageContainer>\n      </DisplayContainer>\n      \n      {/* 桌面版的浮動預覽 */}\n      <FloatingPreview show={showFloating && !isMobile}>\n        <MiniPreviewContainer>\n          {beadPositions.map((bead, index) => {\n            const position = calculateMiniBeadPosition(\n              index,\n              beadPositions.length,\n              30\n            );\n            \n            return (\n              <MiniCrystalBead\n                key={`mini-${bead.id}-${index}`}\n                src={bead.image}\n                displaySize={bead.displaySize}\n                angle={position.angle}\n                radius={30}\n                alt={bead.name}\n                draggable={false}\n                style={{\n                  transform: `\n                    translate(-50%, -50%)\n                    rotate(${position.angle}deg)\n                    translateX(30px)\n                  `\n                }}\n              />\n            );\n          })}\n        </MiniPreviewContainer>\n      </FloatingPreview>\n      \n      {/* 移動設備操作菜單 */}\n      {showMobileMenu && selectedBeadIndex !== null && !moveMode && (\n        <MobileActionMenu>\n          <MobileActionButton onClick={() => handleMobileActionClick('info')}>\n            顯示資訊\n          </MobileActionButton>\n          <MobileActionButton onClick={() => handleMobileActionClick('move')}>\n            移動位置\n          </MobileActionButton>\n          <MobileActionButton onClick={() => handleMobileActionClick('delete')}>\n            刪除水晶\n          </MobileActionButton>\n          <MobileActionButton onClick={() => handleMobileActionClick('clearAll')}>\n            全部刪除\n          </MobileActionButton>\n          <MobileActionButton onClick={() => setShowMobileMenu(false)}>\n            取消\n          </MobileActionButton>\n          \n          {/* 確認刪除對話框 */}\n          {showDeleteConfirm && (\n            <DeleteConfirmDialog>\n              <DeleteConfirmMessage>確定要刪除所有水晶嗎？</DeleteConfirmMessage>\n              <DeleteConfirmButtons>\n                <ConfirmButton onClick={handleConfirmClearAll}>確定</ConfirmButton>\n                <CancelButton onClick={handleCancelClearAll}>取消</CancelButton>\n              </DeleteConfirmButtons>\n            </DeleteConfirmDialog>\n          )}\n        </MobileActionMenu>\n      )}\n      \n      {/* 背景遮罩 */}\n      <Backdrop show={showMobileMenu && !moveMode} onClick={() => setShowMobileMenu(false)} />\n\n      <Modal show={showModal}>\n        <ModalContent onClick={e => e.stopPropagation()}>\n          <CloseButton onClick={() => setShowModal(false)}>×</CloseButton>\n          <ProductInfo />\n          \n          {/* 添加移動按鈕 */}\n          <ModalActions>\n            <ActionButton onClick={handleMoveBeadClick}>\n              移動位置\n            </ActionButton>\n            <ActionButton onClick={() => {\n              handleBeadRemove(selectedBeadIndex);\n              setShowModal(false);\n            }}>\n              刪除水晶\n            </ActionButton>\n          </ModalActions>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProductDisplay; ","import styled from 'styled-components';\nimport CrystalTable from '../components/CrystalTable';\n\nconst PageContainer = styled.div`\n  padding: 20px;\n`;\n\nconst PageTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n  text-align: center;\n`;\n\nconst CrystalPage = () => {\n  return (\n    <PageContainer>\n      <PageTitle>精選水晶，能量加持</PageTitle>\n      <CrystalTable />\n    </PageContainer>\n  );\n};\n\nexport default CrystalPage; ","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\nimport userIcon from '../../assets/Logo/user.png';\nimport crystalIcon from '../../assets/Logo/freeze.png';\nimport accessoryIcon from '../../assets/Logo/jewel.png';\nimport helperIcon from '../../assets/Logo/witch.png';\nimport { useNavigate } from 'react-router-dom';\n\nconst NavContainer = styled.div`\n  display: none;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: white;\n  box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n  z-index: 1000;\n  \n  @media (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst NavItems = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  position: relative;\n`;\n\nconst NavItem = styled.div`\n  padding: 12px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  flex: 1;\n  color: ${props => props.active ? '#4a90e2' : '#666'};\n  border-top: 3px solid ${props => props.active ? '#4a90e2' : 'transparent'};\n  \n  &:hover {\n    color: #4a90e2;\n  }\n`;\n\nconst CrystalIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst AccessoryIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst HelperIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst UserIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  \n  &:hover img {\n    fill: #4a90e2;\n  }\n`;\n\nconst Label = styled.div`\n  font-size: 12px;\n`;\n\n// 預覽容器，直接放在導航欄中間\nconst PreviewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 100px;\n  margin-top: -40px; // 向上偏移，使其部分顯示在導航欄上方\n  background: white;\n  border-radius: 50%;\n  box-shadow: 0 -2px 8px rgba(0,0,0,0.1);\n  z-index: 1001;\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\n  position: ${props => props.show ? 'relative' : 'absolute'};\n  flex: ${props => props.show ? 1 : 'none'};\n`;\n\nconst MiniPreviewContainer = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: 1px dashed #ccc;\n`;\n\nconst MiniCrystalBead = styled.img`\n  position: absolute;\n  width: ${props => props.displaySize * 0.45}px;\n  height: ${props => props.displaySize * 0.45}px;\n  border-radius: 50%;\n  transform-origin: center;\n  left: 50%;\n  top: 50%;\n  object-fit: cover;\n`;\n\nconst MobileNavigation = ({ currentCategory, onCategoryChange }) => {\n  const { currentDesign } = useDesign();\n  const [beadPositions, setBeadPositions] = useState([]);\n  const navigate = useNavigate();\n\n  // 根據當前類別決定是否顯示預覽\n  const showPreview = currentCategory === 'crystal' || currentCategory === 'accessory';\n\n  useEffect(() => {\n    if (currentDesign.crystals.length > 0) {\n      const MM_TO_PIXEL = 3.5;\n      \n      // 使用圓形排列方式，計算每個水晶的位置\n      const positions = currentDesign.crystals.map((crystal, index) => {\n        // 計算每個水晶的角度位置 - 從頂部開始順時針排列\n        const angle = ((index / currentDesign.crystals.length) * 360) - 90;\n        \n        // 計算顯示尺寸\n        const displaySize = crystal.size * MM_TO_PIXEL;\n\n        return {\n          ...crystal,\n          angle,\n          displaySize\n        };\n      });\n      \n      setBeadPositions(positions);\n    } else {\n      setBeadPositions([]);\n    }\n  }, [currentDesign]);\n\n  const calculateMiniBeadPosition = (index, total, radius) => {\n    const angle = ((index / total) * 360) - 90;\n    return { angle };\n  };\n\n  const handleCategoryChange = (category) => {\n    if (category === 'helper') {\n      // 只清除過濾器，不進行導航\n      localStorage.removeItem('crystal_color_filter');\n      localStorage.removeItem('filter_timestamp');\n      localStorage.removeItem('redirect_to_helper');\n      localStorage.removeItem('helper_page');\n    }\n    \n    onCategoryChange(category);\n  };\n\n  return (\n    <NavContainer>\n      <NavItems>\n      <NavItem \n          active={currentCategory === 'profile'} \n          onClick={() => onCategoryChange('profile')}\n        >\n          <UserIcon active={currentCategory === 'profile'}>\n            <img src={userIcon} alt=\"個人\" />\n          </UserIcon>\n          <Label>個人</Label>\n        </NavItem>\n        \n        <NavItem \n          active={currentCategory === 'crystal'} \n          onClick={() => onCategoryChange('crystal')}\n        >\n          <CrystalIcon active={currentCategory === 'crystal'}>\n            <img src={crystalIcon} alt=\"水晶\" />\n          </CrystalIcon>\n          <Label>水晶</Label>\n        </NavItem>\n                \n        <PreviewContainer show={showPreview}>\n          <MiniPreviewContainer>\n            {beadPositions.map((bead, index) => {\n              const position = calculateMiniBeadPosition(\n                index,\n                beadPositions.length,\n                30\n              );\n              \n              return (\n                <MiniCrystalBead\n                  key={`mini-${bead.id}-${index}`}\n                  src={bead.image}\n                  displaySize={bead.displaySize}\n                  angle={position.angle}\n                  radius={30}\n                  alt={bead.name}\n                  style={{\n                    transform: `\n                      translate(-50%, -50%)\n                      rotate(${position.angle}deg)\n                      translateX(30px)\n                    `\n                  }}\n                />\n              );\n            })}\n          </MiniPreviewContainer>\n        </PreviewContainer>\n        <NavItem \n          active={currentCategory === 'accessory'} \n          onClick={() => onCategoryChange('accessory')}\n        >\n          <AccessoryIcon active={currentCategory === 'accessory'}>\n            <img src={accessoryIcon} alt=\"配件\" />\n          </AccessoryIcon>\n          <Label>配件</Label>\n        </NavItem>\n\n        \n        <NavItem \n          active={currentCategory === 'helper'} \n          onClick={() => handleCategoryChange('helper')}\n        >\n          <HelperIcon active={currentCategory === 'helper'}>\n            <img src={helperIcon} alt=\"小幫手\" />\n          </HelperIcon>\n          <Label>小幫手</Label>\n        </NavItem>\n      </NavItems>\n    </NavContainer>\n  );\n};\n\nexport default MobileNavigation; ","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport CategoryTabs from '../components/CategoryTabs';\nimport CategoryContent from '../components/CategoryContent';\nimport ProductDisplay from '../components/ProductDisplay';\nimport SavedDesigns from '../components/SavedDesigns';\nimport { useDesign } from '../contexts/DesignContext';\nimport CrystalPage from './CrystalPage';\nimport AccessoryPage from './AccessoryPage';\nimport HelperPage from './HelperPage';\nimport ProfilePage from './ProfilePage';\nimport MobileNavigation from '../components/MobileNavigation';\nimport { useNavigate } from 'react-router-dom';\n\nconst PageLayout = styled.div`\n  display: grid;\n  gap: 20px;\n  padding: 20px;\n  min-height: calc(100vh - 60px);\n  \n  @media (min-width: 768px) {\n    grid-template-columns: 400px 1fr;\n  }\n  \n  @media (max-width: 767px) {\n    grid-template-columns: 1fr;\n    padding-bottom: 70px; /* 為底部導航留出空間 */\n  }\n`;\n\nconst LeftPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  \n  @media (max-width: 767px) {\n    display: ${props => props.isMobile && props.currentCategory !== 'profile' ? 'none' : 'flex'};\n  }\n`;\n\nconst RightPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  overflow-y: auto;\n  max-height: calc(100vh - 100px);\n  \n  @media (max-width: 767px) {\n    max-height: none;\n  }\n`;\n\nconst TabsContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst SavedDesignsWrapper = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 767px) {\n    display: none;\n  }\n`;\n\nconst OrderSection = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst TotalPrice = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  margin: 15px 0;\n  text-align: right;\n  color: #333;\n`;\n\nconst OrderButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #45a049;\n  }\n`;\n\nconst OrderForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-height: 100px;\n`;\n\nconst MainPage = () => {\n  const [currentCategory, setCurrentCategory] = useState('crystal');\n  const [showOrderForm, setShowOrderForm] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n  const { currentDesign } = useDesign();\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 767);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    console.log('Current category changed to:', currentCategory);\n  }, [currentCategory]);\n\n  useEffect(() => {\n    // 檢查是否需要重定向到 helper 頁面\n    const redirectToHelper = localStorage.getItem('redirect_to_helper');\n    const helperPage = localStorage.getItem('helper_page');\n    \n    if (redirectToHelper === 'true') {\n      // 清除重定向標記，防止循環\n      localStorage.removeItem('redirect_to_helper');\n      \n      // 設置當前類別為 helper\n      setCurrentCategory('helper');\n      \n      console.log(\"已切換到 helper 頁面，頁面類型:\", helperPage);\n    }\n  }, []);\n\n  const calculateTotal = () => {\n    if (!currentDesign || !currentDesign.crystals) {\n      return 0;\n    }\n    return currentDesign.crystals.reduce((sum, crystal) => sum + crystal.price, 0);\n  };\n\n  const handleOrder = () => {\n    setShowOrderForm(true);\n  };\n\n  const handleSubmitOrder = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    // 這裡可以處理訂單提交邏輯\n    setOrderSuccess(true);\n    setShowOrderForm(false);\n  };\n\n  const handleCategoryChange = (category) => {\n    console.log('Changing category to:', category);\n    setCurrentCategory(category);\n  };\n\n  const renderMobileContent = () => {\n    console.log('Rendering mobile content for category:', currentCategory);\n    switch (currentCategory) {\n      case 'profile':\n        return <ProfilePage />;\n      case 'crystal':\n        return <CrystalPage />;\n      case 'accessory':\n        return <AccessoryPage />;\n      case 'helper':\n        return <HelperPage />;\n      default:\n        return <CrystalPage />;\n    }\n  };\n\n  const renderDesktopContent = () => {\n    console.log('Rendering desktop content for category:', currentCategory);\n    switch (currentCategory) {\n      case 'crystal':\n        return <CrystalPage />;\n      case 'accessory':\n        return <AccessoryPage />;\n      case 'helper':\n        return <HelperPage />;\n      default:\n        return <CrystalPage />;\n    }\n  };\n\n  return (\n    <>\n      <PageLayout>\n        <LeftPanel isMobile={isMobile} currentCategory={currentCategory}>\n          <ProductDisplay />\n          <SavedDesignsWrapper>\n            <SavedDesigns />\n            <TotalPrice>\n              總金額: NT$ {calculateTotal()}\n            </TotalPrice>\n            <OrderButton onClick={handleOrder}>\n              下單\n            </OrderButton>\n            \n            {showOrderForm && (\n              <OrderForm onSubmit={handleSubmitOrder}>\n                <Input \n                  name=\"name\" \n                  placeholder=\"姓名\" \n                  required \n                />\n                <Input \n                  name=\"email\" \n                  type=\"email\" \n                  placeholder=\"Email\" \n                  required \n                />\n                <TextArea \n                  name=\"address\" \n                  placeholder=\"送貨地址\" \n                  required \n                />\n                <OrderButton type=\"submit\">\n                  確認送出\n                </OrderButton>\n              </OrderForm>\n            )}\n            \n            {orderSuccess && (\n              <div style={{ \n                color: '#4CAF50', \n                textAlign: 'center', \n                marginTop: '10px' \n              }}>\n                訂購成功！\n              </div>\n            )}\n          </SavedDesignsWrapper>\n        </LeftPanel>\n        <RightPanel>\n          {isMobile ? (\n            renderMobileContent()\n          ) : (\n            <>\n              <TabsContainer>\n                <CategoryTabs \n                  currentCategory={currentCategory} \n                  onCategoryChange={handleCategoryChange} \n                />\n              </TabsContainer>\n              {renderDesktopContent()}\n            </>\n          )}\n        </RightPanel>\n      </PageLayout>\n      \n      {isMobile && (\n        <MobileNavigation \n          currentCategory={currentCategory} \n          onCategoryChange={handleCategoryChange} \n        />\n      )}\n    </>\n  );\n};\n\nexport default MainPage; ","import styled from 'styled-components';\nimport { useDesign } from '../../contexts/DesignContext';\nimport { useState } from 'react';\n\nconst SizeSelectorContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 12px;\n  font-size: 16px;\n  color: #333;\n  display: flex;\n  align-items: center;\n`;\n\nconst UnitLabel = styled.span`\n  font-size: 14px;\n  color: #666;\n  margin-left: 5px;\n  font-weight: normal;\n`;\n\nconst SizeOptions = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst SizeButton = styled.button`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: ${props => props.active ? '#666' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#333'};\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  font-size: 16px;\n  \n  &:hover {\n    background: ${props => props.active ? '#666' : '#f0f0f0'};\n  }\n`;\n\nconst CustomButton = styled(SizeButton)`\n  width: 80px;\n  height: 50px;\n  border-radius: 25px;\n  padding: 0 15px;\n`;\n\nconst CustomInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nconst CustomInput = styled.input`\n  width: 80px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n`;\n\nconst Unit = styled.span`\n  margin-left: 8px;\n  color: #666;\n  font-size: 14px;\n`;\n\nconst SizeSelector = () => {\n  const { currentDesign, setCurrentDesign } = useDesign();\n  const [showCustomInput, setShowCustomInput] = useState(false);\n  const [customValue, setCustomValue] = useState('');\n  \n  // 手圍尺寸（cm）\n  const sizesInCm = [14, 15, 16, 17, 18];\n  \n  // 將 mm 轉換為 cm 顯示\n  const currentSizeInCm = currentDesign.size / 10;\n\n  const handleSizeChange = (sizeInCm) => {\n    // 將 cm 轉換為 mm 儲存\n    setCurrentDesign(prev => ({\n      ...prev,\n      size: sizeInCm * 10\n    }));\n    setShowCustomInput(false);\n  };\n\n  const handleCustomSize = (e) => {\n    const value = e.target.value;\n    setCustomValue(value);\n  };\n\n  const handleCustomSubmit = () => {\n    const valueInCm = parseFloat(customValue);\n    if (!isNaN(valueInCm) && valueInCm >= 8 && valueInCm <= 30) {\n      handleSizeChange(valueInCm);\n    }\n    setShowCustomInput(false);\n  };\n\n  const handleCustomClick = () => {\n    setShowCustomInput(true);\n    setCustomValue(currentSizeInCm.toString());\n  };\n\n  return (\n    <SizeSelectorContainer>\n      <Title>\n        手圍尺寸\n        <UnitLabel>(cm)</UnitLabel>\n      </Title>\n      <SizeOptions>\n        {sizesInCm.map(size => (\n          <SizeButton\n            key={size}\n            active={currentSizeInCm === size}\n            onClick={() => handleSizeChange(size)}\n          >\n            {size}\n          </SizeButton>\n        ))}\n        \n        <CustomButton onClick={handleCustomClick}>\n          自訂\n        </CustomButton>\n      </SizeOptions>\n      \n      {showCustomInput && (\n        <CustomInputContainer>\n          <CustomInput\n            type=\"number\"\n            step=\"0.1\"\n            min=\"8\"\n            max=\"30\"\n            value={customValue}\n            onChange={handleCustomSize}\n            onBlur={handleCustomSubmit}\n            autoFocus\n          />\n          <Unit>cm</Unit>\n        </CustomInputContainer>\n      )}\n    </SizeSelectorContainer>\n  );\n};\n\nexport default SizeSelector; ","import React from 'react';\nimport styled from 'styled-components';\nimport SavedDesigns from '../components/SavedDesigns';\nimport { useDesign } from '../contexts/DesignContext';\nimport SizeSelector from '../components/SizeSelector';\nimport { useState } from 'react';\n\nconst ProfileContainer = styled.div`\n  padding: 20px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n`;\n\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\n  margin-bottom: 16px;\n  color: #333;\n`;\n\nconst TotalPrice = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  margin: 15px 0;\n  text-align: right;\n  color: #333;\n`;\n\nconst OrderButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #45a049;\n  }\n`;\n\nconst OrderForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-height: 100px;\n`;\n\nconst ProfilePage = () => {\n  const { currentDesign } = useDesign();\n  const [showOrderForm, setShowOrderForm] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n\n  const calculateTotal = () => {\n    return currentDesign.crystals.reduce((sum, crystal) => sum + crystal.price, 0);\n  };\n\n  const handleOrder = () => {\n    setShowOrderForm(true);\n  };\n\n  const handleSubmitOrder = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    // 這裡可以處理訂單提交邏輯\n    setOrderSuccess(true);\n    setShowOrderForm(false);\n  };\n\n  return (\n    <ProfileContainer>\n      <Section>\n        <SavedDesigns />\n      </Section>\n      \n      <Section>\n        <Title>訂購資訊</Title>\n        <TotalPrice>\n          總金額: NT$ {calculateTotal()}\n        </TotalPrice>\n        <OrderButton onClick={handleOrder}>\n          下單\n        </OrderButton>\n        \n        {showOrderForm && (\n          <OrderForm onSubmit={handleSubmitOrder}>\n            <Input \n              name=\"name\" \n              placeholder=\"姓名\" \n              required \n            />\n            <Input \n              name=\"email\" \n              type=\"email\" \n              placeholder=\"Email\" \n              required \n            />\n            <TextArea \n              name=\"address\" \n              placeholder=\"送貨地址\" \n              required \n            />\n            <OrderButton type=\"submit\">\n              確認送出\n            </OrderButton>\n          </OrderForm>\n        )}\n        \n        {orderSuccess && (\n          <div style={{ \n            color: '#4CAF50', \n            textAlign: 'center', \n            marginTop: '10px' \n          }}>\n            訂購成功！\n          </div>\n        )}\n      </Section>\n    </ProfileContainer>\n  );\n};\n\nexport default ProfilePage; "],"names":["SavedContainer","styled","div","Title","h3","SavedList","SavedItem","PreviewContainer","BraceletPreview","PreviewBead","img","props","size","radius","angle","DeleteButton","button","SavedDesigns","currentDesign","setCurrentDesign","savedDesigns","setSavedDesigns","useDesign","renderBraceletPreview","design","wristCircumference","crystals","map","crystal","index","slice","reduce","sum","c","beadDisplaySize","Math","PI","_jsx","src","image","alt","name","onError","e","target","id","_jsxs","children","onClick","handleLoad","handleDelete","designId","stopPropagation","updatedDesigns","filter","localStorage","setItem","JSON","stringify","TabsContainer","Tab","active","_ref","currentCategory","onCategoryChange","useNavigate","handleTabClick","category","removeItem","GridView","CrystalCard","CrystalImage","FilterContainer","FilterSelect","select","ClearFilterButton","CrystalName","CrystalInfo","CrystalTable","sortField","setSortField","useState","sortDirection","setSortDirection","filters","setFilters","savedFilters","getItem","parse","color","energy","price","useEffect","filterOptions","Set","calculateUsedLength","filteredAndSortedCrystals","wouldExceedMaxLimit","power","sort","a","b","direction","handleDragStart","dataTransfer","setData","_Fragment","Object","entries","key","options","value","onChange","option","handleClearFilters","emptyFilters","calculateRemainingSpace","usedLength","max","currentCrystals","totalLength","prev","handleCrystalClick","style","opacity","cursor","draggable","onDragStart","PageContainer","h2","AccessoryPage","InfoContainer","Section","SectionTitle","PropertyList","ul","PropertyItem","li","ProductInfo","selectedCrystal","descriptions","description","zodiac","join","chakra","length","desc","DisplayContainer","ImageContainer","BraceletContainer","ConnectionLine","CrystalBead","displaySize","moveMode","isSource","isTarget","BeadImage","BeadGloss","TrashIcon","show","FloatingPreview","MiniPreviewContainer","MiniCrystalBead","ClearAllButton","MobileActionMenu","MobileActionButton","Backdrop","Modal","ModalContent","CloseButton","SaveButtonContainer","SaveButton","ProductSizeContainer","ProductSizeTitle","ProductUnitLabel","span","ProductSizeOptions","ProductSizeButton","ProductCustomButton","ProductCustomInputContainer","ProductCustomInput","input","ProductUnit","MoveModeTip","CancelMoveButton","ModalActions","ActionButton","DeleteConfirmDialog","DeleteConfirmMessage","p","DeleteConfirmButtons","ConfirmButton","CancelButton","onCrystalClick","setSelectedCrystal","beadPositions","setBeadPositions","setDisplaySize","draggedBead","setDraggedBead","isSpaceFull","setIsSpaceFull","isDragging","setIsDragging","dragStartTime","setDragStartTime","showFloating","setShowFloating","currentSizeInCm","inputValue","setInputValue","toString","sizeError","setSizeError","selectedBeadIndex","setSelectedBeadIndex","showMobileMenu","setShowMobileMenu","isDraggingEnabled","setIsDraggingEnabled","setMoveMode","sourceIndex","setSourceIndex","showModal","setShowModal","isMobile","setIsMobile","window","innerWidth","showCustomInput","setShowCustomInput","customValue","setCustomValue","setUsedLength","showDeleteConfirm","setShowDeleteConfirm","totalUsedLength","newSize","ceil","console","log","totalBeads","sizeRatio","sizeAdjustFactor","sqrt","adjustedRadius","positions","totalAngleOccupation","angleOccupations","i","minSize","maxSize","min","angleOccupation","push","overlapFactor","adjustedTotalAngleOccupation","currentAngle","handleScroll","shouldShow","scrollY","addEventListener","removeEventListener","handleResize","handleBeadDragEnd","handleBeadRemove","_","handleSizeChange","sizeInCm","newSizeInMm","totalCrystalLength","pop","handleClearAll","handleMobileActionClick","action","handleSave","Date","now","designToSave","savedAt","toISOString","heartIcon","handleCancelMove","bead","nextIndex","nextBead","angle1","angle2","radius1","radius2","x1","cos","y1","sin","x2","y2","pow","atan2","lineThickness","width","height","left","top","transform","background","handleBeadClick","event","preventDefault","newCrystals","temp","handleBeadDragStart","onDragEnd","onDragOver","handleBeadDragOver","onDrop","handleBeadDrop","moveBeadIndex","getData","fromIndex","parseInt","error","handleCustomClick","type","step","onBlur","handleCustomSubmit","valueInCm","parseFloat","isNaN","autoFocus","toFixed","onDragEnter","currentTarget","classList","add","onDragLeave","remove","position","calculateMiniBeadPosition","total","x","y","handleConfirmClearAll","handleCancelClearAll","handleMoveBeadClick","PageTitle","CrystalPage","NavContainer","NavItems","NavItem","CrystalIcon","AccessoryIcon","HelperIcon","UserIcon","Label","showPreview","MM_TO_PIXEL","userIcon","crystalIcon","accessoryIcon","handleCategoryChange","helperIcon","PageLayout","LeftPanel","RightPanel","SavedDesignsWrapper","TotalPrice","OrderButton","OrderForm","form","Input","TextArea","textarea","MainPage","setCurrentCategory","showOrderForm","setShowOrderForm","orderSuccess","setOrderSuccess","redirectToHelper","helperPage","ProductDisplay","handleOrder","onSubmit","FormData","placeholder","required","textAlign","marginTop","renderMobileContent","ProfilePage","HelperPage","CategoryTabs","renderDesktopContent","MobileNavigation","SizeButton","ProfileContainer"],"sourceRoot":""}